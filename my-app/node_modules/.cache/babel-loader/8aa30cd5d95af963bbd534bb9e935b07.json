{"ast":null,"code":"import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n}\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n    if (rh > 2 * HALF_PI * this.a) {\n      return;\n    }\n\n    z = rh / this.a;\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n    lon = this.long0;\n\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + p.y * sinz * this.cos_p12 / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n}\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["adjust_lon","HALF_PI","EPSLN","mlfn","e0fn","e1fn","e2fn","e3fn","gN","asinz","imlfn","init","sin_p12","Math","sin","lat0","cos_p12","cos","forward","p","lon","x","lat","y","sinphi","cosphi","dlon","long0","e0","e1","e2","e3","Mlp","Ml","tanphi","Nl1","Nl","psi","Az","G","H","GH","Hs","c","kp","cos_c","s","s2","s3","s4","s5","sphere","abs","x0","a","y0","acos","es","e","atan","atan2","tan","asin","PI","sqrt","inverse","rh","z","sinz","cosz","con","M","N1","cosAz","tmp","A","B","D","Ee","F","sinpsi","pow","names"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/proj4/lib/projections/aeqd.js"],"sourcesContent":["import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}