{"ast":null,"code":"export default parseString;\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/; // const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\n\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\n\nParser.prototype.readCharicter = function () {\n  var char = this.text[this.place++];\n\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n\n      char = this.text[this.place++];\n    }\n  }\n\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n\n    case KEYWORD:\n      return this.keyword(char);\n\n    case QUOTED:\n      return this.quoted(char);\n\n    case AFTERQUOTE:\n      return this.afterquote(char);\n\n    case NUMBER:\n      return this.number(char);\n\n    case ENDED:\n      return;\n  }\n};\n\nParser.prototype.afterquote = function (char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in afterquote yet, index ' + this.place);\n};\n\nParser.prototype.afterItem = function (char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (char === ']') {\n    this.level--;\n\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\n\nParser.prototype.number = function (char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in number yet, index ' + this.place);\n};\n\nParser.prototype.quoted = function (char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n\n  this.word += char;\n  return;\n};\n\nParser.prototype.keyword = function (char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in keyword yet, index ' + this.place);\n};\n\nParser.prototype.neutral = function (char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in neutral yet, index ' + this.place);\n};\n\nParser.prototype.output = function () {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n\n  if (this.state === ENDED) {\n    return this.root;\n  }\n\n  throw new Error('unable to parse string \"' + this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}","map":{"version":3,"names":["parseString","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","trim","level","place","root","stack","currentObject","state","prototype","readCharicter","char","test","length","neutral","quoted","afterquote","number","word","afterItem","push","pop","parseFloat","newObjects","output","txt","parser"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/wkt-parser/parser.js"],"sourcesContent":["export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}