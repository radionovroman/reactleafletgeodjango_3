{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLeafletContext } from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport { useState, useEffect } from \"react\";\nimport canvasLayer from \"leaflet-canvas-layer\";\nimport { useMap, useMapEvent, useMapEvents } from \"react-leaflet\";\nimport { Handler, latLng } from \"leaflet/dist/leaflet-src.esm\";\nimport Canvas from \"./Canvas\";\nimport { getPosition } from \"leaflet/src/dom/DomUtil\";\nimport customLayer from \"leaflet-customlayer\";\nL.GridLayer.Custom_Canvas = L.GridLayer.extend({\n  createTile: function (coords) {\n    var tile = document.createElement('canvas');\n    var tileSize = this.getTileSize();\n    tile.setAttribute('width', tileSize.x);\n    tile.setAttribute('height', tileSize.y);\n    var ctx = tile.getContext('2d'); // Draw whatever is needed in the canvas context\n    // For example, circles which get bigger as we zoom in\n\n    ctx.beginPath();\n    ctx.arc(tileSize.x / 2, tileSize.x / 2, 4 + coords.z * 4, 0, 2 * Math.PI, false);\n    ctx.fill();\n    return tile;\n  }\n});\nL.L.CustomLayer = L.Layer.extend({\n  onAdd: function (map) {\n    var pane = map.getPane(this.options.pane);\n    this._container = L.DomUtil.create(\"canvas\");\n    pane.appendChild(this._container);\n\n    var point = this._map.latLngToLayerPoint(this._latlng); // Calculate initial position of container with `L.Map.latLngToLayerPoint()`, `getPixelOrigin()` and/or `getPixelBounds()`\n\n\n    L.DomUtil.setPosition(this._container, point); // Add and position children elements if needed\n\n    map.on('zoomend viewreset', this._update, this);\n  },\n  onRemove: function (map) {\n    L.DomUtil.remove(this._container);\n    map.off('zoomend viewreset', this._update, this);\n  },\n  _update: function () {\n    // Recalculate position of container\n    var point = this._map.latLngToLayerPoint(this._latlng);\n\n    L.DomUtil.setPosition(this._container, point); // Add/remove/reposition children elements if needed\n  }\n});\n\nconst Map_paint = () => {\n  _s();\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const ctx = useLeafletContext();\n  const cnvs_overlay = new customLayer({\n    container: document.createElement(\"canvas\"),\n    padding: 0.1\n  });\n  cnvs_overlay.on(\"layer-render\", function () {\n    var canvas = this.getContainer();\n    var dpr = L.Browser.retina ? 2 : 1;\n\n    var size = this._bounds.getSize();\n\n    var padding = this._padding; // set Size\n\n    canvas.width = dpr * size.x;\n    canvas.height = dpr * size.y;\n    canvas.style.width = size.x + \"px\";\n    canvas.style.height = size.y + \"px\";\n    var ctx = canvas.getContext(\"2d\"); // HD adaptation\n\n    if (L.Browser.retina) ctx.scale(dpr, dpr);\n    ctx.translate(padding.x, padding.y); // draw\n\n    var point = this._map.latLngToContainerPoint({\n      lat: 39.910088,\n      lng: 116.401601\n    });\n\n    let painting = false;\n\n    function startPosition() {\n      painting = true;\n    }\n\n    ;\n\n    function finishPosition() {\n      painting = false;\n    }\n\n    ;\n\n    function drawing(e) {\n      if (!painting) return;\n      ctx.lineWidth = 10;\n      ctx.lineCap = \"round\";\n      ctx.stroke();\n    }\n\n    ;\n  });\n  useEffect(() => {\n    const canvas_container = ctx.overlayContainer || ctx.map;\n    const new_custom_layer = new L.CustomLayer(latLng);\n    canvas_container.addLayer(new_custom_layer);\n    return () => {\n      canvas_container.removeLayer(new_custom_layer);\n    };\n  });\n};\n\n_s(Map_paint, \"DX7qMZmz1qqJ5KMtLnld7LKU3ms=\", false, function () {\n  return [useLeafletContext];\n});\n\n_c = Map_paint;\nexport default Map_paint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map_paint\");","map":{"version":3,"names":["useLeafletContext","L","useState","useEffect","canvasLayer","useMap","useMapEvent","useMapEvents","Handler","latLng","Canvas","getPosition","customLayer","GridLayer","Custom_Canvas","extend","createTile","coords","tile","document","createElement","tileSize","getTileSize","setAttribute","x","y","ctx","getContext","beginPath","arc","z","Math","PI","fill","CustomLayer","Layer","onAdd","map","pane","getPane","options","_container","DomUtil","create","appendChild","point","_map","latLngToLayerPoint","_latlng","setPosition","on","_update","onRemove","remove","off","Map_paint","isDrawing","setIsDrawing","cnvs_overlay","container","padding","canvas","getContainer","dpr","Browser","retina","size","_bounds","getSize","_padding","width","height","style","scale","translate","latLngToContainerPoint","lat","lng","painting","startPosition","finishPosition","drawing","e","lineWidth","lineCap","stroke","canvas_container","overlayContainer","new_custom_layer","addLayer","removeLayer"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js"],"sourcesContent":["import {useLeafletContext} from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport {useState, useEffect} from \"react\";\nimport canvasLayer from \"leaflet-canvas-layer\"\nimport {useMap, useMapEvent, useMapEvents} from \"react-leaflet\";\nimport {Handler, latLng} from \"leaflet/dist/leaflet-src.esm\";\nimport Canvas from \"./Canvas\";\nimport {getPosition} from \"leaflet/src/dom/DomUtil\";\nimport customLayer from \"leaflet-customlayer\";\n\n\nL.GridLayer.Custom_Canvas = L.GridLayer.extend({\n    createTile: function (coords){\n        var tile = document.createElement('canvas');\n\n        var tileSize = this.getTileSize();\n        tile.setAttribute('width', tileSize.x);\n        tile.setAttribute('height', tileSize.y);\n\n        var ctx = tile.getContext('2d');\n\n        // Draw whatever is needed in the canvas context\n        // For example, circles which get bigger as we zoom in\n        ctx.beginPath();\n        ctx.arc(tileSize.x/2, tileSize.x/2, 4 + coords.z*4, 0, 2*Math.PI, false);\n        ctx.fill();\n\n        return tile;\n    }\n})\n\n\nL.L.CustomLayer = L.Layer.extend({\n    onAdd: function(map) {\n        var pane = map.getPane(this.options.pane);\n        this._container = L.DomUtil.create(\"canvas\");\n\n        pane.appendChild(this._container);\n\n        var point = this._map.latLngToLayerPoint(this._latlng);\n\n        // Calculate initial position of container with `L.Map.latLngToLayerPoint()`, `getPixelOrigin()` and/or `getPixelBounds()`\n\n        L.DomUtil.setPosition(this._container, point);\n\n        // Add and position children elements if needed\n\n        map.on('zoomend viewreset', this._update, this);\n    },\n\n    onRemove: function(map) {\n        L.DomUtil.remove(this._container);\n        map.off('zoomend viewreset', this._update, this);\n    },\n\n    _update: function() {\n        // Recalculate position of container\n        var point = this._map.latLngToLayerPoint(this._latlng);\n\n        L.DomUtil.setPosition(this._container, point);\n\n        // Add/remove/reposition children elements if needed\n    }\n});\n\n\n\nconst Map_paint = () => {\n    const [isDrawing, setIsDrawing] = useState(false)\n\n    const ctx = useLeafletContext()\n\n\n\n    const cnvs_overlay = new customLayer({\n        container: document.createElement(\"canvas\"),\n        padding: 0.1\n    });\n\n    cnvs_overlay.on(\"layer-render\", function() {\n  var canvas = this.getContainer();\n  var dpr = L.Browser.retina ? 2 : 1;\n  var size = this._bounds.getSize();\n  var padding = this._padding;\n\n  // set Size\n  canvas.width = dpr * size.x;\n  canvas.height = dpr * size.y;\n  canvas.style.width = size.x + \"px\";\n  canvas.style.height = size.y + \"px\";\n\n\n  var ctx = canvas.getContext(\"2d\");\n\n\n  // HD adaptation\n  if (L.Browser.retina) ctx.scale(dpr, dpr);\n  ctx.translate(padding.x, padding.y);\n\n  // draw\n  var point = this._map.latLngToContainerPoint({\n    lat: 39.910088,\n    lng: 116.401601\n  });\n\n let painting = false;\n function startPosition () {painting = true};\nfunction finishPosition () {painting = false};\nfunction drawing (e) {\n    if (!painting)\n        return;\n    ctx.lineWidth = 10;\n    ctx.lineCap = \"round\";\n\n    ctx.stroke();\n};\n\n\n\n\n\n\n\n\n\n\n});\n\n\n\n\n\n\n\n    useEffect(() => {\n\n\n\n\n\n\n\n\n    const canvas_container = ctx.overlayContainer || ctx.map\n    const new_custom_layer = new L.CustomLayer(latLng)\n\n\n\n\n\n        canvas_container.addLayer(new_custom_layer)\n\n\n\n\n        return () => {\n            canvas_container.removeLayer(new_custom_layer)\n\n\n        }\n\n        })\n}\n\nexport default Map_paint"],"mappings":"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"},"metadata":{},"sourceType":"module"}