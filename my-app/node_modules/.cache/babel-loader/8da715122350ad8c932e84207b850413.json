{"ast":null,"code":"function mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n\n  var thing = key ? {} : obj;\n  var out = value.reduce(function (newObj, item) {\n    sExpr(item, newObj);\n    return newObj;\n  }, thing);\n\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n\n  var key = v.shift();\n\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n\n    obj[key] = v[0];\n    return;\n  }\n\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n\n    obj[key].push(v);\n    return;\n  }\n\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n\n      return;\n\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n\n      return;\n\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n\n    default:\n      i = -1;\n\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n\n      return mapit(obj, key, v);\n  }\n}","map":{"version":3,"names":["mapit","obj","key","value","Array","isArray","unshift","thing","out","reduce","newObj","item","sExpr","v","shift","length","push","i","name","toLowerCase","convert","a","rf"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/wkt-parser/process.js"],"sourcesContent":["\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}