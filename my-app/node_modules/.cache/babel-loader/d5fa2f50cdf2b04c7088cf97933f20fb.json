{"ast":null,"code":"// depend on jsts for now https://github.com/bjornharrtell/jsts/blob/master/examples/overlay.html\nvar jsts = require('jsts');\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @return {(Feature<Polygon>|undefined|Feature<MultiLineString>)} if `poly1` and `poly2` overlap, returns a Polygon feature representing the area they overlap; if `poly1` and `poly2` do not overlap, returns `undefined`; if `poly1` and `poly2` share a border, a MultiLineString of the locations where their borders are shared\n * @example\n * var poly1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-122.801742, 45.48565],\n *       [-122.801742, 45.60491],\n *       [-122.584762, 45.60491],\n *       [-122.584762, 45.48565],\n *       [-122.801742, 45.48565]\n *     ]]\n *   }\n * }\n * var poly2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#00f\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-122.520217, 45.535693],\n *       [-122.64038, 45.553967],\n *       [-122.720031, 45.526554],\n *       [-122.669906, 45.507309],\n *       [-122.723464, 45.446643],\n *       [-122.532577, 45.408574],\n *       [-122.487258, 45.477466],\n *       [-122.520217, 45.535693]\n *     ]]\n *   }\n * }\n *\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly1, poly2]\n * };\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //=polygons\n *\n * //=intersection\n */\n\n\nmodule.exports = function intersect(poly1, poly2) {\n  var geom1, geom2;\n  if (poly1.type === 'Feature') geom1 = poly1.geometry;else geom1 = poly1;\n  if (poly2.type === 'Feature') geom2 = poly2.geometry;else geom2 = poly2;\n  var reader = new jsts.io.GeoJSONReader();\n  var a = reader.read(JSON.stringify(geom1));\n  var b = reader.read(JSON.stringify(geom2));\n  var intersection = a.intersection(b);\n\n  if (intersection.isEmpty()) {\n    return undefined;\n  }\n\n  var writer = new jsts.io.GeoJSONWriter();\n  var geojsonGeometry = writer.write(intersection);\n  return {\n    type: 'Feature',\n    properties: {},\n    geometry: geojsonGeometry\n  };\n};","map":{"version":3,"names":["jsts","require","module","exports","intersect","poly1","poly2","geom1","geom2","type","geometry","reader","io","GeoJSONReader","a","read","JSON","stringify","b","intersection","isEmpty","undefined","writer","GeoJSONWriter","geojsonGeometry","write","properties"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/turf-intersect/index.js"],"sourcesContent":["// depend on jsts for now https://github.com/bjornharrtell/jsts/blob/master/examples/overlay.html\nvar jsts = require('jsts');\n\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @return {(Feature<Polygon>|undefined|Feature<MultiLineString>)} if `poly1` and `poly2` overlap, returns a Polygon feature representing the area they overlap; if `poly1` and `poly2` do not overlap, returns `undefined`; if `poly1` and `poly2` share a border, a MultiLineString of the locations where their borders are shared\n * @example\n * var poly1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#0f0\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-122.801742, 45.48565],\n *       [-122.801742, 45.60491],\n *       [-122.584762, 45.60491],\n *       [-122.584762, 45.48565],\n *       [-122.801742, 45.48565]\n *     ]]\n *   }\n * }\n * var poly2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"fill\": \"#00f\"\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-122.520217, 45.535693],\n *       [-122.64038, 45.553967],\n *       [-122.720031, 45.526554],\n *       [-122.669906, 45.507309],\n *       [-122.723464, 45.446643],\n *       [-122.532577, 45.408574],\n *       [-122.487258, 45.477466],\n *       [-122.520217, 45.535693]\n *     ]]\n *   }\n * }\n *\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly1, poly2]\n * };\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //=polygons\n *\n * //=intersection\n */\nmodule.exports = function intersect(poly1, poly2) {\n    var geom1, geom2;\n    if (poly1.type === 'Feature') geom1 = poly1.geometry;\n    else geom1 = poly1;\n    if (poly2.type === 'Feature') geom2 = poly2.geometry;\n    else geom2 = poly2;\n    var reader = new jsts.io.GeoJSONReader();\n    var a = reader.read(JSON.stringify(geom1));\n    var b = reader.read(JSON.stringify(geom2));\n    var intersection = a.intersection(b);\n\n    if (intersection.isEmpty()) {\n        return undefined;\n    }\n\n    var writer = new jsts.io.GeoJSONWriter();\n\n    var geojsonGeometry = writer.write(intersection);\n    return {\n        type: 'Feature',\n        properties: {},\n        geometry: geojsonGeometry\n    };\n};\n"],"mappings":"AAAA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiC;EAC9C,IAAIC,KAAJ,EAAWC,KAAX;EACA,IAAIH,KAAK,CAACI,IAAN,KAAe,SAAnB,EAA8BF,KAAK,GAAGF,KAAK,CAACK,QAAd,CAA9B,KACKH,KAAK,GAAGF,KAAR;EACL,IAAIC,KAAK,CAACG,IAAN,KAAe,SAAnB,EAA8BD,KAAK,GAAGF,KAAK,CAACI,QAAd,CAA9B,KACKF,KAAK,GAAGF,KAAR;EACL,IAAIK,MAAM,GAAG,IAAIX,IAAI,CAACY,EAAL,CAAQC,aAAZ,EAAb;EACA,IAAIC,CAAC,GAAGH,MAAM,CAACI,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeV,KAAf,CAAZ,CAAR;EACA,IAAIW,CAAC,GAAGP,MAAM,CAACI,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAAZ,CAAR;EACA,IAAIW,YAAY,GAAGL,CAAC,CAACK,YAAF,CAAeD,CAAf,CAAnB;;EAEA,IAAIC,YAAY,CAACC,OAAb,EAAJ,EAA4B;IACxB,OAAOC,SAAP;EACH;;EAED,IAAIC,MAAM,GAAG,IAAItB,IAAI,CAACY,EAAL,CAAQW,aAAZ,EAAb;EAEA,IAAIC,eAAe,GAAGF,MAAM,CAACG,KAAP,CAAaN,YAAb,CAAtB;EACA,OAAO;IACHV,IAAI,EAAE,SADH;IAEHiB,UAAU,EAAE,EAFT;IAGHhB,QAAQ,EAAEc;EAHP,CAAP;AAKH,CAvBD"},"metadata":{},"sourceType":"script"}