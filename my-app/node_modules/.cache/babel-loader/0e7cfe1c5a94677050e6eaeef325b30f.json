{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLeafletContext } from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport { useEffect } from \"react\";\nimport canvasLayer from \"leaflet-canvas-layer\";\nimport { useMap, useMapEvent, useMapEvents } from \"react-leaflet\";\nimport { Handler } from \"leaflet/dist/leaflet-src.esm\";\nvar MapPaint;\n\n(function (MapPaint) {\n  MapPaint.SwitchControl = L.Control.extend({\n    options: {\n      position: 'bottomright'\n    },\n    onAdd: function (map) {\n      var container = L.DomUtil.create('div', 'leaflet-bar mappaint-switch');\n      var mapPaint = map.MapPaint;\n\n      if (mapPaint.enabled()) {\n        container.classList.add(\"enabled\");\n      }\n\n      container.onclick = function () {\n        if (mapPaint.enabled()) {\n          mapPaint.disable();\n          container.classList.remove(\"enabled\");\n        } else {\n          mapPaint.enable();\n          container.classList.add(\"enabled\");\n        }\n\n        return false;\n      };\n\n      return container;\n    }\n  });\n  MapPaint.ColorControl = L.Control.extend({\n    options: {\n      position: 'topright',\n      colors: [{\n        r: 0,\n        g: 0,\n        b: 0\n      }, {\n        r: 255,\n        g: 255,\n        b: 255\n      }, {\n        r: 229,\n        g: 28,\n        b: 35\n      }, {\n        r: 156,\n        g: 39,\n        b: 176\n      }, {\n        r: 63,\n        g: 81,\n        b: 181\n      }, {\n        r: 3,\n        g: 169,\n        b: 244\n      }, {\n        r: 0,\n        g: 150,\n        b: 136\n      }, {\n        r: 10,\n        g: 126,\n        b: 7\n      }, {\n        r: 205,\n        g: 220,\n        b: 57\n      }, {\n        r: 255,\n        g: 193,\n        b: 7\n      }, {\n        r: 255,\n        g: 87,\n        b: 34\n      }, {\n        r: 121,\n        g: 85,\n        b: 72\n      }, {\n        r: 96,\n        g: 125,\n        b: 139\n      }, {\n        r: 178,\n        g: 168,\n        b: 163\n      }, {\n        r: 255,\n        g: 128,\n        b: 171\n      }]\n    },\n    onAdd: function () {\n      var _this = this;\n\n      var parentContainer = L.DomUtil.create('div', 'mappaint-control');\n      var container = L.DomUtil.create('div', '');\n      parentContainer.appendChild(container);\n      var eraserMode = false,\n          fillerMode = false;\n      this.options.colors.forEach(function (color) {\n        var c = L.DomUtil.create('div', 'mappaint-color');\n        c.style.background = 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n        container.appendChild(c);\n\n        c.onclick = function () {\n          if (eraserMode) {\n            _this.pencil.DisableEraser();\n\n            eraserMode = false;\n          }\n\n          if (previousC) {\n            previousC.classList.remove('selected');\n          }\n\n          c.classList.add('selected');\n\n          _this.pencil.SetColor(color.r, color.g, color.b);\n\n          previousC = c;\n          return false;\n        };\n      });\n      var previousC = container.firstChild;\n      previousC.onclick(null);\n      return parentContainer;\n    }\n  });\n  MapPaint.ActionControl = L.Control.extend({\n    options: {\n      position: 'topleft',\n      pencils: [{\n        name: \"Procedural\",\n        obj: \"ProceduralPencil\"\n      }, {\n        name: \"Crayon\",\n        obj: \"CrayonPencil\"\n      }, {\n        name: \"Felt\",\n        obj: \"UglyFeltPen\"\n      }, {\n        name: \"Circles\",\n        obj: \"CirclesPencil\"\n      }, {\n        name: \"Stripes\",\n        obj: \"StripesPencil\"\n      }]\n    },\n    onAdd: function (map) {\n      var _this = this;\n\n      var parentContainer = L.DomUtil.create('div', 'mappaint-control');\n      var container = L.DomUtil.create('div', '');\n      parentContainer.appendChild(container);\n      var btnSave = L.DomUtil.create('button', 'action-button action-button-save');\n      btnSave.appendChild(document.createTextNode('Save'));\n      L.DomEvent.addListener(btnSave, 'click', function () {\n        var pencil = _this.pencil;\n        pencil.SavePicture(map, function (image, bounds) {\n          _this.mappaint.saveMethod(image, bounds);\n        });\n      });\n      container.appendChild(btnSave);\n      var eraserMode = false,\n          fillerMode = false;\n      var eraser = L.DomUtil.create('div', 'mappaint-eraser');\n\n      eraser.onclick = function () {\n        _this.pencil.EnableEraser();\n\n        eraserMode = true;\n\n        if (previousC) {\n          previousC.classList.remove('selected');\n        }\n\n        eraser.classList.add('selected');\n        previousC = eraser;\n        return false;\n      };\n\n      container.appendChild(eraser);\n      this.options.pencils.forEach(function (pencil) {\n        var c = L.DomUtil.create('div', 'mappaint-pencil mappaint-' + pencil.obj.toLocaleLowerCase());\n        c.appendChild(document.createTextNode(pencil.name));\n        container.appendChild(c);\n\n        c.onclick = function () {\n          if (eraserMode) {\n            _this.pencil.DisableEraser();\n\n            eraserMode = false;\n          }\n\n          if (previousC) {\n            previousC.classList.remove('selected');\n          }\n\n          c.classList.add('selected');\n          _this.pencil.pencil = MapPaint[pencil.obj];\n          previousC = c;\n          return false;\n        };\n      });\n      var previousC = container.children[2];\n      previousC.onclick(null);\n      return parentContainer;\n    }\n  });\n})(MapPaint || (MapPaint = {}));\n\nL.MapPaint = L.Handler.extend({\n  includes: L.Mixin.Events,\n  addHooks: function () {\n    var canvas = this._canvas = document.createElement('canvas');\n    canvas.className = \"mappaint-canvas\";\n    var container = this._map._container;\n    canvas.height = container.offsetHeight;\n    canvas.width = container.offsetWidth;\n    container.appendChild(canvas);\n    this.disableMapInteractions();\n    this._context = canvas.getContext('2d');\n    this.pencil = new MapPaint.Sketchy(this._context);\n    this.pencil.retina = this._enhanceContext(this._context);\n    this.colorControl = new MapPaint.ColorControl();\n    this.colorControl.pencil = this.pencil;\n\n    this._map.addControl(this.colorControl);\n\n    this.actionControl = new MapPaint.ActionControl();\n    this.actionControl.pencil = this.pencil;\n    this.actionControl.mappaint = this;\n\n    this._map.addControl(this.actionControl);\n\n    L.DomEvent.addListener(canvas, 'mousedown', this._onMouseDown, this);\n    L.DomEvent.addListener(canvas, 'mouseup', this._onMouseUp, this);\n    L.DomEvent.addListener(canvas, 'mouseout', this._onMouseOut, this);\n    L.DomEvent.addListener(canvas, 'touchstart', this._onTouchStart, this);\n    L.DomEvent.addListener(canvas, 'touchend', this._onTouchEnd, this);\n    L.DomEvent.addListener(canvas, 'touchcancel', this._onTouchEnd, this);\n    L.DomEvent.addListener(canvas, 'contextmenu', function (e) {\n      return e.preventDefault() && false;\n    });\n\n    this._map.on('resize', this._onResize, this);\n  },\n  _onMouseDown: function (e) {\n    if (e.button) {\n      this.pencil.EnableFiller();\n    } else {\n      this.pencil.DisableFiller();\n    }\n\n    this.pencil.Start('mouse', this._map.mouseEventToContainerPoint(e));\n    L.DomEvent.addListener(this._canvas, 'mousemove', this._onMouseMove, this);\n    e.preventDefault();\n  },\n  _onMouseMove: function (e) {\n    if (this._mouseOut) {\n      this._mouseOut = false;\n      this.pencil.Start('mouse', this._map.mouseEventToContainerPoint(e));\n    } else {\n      this.pencil.Stroke('mouse', this._map.mouseEventToContainerPoint(e));\n    }\n\n    e.preventDefault();\n  },\n  _onMouseUp: function (e) {\n    this.pencil.Stop('mouse');\n    L.DomEvent.removeListener(this._canvas, 'mousemove', this._onMouseMove, this);\n    e.preventDefault();\n  },\n  _onMouseOut: function (e) {\n    this._mouseOut = true;\n  },\n  _onTouchStart: function (e) {\n    for (var i = 0, l = e.touches.length; i < l; ++i) {\n      var t = e.touches[i];\n      this.pencil.Start(\"touch\" + t.identifier, this._map.mouseEventToContainerPoint(t));\n    }\n\n    L.DomEvent.addListener(this._canvas, 'touchmove', this._onTouchMove, this);\n    e.preventDefault();\n  },\n  _onTouchMove: function (e) {\n    for (var i = 0, l = e.touches.length; i < l; ++i) {\n      var t = e.touches[i];\n      this.pencil.Stroke(\"touch\" + t.identifier, this._map.mouseEventToContainerPoint(t));\n    }\n\n    e.preventDefault();\n  },\n  _onTouchEnd: function (e) {\n    for (var i = 0, l = e.touches.length; i < l; ++i) {\n      var t = e.touches[i];\n      this.pencil.Stop(\"touch\" + t.identifier);\n    }\n\n    L.DomEvent.removeListener(this._canvas, 'touchmove', this._onTouchMove);\n  },\n  disableMapInteractions: function () {\n    var map = this._map;\n    this._interactionsStates = {\n      dragging: map.dragging.enabled(),\n      touchZoom: map.touchZoom.enabled(),\n      doubleClickZoom: map.doubleClickZoom.enabled(),\n      scrollWheelZoom: map.scrollWheelZoom.enabled(),\n      boxZoom: map.boxZoom.enabled(),\n      keyboard: map.keyboard.enabled(),\n      tap: map.tap && map.tap.enabled()\n    };\n    map.dragging.disable();\n    map.touchZoom.disable();\n    map.doubleClickZoom.disable();\n    map.scrollWheelZoom.disable();\n    map.boxZoom.disable();\n    map.keyboard.disable();\n    map.tap && map.tap.disable();\n  },\n  restoreMapInteractions: function () {\n    var map = this._map,\n        interactions = this._interactionsStates;\n\n    if (interactions.dragging) {\n      map.dragging.enable();\n    }\n\n    if (interactions.touchZoom) {\n      map.touchZoom.enable();\n    }\n\n    if (interactions.doubleClickZoom) {\n      map.doubleClickZoom.enable();\n    }\n\n    if (interactions.scrollWheelZoom) {\n      map.scrollWheelZoom.enable();\n    }\n\n    if (interactions.boxZoom) {\n      map.boxZoom.enable();\n    }\n\n    if (interactions.keyboard) {\n      map.keyboard.enable();\n    }\n\n    if (interactions.tap) {\n      map.tap.enable();\n    }\n  },\n  _enhanceContext: function () {\n    var canvas = this._canvas;\n    var ratio = window.devicePixelRatio || 1,\n        width = canvas.width,\n        height = canvas.height;\n\n    if (ratio > 1) {\n      canvas.width = width * ratio;\n      canvas.height = height * ratio;\n      canvas.style.width = width + \"px\";\n      canvas.style.height = height + \"px\";\n\n      this._context.scale(ratio, ratio);\n\n      return ratio;\n    }\n\n    return 1.0;\n  },\n  _onResize: function (e) {\n    var canvas = this._canvas,\n        ctx = this._context,\n        imageData = ctx.getImageData(0, 0, canvas.width, canvas.height),\n        container = this._map._container;\n    canvas.height = container.offsetHeight;\n    canvas.width = container.offsetWidth;\n\n    this._enhanceContext();\n\n    this.pencil.ClearDatagrid();\n    var center = e.newSize.subtract(e.oldSize).multiplyBy(0.5);\n    ctx.putImageData(imageData, center.x, center.y);\n  },\n  removeHooks: function () {\n    var _this = this;\n\n    this.pencil.SavePicture(this._map, function (image, bounds) {\n      if (window.confirm(\"Do you want to save your drawing?\")) {\n        _this.saveMethod(image, bounds);\n      }\n    });\n\n    this._map._container.removeChild(this._canvas);\n\n    this._map.removeControl(this.actionControl);\n\n    this._map.removeControl(this.colorControl);\n\n    this._map.off('resize', this._onResize, this);\n\n    this.restoreMapInteractions();\n    this.restoreMapInteractions();\n    this.restoreMapInteractions();\n  },\n  saveMethod: function (image, bounds) {\n    L.imageOverlay(image, bounds).addTo(this._map);\n  }\n});\nL.Map.addInitHook('addHandler', 'MapPaint', L.MapPaint);\nvar MapPaint;\n\n(function (MapPaint) {\n  var SimplePartitionGrid = function () {\n    function SimplePartitionGrid(size, margin) {\n      this.size = size;\n      this.margin = margin;\n      this._grid = {};\n      this._modifiedAreas = {};\n    }\n\n    SimplePartitionGrid.prototype.Add = function (point) {\n      var posX = Math.floor(point.x / this.size),\n          posY = Math.floor(point.y / this.size),\n          key = posX + \"-\" + posY;\n\n      if (this._grid.hasOwnProperty(key)) {\n        this._grid[key].push(point);\n      } else {\n        this._grid[key] = [point];\n        this._modifiedAreas[key] = true;\n      }\n    };\n\n    SimplePartitionGrid.prototype.ApplyRemove = function () {\n      for (var key in this._grid) {\n        var cell = this._grid[key],\n            newt = [],\n            change = false;\n\n        for (var i = 0, l = cell.length; i < l; ++i) {\n          if (!cell[i].remove) {\n            newt.push(i);\n          } else {\n            change = true;\n          }\n        }\n\n        if (change) {\n          this._grid[key] = newt;\n        }\n      }\n    };\n\n    SimplePartitionGrid.prototype._ConcatWithKey = function (points, key) {\n      if (this._grid.hasOwnProperty(key)) {\n        return points.concat(this._grid[key]);\n      }\n\n      return points;\n    };\n\n    SimplePartitionGrid.prototype.FetchArround = function (point) {\n      var posX = Math.floor(point.x / this.size),\n          posY = Math.floor(point.y / this.size),\n          startX = posX * this.size,\n          startY = posY * this.size,\n          key = posX + \"-\" + posY,\n          points = this._grid.hasOwnProperty(key) ? this._grid[key].slice() : [];\n\n      if (point.x - startX < this.margin) {\n        points = this._ConcatWithKey(points, posX - 1 + \"-\" + posY);\n      }\n\n      if (point.y - startY < this.margin) {\n        points = this._ConcatWithKey(points, posX + \"-\" + (posY - 1));\n      }\n\n      var upperMargin = this.size - this.margin;\n\n      if (point.x - startX > upperMargin) {\n        points = this._ConcatWithKey(points, posX + 1 + \"-\" + posY);\n      }\n\n      if (point.y - startY > upperMargin) {\n        points = this._ConcatWithKey(points, posX + \"-\" + (posY + 1));\n      }\n\n      return points;\n    };\n\n    SimplePartitionGrid.prototype.Clear = function () {\n      this._grid = {};\n    };\n\n    SimplePartitionGrid.prototype.ClearModifiedAreas = function () {\n      this._modifiedAreas = {};\n    };\n\n    SimplePartitionGrid.prototype.GetModifiedAreas = function () {\n      return this._modifiedAreas;\n    };\n\n    SimplePartitionGrid.prototype.GetGridSize = function () {\n      return this.size;\n    };\n\n    return SimplePartitionGrid;\n  }();\n\n  MapPaint.SimplePartitionGrid = SimplePartitionGrid;\n})(MapPaint || (MapPaint = {}));\n\nvar MapPaint;\n\n(function (MapPaint) {\n  var Sketchy = function () {\n    function Sketchy(context) {\n      this.dataGrid = new MapPaint.SimplePartitionGrid(128, 80);\n      this.context = context;\n      this.previousPoints = {};\n      this.tapOrClick = {};\n      this.eraser = false;\n      this.retina = 1.0;\n      this.modeFiller = false;\n      this.SetColor(0, 0, 0);\n      this.pencil = MapPaint.CrayonPencil;\n    }\n\n    Sketchy.prototype.SetColor = function (r, g, b) {\n      var c = 'rgba(' + r + ',' + g + ',' + b;\n      this.color = c + ',0.45)';\n      this.colorFull = c + ',1.0)';\n      this.colorAlternative = c + ',0.16)';\n      this.colorDark = 'rgba(' + Math.round(Math.max(0, r * 0.65 - 10)) + ',' + Math.round(Math.max(0, g * 0.65 - 10)) + ',' + Math.round(Math.max(0, b * 0.65 - 10)) + ',0.07)';\n      this.dataGrid.Clear();\n    };\n\n    Sketchy.prototype.EnableFiller = function () {\n      this.modeFiller = true;\n      this.dataGrid.Clear();\n    };\n\n    Sketchy.prototype.DisableFiller = function () {\n      this.modeFiller = false;\n      this.dataGrid.Clear();\n    };\n\n    Sketchy.prototype.EnableEraser = function () {\n      this.eraser = true;\n      this.dataGrid.Clear();\n    };\n\n    Sketchy.prototype.DisableEraser = function () {\n      this.eraser = false;\n      this.dataGrid.Clear();\n    };\n\n    Sketchy.prototype.Start = function (input, point) {\n      this.previousPoints[input] = point;\n      this.tapOrClick[input] = true;\n      this.dataGrid.Add(point);\n    };\n\n    Sketchy.prototype.Stroke = function (input, point) {\n      this.tapOrClick[input] = false;\n      var ctx = this.context,\n          previousPoint = this.previousPoints[input];\n      ctx.globalCompositeOperation = this.modeFiller ? 'destination-over' : 'source-over';\n\n      if (this.eraser) {\n        MapPaint.Rubber.draw(ctx, point, previousPoint, this);\n      } else {\n        this.pencil.draw(ctx, point, previousPoint, this);\n      }\n\n      this.previousPoints[input] = point;\n      this.dataGrid.Add(point);\n\n      if (this.retina > 1.0) {\n        var middlePoint = {\n          x: (point.x + previousPoint.x) / 2,\n          y: (point.y + previousPoint.y) / 2\n        };\n        this.dataGrid.Add(middlePoint);\n      }\n    };\n\n    Sketchy.prototype.Stop = function (input) {\n      if (this.tapOrClick[input]) {\n        var previousPoint = this.previousPoints[input],\n            point = {\n          x: previousPoint.x + 1,\n          y: previousPoint.y + 1\n        };\n        this.Stroke(input, point);\n      }\n\n      delete this.previousPoints[input];\n\n      if (this.eraser) {\n        this.dataGrid.ApplyRemove();\n      }\n    };\n\n    Sketchy.prototype.Clear = function () {\n      this.context.canvas.width = this.context.canvas.width;\n      this.context.scale(this.retina, this.retina);\n      this.dataGrid.Clear();\n      this.dataGrid.ClearModifiedAreas();\n    };\n\n    Sketchy.prototype.ClearDatagrid = function () {\n      this.dataGrid.Clear();\n    };\n\n    Sketchy.prototype.FetchPointsArround = function (point) {\n      return this.dataGrid.FetchArround(point);\n    };\n\n    Sketchy.prototype.SavePicture = function (map, callback) {\n      var context = this.context;\n      var s = new MapPaint.Save(context, 128, this.retina);\n      var imageData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n      var croppedSize = s.CropImageData(imageData);\n\n      if (!croppedSize) {\n        return false;\n      }\n\n      var png = s.CreatePngs([croppedSize]);\n\n      if (png.length && png[0]) {\n        var leafletBounds = new L.LatLngBounds(map.containerPointToLatLng(new L.Point(croppedSize.xMin, croppedSize.yMin)), map.containerPointToLatLng(new L.Point(croppedSize.xMax, croppedSize.yMax)));\n        callback(png[0], leafletBounds);\n      }\n\n      this.Clear();\n      return true;\n    };\n\n    return Sketchy;\n  }();\n\n  MapPaint.Sketchy = Sketchy;\n})(MapPaint || (MapPaint = {}));\n\nvar MapPaint;\n\n(function (MapPaint) {\n  var circlesPencilPattern,\n      circlesPencilColor,\n      circlesPencilGetPattern = function (color) {\n    if (circlesPencilPattern && circlesPencilColor === color) {\n      return circlesPencilPattern;\n    }\n\n    circlesPencilColor = color;\n    var patternCanvas = document.createElement('canvas'),\n        ctx = patternCanvas.getContext('2d'),\n        doublePI = Math.PI * 2,\n        radius = 4,\n        size = 20;\n    patternCanvas.width = patternCanvas.height = size;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, 0, doublePI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(0, size, radius, 0, doublePI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(size, size, radius, 0, doublePI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(size, 0, radius, 0, doublePI);\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(size / 2, size / 2, radius + 1, 0, doublePI);\n    ctx.fill();\n    return circlesPencilPattern = ctx.createPattern(patternCanvas, 'repeat');\n  };\n\n  MapPaint.CirclesPencil = {\n    draw: function (ctx, point, previousPoint, sketch) {\n      var pattern = circlesPencilGetPattern(sketch.colorFull);\n      MapPaint.drawPatternPencil(ctx, point, previousPoint, sketch, pattern);\n    }\n  };\n})(MapPaint || (MapPaint = {}));\n\nvar MapPaint;\n\n(function (MapPaint) {\n  var crayonPencilPattern,\n      crayonPencilColor,\n      crayonPencilPattern2,\n      crayonPencilColor2,\n      crayonPencilGetPattern = function (color, mode) {\n    if (mode === 1 && crayonPencilPattern && crayonPencilColor === color) {\n      return crayonPencilPattern;\n    }\n\n    if (mode === 2 && crayonPencilPattern2 && crayonPencilColor2 === color) {\n      return crayonPencilPattern2;\n    }\n\n    if (mode === 1) {\n      crayonPencilColor = color;\n    } else if (mode == 2) {\n      crayonPencilColor2 = color;\n    }\n\n    var patternCanvas = document.createElement('canvas'),\n        ctx = patternCanvas.getContext('2d'),\n        size = 40;\n    patternCanvas.width = patternCanvas.height = size;\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, size, size);\n    var imageData = ctx.getImageData(0, 0, size, size),\n        random = Math.random,\n        pixels = imageData.data;\n\n    for (var i = 0, n = pixels.length; i < n; i += 4) {\n      pixels[i + 3] = random() * 256 | 0;\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    var rogerCanvas = document.createElement('canvas'),\n        rogerCtx = rogerCanvas.getContext('2d');\n    var biggerSize = size * 2;\n    rogerCanvas.width = rogerCanvas.height = biggerSize;\n    rogerCtx.drawImage(patternCanvas, 0, 0, size, size, 0, 0, biggerSize, biggerSize);\n    size = biggerSize;\n    imageData = rogerCtx.getImageData(0, 0, size, size);\n    pixels = imageData.data;\n    var max = mode === 1 ? 142 : 202;\n    var lockupCurveTable = new Array(256);\n    var iL = 0;\n\n    for (; iL < max - 25; ++iL) {\n      lockupCurveTable[iL] = 255;\n    }\n\n    for (var cptIL = 0; iL < max + 25; ++iL & ++cptIL) {\n      lockupCurveTable[iL] = 255 - cptIL * 5;\n    }\n\n    for (; iL < 256; ++iL) {\n      lockupCurveTable[iL] = 0;\n    }\n\n    for (var x = 0; x < size; ++x) {\n      for (var y = 0; y < size; ++y) {\n        var i = (x * size + y << 2) + 3;\n        pixels[i] = lockupCurveTable[pixels[i]];\n      }\n    }\n\n    rogerCtx.putImageData(imageData, 0, 0);\n\n    if (mode === 1) {\n      return crayonPencilPattern = ctx.createPattern(rogerCanvas, 'repeat');\n    } else {\n      return crayonPencilPattern2 = ctx.createPattern(rogerCanvas, 'repeat');\n    }\n  };\n\n  MapPaint.CrayonPencil = {\n    draw: function (ctx, point, previousPoint, sketch) {\n      var r = sketch.retina > 1.0 ? 0.66 : 1.0;\n      var pattern = crayonPencilGetPattern(sketch.colorFull, 1);\n      MapPaint.drawPatternPencil(ctx, point, previousPoint, sketch, pattern, 0.25 * r);\n      pattern = crayonPencilGetPattern(sketch.colorFull, 2);\n      MapPaint.drawPatternPencil(ctx, point, previousPoint, sketch, pattern, 0.15 * r);\n    }\n  };\n})(MapPaint || (MapPaint = {}));\n\nvar MapPaint;\n\n(function (MapPaint) {\n  MapPaint.ProceduralPencil = {\n    draw: function (ctx, point, previousPoint, sketch, maxAngle) {\n      var sdx = previousPoint.x - point.x,\n          sdy = previousPoint.y - point.y,\n          speed = sdx * sdx + sdy * sdy;\n      ctx.beginPath();\n      ctx.strokeStyle = sketch.color;\n      ctx.lineWidth = 1;\n      ctx.lineCap = 'butt';\n      ctx.lineJoin = 'miter';\n      ctx.moveTo(previousPoint.x, previousPoint.y);\n      ctx.lineTo(point.x, point.y);\n      ctx.stroke();\n      ctx.strokeStyle = sketch.colorAlternative;\n\n      if (maxAngle) {\n        var angleCst = Math.atan2(previousPoint.x - point.x, previousPoint.y - point.y);\n        var doublePI = Math.PI + Math.PI,\n            limitAngleMax = doublePI - maxAngle,\n            limitAngleMin = maxAngle;\n      }\n\n      if (speed < (sketch.retina > 1.0 ? 2200 : 800)) {\n        var points = sketch.FetchPointsArround(point);\n        var lines = [];\n        ctx.beginPath();\n        ctx.strokeStyle = sketch.modeFiller ? sketch.colorAlternative : sketch.colorDark;\n        ctx.lineWidth = 2;\n\n        for (var i = 0, l = points.length; i < l; ++i) {\n          var px = points[i].x,\n              py = points[i].y,\n              dx = px - point.x,\n              dy = py - point.y,\n              d = dx * dx + dy * dy;\n\n          if (d < 2684) {\n            if (maxAngle) {\n              var angle = Math.atan2(px - point.x, py - point.y) - angleCst;\n\n              if (angle < 0) {\n                angle += doublePI;\n              } else if (angle > doublePI) {\n                angle -= doublePI;\n              }\n            }\n\n            if ((!maxAngle || angle > limitAngleMax || angle < limitAngleMin) && Math.random() > d / 1342) {\n              lines.push(points[i]);\n\n              if (sketch.modeFiller || Math.random() > 0.3) {\n                var rl = 0.2 + Math.random() * 0.14,\n                    mx = dx * rl,\n                    my = dy * rl;\n                ctx.moveTo(point.x + mx, point.y + my);\n                ctx.lineTo(px - mx, py - my);\n              }\n            }\n          }\n        }\n\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.strokeStyle = sketch.modeFiller ? sketch.colorDark : sketch.colorAlternative;\n        ctx.lineWidth = 1;\n\n        for (i = 0, l = lines.length; i < l; ++i) {\n          if (!sketch.modeFiller || Math.random() > 0.3) {\n            px = lines[i].x;\n            py = lines[i].y;\n            dx = px - point.x;\n            dy = py - point.y;\n            rl = 0.2 + Math.random() * 0.14;\n            mx = dx * rl;\n            my = dy * rl;\n            ctx.moveTo(point.x + mx, point.y + my);\n            ctx.lineTo(px - mx, py - my);\n          }\n        }\n\n        ctx.stroke();\n      }\n    }\n  };\n  MapPaint.RestrainedProceduralPencil = {\n    draw: function (ctx, point, previousPoint, sketch) {\n      MapPaint.ProceduralPencil.draw(ctx, point, previousPoint, sketch, 0.2);\n    }\n  };\n})(MapPaint || (MapPaint = {}));\n\nvar MapPaint;\n\n(function (MapPaint) {\n  MapPaint.UglyFeltPen = {\n    draw: function (ctx, point, previousPoint, sketch) {\n      ctx.beginPath();\n      ctx.moveTo(previousPoint.x, previousPoint.y);\n      ctx.quadraticCurveTo((previousPoint.x + point.x) * 0.5, (previousPoint.y + point.y) * 0.5, point.x, point.y);\n      ctx.strokeStyle = sketch.color;\n      ctx.lineWidth = 10;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.stroke();\n      ctx.lineWidth = 8;\n      ctx.strokeStyle = sketch.colorFull;\n      ctx.stroke();\n    }\n  };\n})(MapPaint || (MapPaint = {}));\n\nvar MapPaint;\n\n(function (MapPaint) {\n  MapPaint.Rubber = {\n    draw: function (ctx, point, previousPoint, sketch) {\n      var sdx = previousPoint.x - point.x,\n          sdy = previousPoint.y - point.y,\n          speed = Math.sqrt(sdx * sdx + sdy * sdy);\n      var xa = 0,\n          ya = 26,\n          xb = 80,\n          yb = 120;\n      var w = Math.floor(ya + (Math.min(speed, xb) - xa) * ((yb - ya) / (xb - xa)));\n      ctx.globalCompositeOperation = 'destination-out';\n      ctx.beginPath();\n      ctx.strokeStyle = 'black';\n      ctx.lineWidth = w;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.moveTo(previousPoint.x, previousPoint.y);\n      ctx.quadraticCurveTo((previousPoint.x + point.x) * 0.5, (previousPoint.y + point.y) * 0.5, point.x, point.y);\n      ctx.stroke();\n    }\n  };\n})(MapPaint || (MapPaint = {}));\n\nvar MapPaint;\n\n(function (MapPaint) {\n  MapPaint.drawPatternPencil = function (ctx, point, previousPoint, sketch, pattern, widthRatio) {\n    if (typeof widthRatio === \"undefined\") {\n      widthRatio = 1.0;\n    }\n\n    var sdx = previousPoint.x - point.x,\n        sdy = previousPoint.y - point.y,\n        speed = Math.sqrt(sdx * sdx + sdy * sdy);\n    var xa = 0,\n        ya = 26,\n        xb = 80,\n        yb = 60;\n    var w = widthRatio * Math.floor(ya + (Math.min(speed, xb) - xa) * ((yb - ya) / (xb - xa)));\n    ctx.beginPath();\n    ctx.moveTo(previousPoint.x, previousPoint.y);\n    ctx.quadraticCurveTo((previousPoint.x + point.x) * 0.5, (previousPoint.y + point.y) * 0.5, point.x, point.y);\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    var tmpGlobalCompositeOperation = ctx.globalCompositeOperation;\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = w - 1;\n    ctx.stroke();\n    ctx.strokeStyle = pattern;\n    ctx.lineWidth = w;\n    ctx.globalCompositeOperation = tmpGlobalCompositeOperation;\n    ctx.stroke();\n  };\n\n  var stripesPencilPattern,\n      stripesPencilColor,\n      stripesPencilGetPattern = function (color) {\n    if (stripesPencilPattern && stripesPencilColor === color) {\n      return stripesPencilPattern;\n    }\n\n    stripesPencilColor = color;\n    var patternCanvas = document.createElement('canvas'),\n        ctx = patternCanvas.getContext('2d');\n    patternCanvas.width = patternCanvas.height = 12;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 4;\n    ctx.beginPath();\n    ctx.moveTo(-6, 6);\n    ctx.lineTo(6, -6);\n    ctx.moveTo(-6, 18);\n    ctx.lineTo(18, -6);\n    ctx.moveTo(6, 18);\n    ctx.lineTo(18, 6);\n    ctx.closePath();\n    ctx.stroke();\n    return stripesPencilPattern = ctx.createPattern(patternCanvas, 'repeat');\n  };\n\n  MapPaint.StripesPencil = {\n    draw: function (ctx, point, previousPoint, sketch) {\n      var pattern = stripesPencilGetPattern(sketch.colorFull);\n      MapPaint.drawPatternPencil(ctx, point, previousPoint, sketch, pattern);\n    }\n  };\n})(MapPaint || (MapPaint = {}));\n\nvar MapPaint;\n\n(function (MapPaint) {\n  var Save = function () {\n    function Save(context, size, retina) {\n      this.context = context;\n      this.size = size;\n      this.retina = retina;\n    }\n\n    Save.prototype.MergeModifiedAreas = function (modifiedAreas) {\n      var areas = {};\n      var key;\n\n      for (key in modifiedAreas) {\n        areas[key] = null;\n      }\n\n      for (key in areas) {\n        if (areas[key] === null) {\n          var p = key.split('-'),\n              x = parseInt(p[0]),\n              y = parseInt(p[1]);\n          var bounds = {\n            xMin: x,\n            xMax: x + 1,\n            yMin: y,\n            yMax: y + 1\n          };\n\n          Save._RecursiveMadness(areas, x, y, bounds);\n        }\n      }\n\n      var newAreas = [];\n\n      for (key in areas) {\n        var area = areas[key];\n\n        if (!area._lapin) {\n          newAreas.push(area);\n          area._lapin = true;\n          area.xMin *= this.size;\n          area.xMax *= this.size;\n          area.yMin *= this.size;\n          area.yMax *= this.size;\n        }\n      }\n\n      return newAreas;\n    };\n\n    Save._RecursiveMadness = function (areas, x, y, bounds) {\n      var key = x + '-' + y;\n\n      if (areas.hasOwnProperty(key) && areas[key] === null) {\n        bounds.xMin = Math.min(x, bounds.xMin);\n        bounds.xMax = Math.max(x + 1, bounds.xMax);\n        bounds.yMin = Math.min(y, bounds.yMin);\n        bounds.yMax = Math.max(y + 1, bounds.yMax);\n        areas[key] = bounds;\n\n        this._RecursiveMadness(areas, x - 1, y, bounds);\n\n        this._RecursiveMadness(areas, x, y - 1, bounds);\n\n        this._RecursiveMadness(areas, x + 1, y, bounds);\n\n        this._RecursiveMadness(areas, x, y + 1, bounds);\n\n        this._RecursiveMadness(areas, x - 1, y - 1, bounds);\n\n        this._RecursiveMadness(areas, x + 1, y - 1, bounds);\n\n        this._RecursiveMadness(areas, x + 1, y + 1, bounds);\n\n        this._RecursiveMadness(areas, x - 1, y + 1, bounds);\n      }\n    };\n\n    Save.prototype.DrawAreas = function (areas) {\n      this.context.fillStyle = 'rgba(255,128,64,0.25)';\n\n      for (var key in areas) {\n        var bounds = areas[key];\n        this.context.fillRect(bounds.xMin, bounds.yMin, bounds.xMax - bounds.xMin, bounds.yMax - bounds.yMin);\n      }\n    };\n\n    Save.prototype.GetImageData = function (bounds) {\n      var r = this.retina;\n      return this.context.getImageData(bounds.xMin * r, bounds.yMin * r, (bounds.xMax - bounds.xMin) * r, (bounds.yMax - bounds.yMin) * r);\n    };\n\n    Save.prototype.CropImageData = function (image) {\n      var w = image.width,\n          h = image.height,\n          r = this.retina;\n      var xMin = Number.MAX_VALUE,\n          xMax = -Number.MAX_VALUE,\n          yMin = Number.MAX_VALUE,\n          yMax = -Number.MAX_VALUE,\n          found = false;\n\n      for (var y = 0; y < h; ++y) {\n        for (var x = 0; x < w; ++x) {\n          var pixelPosition = (y * w + x) * 4 + 3,\n              pixelAlpha = image.data[pixelPosition];\n\n          if (pixelAlpha > 0) {\n            found = true;\n\n            if (y < yMin) {\n              yMin = y;\n            }\n\n            if (y > yMax) {\n              yMax = y;\n            }\n\n            if (x > xMax) {\n              xMax = x;\n            }\n\n            if (x < xMin) {\n              xMin = x;\n            }\n          }\n        }\n      }\n\n      if (found) {\n        return {\n          xMin: xMin / r,\n          xMax: xMax / r,\n          yMin: yMin / r,\n          yMax: yMax / r\n        };\n      } else {\n        return null;\n      }\n    };\n\n    Save.prototype.CroppedDrawAreas = function (areas) {\n      var _this = this;\n\n      var newAreas = [];\n      var margin = 8;\n      areas.forEach(function (area) {\n        if (!area) return;\n        console.log(area);\n\n        var imageData = _this.GetImageData(area);\n\n        console.log(imageData);\n\n        var croppedBounds = _this.CropImageData(imageData);\n\n        console.log(croppedBounds);\n        if (!croppedBounds) return;\n        var newBounds = {\n          xMin: Math.max(0, area.xMin + croppedBounds.xMin - margin),\n          xMax: area.xMin + croppedBounds.xMax + margin,\n          yMin: Math.max(0, area.yMin + croppedBounds.yMin - margin),\n          yMax: area.yMin + croppedBounds.yMax + margin\n        };\n        newAreas.push(newBounds);\n      });\n      return newAreas;\n    };\n\n    Save.prototype.CreatePngs = function (areas) {\n      var _this = this;\n\n      var images = [],\n          r = this.retina;\n      areas.forEach(function (area) {\n        if (!area) {\n          images.push(null);\n          return;\n        }\n\n        ;\n\n        var imageData = _this.GetImageData(area);\n\n        var tmpCanvas = document.createElement('canvas');\n        tmpCanvas.width = (area.xMax - area.xMin) * r;\n        tmpCanvas.height = (area.yMax - area.yMin) * r;\n        tmpCanvas.getContext('2d').putImageData(imageData, 0, 0);\n        images.push(tmpCanvas.toDataURL('image/png'));\n      });\n      return images;\n    };\n\n    return Save;\n  }();\n\n  MapPaint.Save = Save;\n})(MapPaint || (MapPaint = {}));\n\nconst Map_paint = () => {\n  _s();\n\n  const ctx = useLeafletContext();\n  useEffect(() => {\n    const container = ctx.map;\n    var bounds = [[54.559322, -5.767822], [56.1210604, -3.021240]];\n    container.addHandler(MapPaint);\n    return () => {\n      container.removeHandler(MapPaint);\n    };\n  });\n};\n\n_s(Map_paint, \"XQIRDxwzUI/GRmQs0qSQEwlDYJc=\", false, function () {\n  return [useLeafletContext];\n});\n\n_c = Map_paint;\nexport default Map_paint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map_paint\");","map":{"version":3,"names":["useLeafletContext","L","useEffect","canvasLayer","useMap","useMapEvent","useMapEvents","Handler","MapPaint","SwitchControl","Control","extend","options","position","onAdd","map","container","DomUtil","create","mapPaint","enabled","classList","add","onclick","disable","remove","enable","ColorControl","colors","r","g","b","_this","parentContainer","appendChild","eraserMode","fillerMode","forEach","color","c","style","background","pencil","DisableEraser","previousC","SetColor","firstChild","ActionControl","pencils","name","obj","btnSave","document","createTextNode","DomEvent","addListener","SavePicture","image","bounds","mappaint","saveMethod","eraser","EnableEraser","toLocaleLowerCase","children","includes","Mixin","Events","addHooks","canvas","_canvas","createElement","className","_map","_container","height","offsetHeight","width","offsetWidth","disableMapInteractions","_context","getContext","Sketchy","retina","_enhanceContext","colorControl","addControl","actionControl","_onMouseDown","_onMouseUp","_onMouseOut","_onTouchStart","_onTouchEnd","e","preventDefault","on","_onResize","button","EnableFiller","DisableFiller","Start","mouseEventToContainerPoint","_onMouseMove","_mouseOut","Stroke","Stop","removeListener","i","l","touches","length","t","identifier","_onTouchMove","_interactionsStates","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","tap","restoreMapInteractions","interactions","ratio","window","devicePixelRatio","scale","ctx","imageData","getImageData","ClearDatagrid","center","newSize","subtract","oldSize","multiplyBy","putImageData","x","y","removeHooks","confirm","removeChild","removeControl","off","imageOverlay","addTo","Map","addInitHook","SimplePartitionGrid","size","margin","_grid","_modifiedAreas","prototype","Add","point","posX","Math","floor","posY","key","hasOwnProperty","push","ApplyRemove","cell","newt","change","_ConcatWithKey","points","concat","FetchArround","startX","startY","slice","upperMargin","Clear","ClearModifiedAreas","GetModifiedAreas","GetGridSize","context","dataGrid","previousPoints","tapOrClick","modeFiller","CrayonPencil","colorFull","colorAlternative","colorDark","round","max","input","previousPoint","globalCompositeOperation","Rubber","draw","middlePoint","FetchPointsArround","callback","s","Save","croppedSize","CropImageData","png","CreatePngs","leafletBounds","LatLngBounds","containerPointToLatLng","Point","xMin","yMin","xMax","yMax","circlesPencilPattern","circlesPencilColor","circlesPencilGetPattern","patternCanvas","doublePI","PI","radius","fillStyle","beginPath","arc","fill","createPattern","CirclesPencil","sketch","pattern","drawPatternPencil","crayonPencilPattern","crayonPencilColor","crayonPencilPattern2","crayonPencilColor2","crayonPencilGetPattern","mode","fillRect","random","pixels","data","n","rogerCanvas","rogerCtx","biggerSize","drawImage","lockupCurveTable","Array","iL","cptIL","ProceduralPencil","maxAngle","sdx","sdy","speed","strokeStyle","lineWidth","lineCap","lineJoin","moveTo","lineTo","stroke","angleCst","atan2","limitAngleMax","limitAngleMin","lines","px","py","dx","dy","d","angle","rl","mx","my","RestrainedProceduralPencil","UglyFeltPen","quadraticCurveTo","sqrt","xa","ya","xb","yb","w","min","widthRatio","tmpGlobalCompositeOperation","stripesPencilPattern","stripesPencilColor","stripesPencilGetPattern","closePath","StripesPencil","MergeModifiedAreas","modifiedAreas","areas","p","split","parseInt","_RecursiveMadness","newAreas","area","_lapin","DrawAreas","GetImageData","h","Number","MAX_VALUE","found","pixelPosition","pixelAlpha","CroppedDrawAreas","console","log","croppedBounds","newBounds","images","tmpCanvas","toDataURL","Map_paint","addHandler","removeHandler"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js"],"sourcesContent":["import {useLeafletContext} from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport {useEffect} from \"react\";\nimport canvasLayer from \"leaflet-canvas-layer\"\nimport {useMap, useMapEvent, useMapEvents} from \"react-leaflet\";\nimport {Handler} from \"leaflet/dist/leaflet-src.esm\";\n\n\nvar MapPaint;\n(function (MapPaint) {\n    MapPaint.SwitchControl = L.Control.extend({\n        options: {\n            position: 'bottomright'\n        },\n        onAdd: function (map) {\n            var container = L.DomUtil.create('div', 'leaflet-bar mappaint-switch');\n\n            var mapPaint = map.MapPaint;\n\n            if (mapPaint.enabled()) {\n                container.classList.add(\"enabled\");\n            }\n\n            container.onclick = function () {\n                if (mapPaint.enabled()) {\n                    mapPaint.disable();\n                    container.classList.remove(\"enabled\");\n                } else {\n                    mapPaint.enable();\n                    container.classList.add(\"enabled\");\n                }\n                return false;\n            };\n\n            return container;\n        }\n    });\n\n    MapPaint.ColorControl = L.Control.extend({\n        options: {\n            position: 'topright',\n            colors: [\n                { r: 0, g: 0, b: 0 },\n                { r: 255, g: 255, b: 255 },\n                { r: 229, g: 28, b: 35 },\n                { r: 156, g: 39, b: 176 },\n                { r: 63, g: 81, b: 181 },\n                { r: 3, g: 169, b: 244 },\n                { r: 0, g: 150, b: 136 },\n                { r: 10, g: 126, b: 7 },\n                { r: 205, g: 220, b: 57 },\n                { r: 255, g: 193, b: 7 },\n                { r: 255, g: 87, b: 34 },\n                { r: 121, g: 85, b: 72 },\n                { r: 96, g: 125, b: 139 },\n                { r: 178, g: 168, b: 163 },\n                { r: 255, g: 128, b: 171 }\n            ]\n        },\n        onAdd: function () {\n            var _this = this;\n            var parentContainer = L.DomUtil.create('div', 'mappaint-control');\n            var container = L.DomUtil.create('div', '');\n            parentContainer.appendChild(container);\n\n            var eraserMode = false, fillerMode = false;\n\n            this.options.colors.forEach(function (color) {\n                var c = L.DomUtil.create('div', 'mappaint-color');\n                c.style.background = 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n                container.appendChild(c);\n                c.onclick = function () {\n                    if (eraserMode) {\n                        _this.pencil.DisableEraser();\n                        eraserMode = false;\n                    }\n\n                    if (previousC) {\n                        previousC.classList.remove('selected');\n                    }\n\n                    c.classList.add('selected');\n                    _this.pencil.SetColor(color.r, color.g, color.b);\n\n                    previousC = c;\n                    return false;\n                };\n            });\n\n            var previousC = container.firstChild;\n            previousC.onclick(null);\n\n            return parentContainer;\n        }\n    });\n\n    MapPaint.ActionControl = L.Control.extend({\n        options: {\n            position: 'topleft',\n            pencils: [\n                { name: \"Procedural\", obj: \"ProceduralPencil\" },\n                { name: \"Crayon\", obj: \"CrayonPencil\" },\n                { name: \"Felt\", obj: \"UglyFeltPen\" },\n                { name: \"Circles\", obj: \"CirclesPencil\" },\n                { name: \"Stripes\", obj: \"StripesPencil\" }\n            ]\n        },\n        onAdd: function (map) {\n            var _this = this;\n            var parentContainer = L.DomUtil.create('div', 'mappaint-control');\n            var container = L.DomUtil.create('div', '');\n            parentContainer.appendChild(container);\n\n            var btnSave = L.DomUtil.create('button', 'action-button action-button-save');\n            btnSave.appendChild(document.createTextNode('Save'));\n\n            L.DomEvent.addListener(btnSave, 'click', function () {\n                var pencil = _this.pencil;\n                pencil.SavePicture(map, function (image, bounds) {\n                    _this.mappaint.saveMethod(image, bounds);\n                });\n            });\n\n            container.appendChild(btnSave);\n\n            var eraserMode = false, fillerMode = false;\n\n            var eraser = L.DomUtil.create('div', 'mappaint-eraser');\n\n            eraser.onclick = function () {\n                _this.pencil.EnableEraser();\n                eraserMode = true;\n                if (previousC) {\n                    previousC.classList.remove('selected');\n                }\n                eraser.classList.add('selected');\n                previousC = eraser;\n\n                return false;\n            };\n\n            container.appendChild(eraser);\n\n            this.options.pencils.forEach(function (pencil) {\n                var c = L.DomUtil.create('div', 'mappaint-pencil mappaint-' + pencil.obj.toLocaleLowerCase());\n                c.appendChild(document.createTextNode(pencil.name));\n                container.appendChild(c);\n                c.onclick = function () {\n                    if (eraserMode) {\n                        _this.pencil.DisableEraser();\n                        eraserMode = false;\n                    }\n\n                    if (previousC) {\n                        previousC.classList.remove('selected');\n                    }\n\n                    c.classList.add('selected');\n                    _this.pencil.pencil = MapPaint[pencil.obj];\n\n                    previousC = c;\n                    return false;\n                };\n            });\n\n            var previousC = container.children[2];\n            previousC.onclick(null);\n\n            return parentContainer;\n        }\n    });\n})(MapPaint || (MapPaint = {}));\nL.MapPaint = L.Handler.extend({\n    includes: L.Mixin.Events,\n    addHooks: function () {\n        var canvas = this._canvas = document.createElement('canvas');\n        canvas.className = \"mappaint-canvas\";\n\n        var container = this._map._container;\n\n        canvas.height = container.offsetHeight;\n        canvas.width = container.offsetWidth;\n\n        container.appendChild(canvas);\n\n        this.disableMapInteractions();\n\n        this._context = canvas.getContext('2d');\n\n        this.pencil = new MapPaint.Sketchy(this._context);\n\n        this.pencil.retina = this._enhanceContext(this._context);\n\n        this.colorControl = new MapPaint.ColorControl();\n        this.colorControl.pencil = this.pencil;\n        this._map.addControl(this.colorControl);\n\n        this.actionControl = new MapPaint.ActionControl();\n        this.actionControl.pencil = this.pencil;\n        this.actionControl.mappaint = this;\n        this._map.addControl(this.actionControl);\n\n        L.DomEvent.addListener(canvas, 'mousedown', this._onMouseDown, this);\n        L.DomEvent.addListener(canvas, 'mouseup', this._onMouseUp, this);\n        L.DomEvent.addListener(canvas, 'mouseout', this._onMouseOut, this);\n\n        L.DomEvent.addListener(canvas, 'touchstart', this._onTouchStart, this);\n        L.DomEvent.addListener(canvas, 'touchend', this._onTouchEnd, this);\n        L.DomEvent.addListener(canvas, 'touchcancel', this._onTouchEnd, this);\n\n        L.DomEvent.addListener(canvas, 'contextmenu', function (e) {\n            return e.preventDefault() && false;\n        });\n\n        this._map.on('resize', this._onResize, this);\n    },\n    _onMouseDown: function (e) {\n        if (e.button) {\n            this.pencil.EnableFiller();\n        } else {\n            this.pencil.DisableFiller();\n        }\n\n        this.pencil.Start('mouse', this._map.mouseEventToContainerPoint(e));\n\n        L.DomEvent.addListener(this._canvas, 'mousemove', this._onMouseMove, this);\n\n        e.preventDefault();\n    },\n    _onMouseMove: function (e) {\n        if (this._mouseOut) {\n            this._mouseOut = false;\n            this.pencil.Start('mouse', this._map.mouseEventToContainerPoint(e));\n        } else {\n            this.pencil.Stroke('mouse', this._map.mouseEventToContainerPoint(e));\n        }\n\n        e.preventDefault();\n    },\n    _onMouseUp: function (e) {\n        this.pencil.Stop('mouse');\n        L.DomEvent.removeListener(this._canvas, 'mousemove', this._onMouseMove, this);\n        e.preventDefault();\n    },\n    _onMouseOut: function (e) {\n        this._mouseOut = true;\n    },\n    _onTouchStart: function (e) {\n        for (var i = 0, l = e.touches.length; i < l; ++i) {\n            var t = e.touches[i];\n            this.pencil.Start(\"touch\" + t.identifier, this._map.mouseEventToContainerPoint(t));\n        }\n\n        L.DomEvent.addListener(this._canvas, 'touchmove', this._onTouchMove, this);\n\n        e.preventDefault();\n    },\n    _onTouchMove: function (e) {\n        for (var i = 0, l = e.touches.length; i < l; ++i) {\n            var t = e.touches[i];\n            this.pencil.Stroke(\"touch\" + t.identifier, this._map.mouseEventToContainerPoint(t));\n        }\n\n        e.preventDefault();\n    },\n    _onTouchEnd: function (e) {\n        for (var i = 0, l = e.touches.length; i < l; ++i) {\n            var t = e.touches[i];\n            this.pencil.Stop(\"touch\" + t.identifier);\n        }\n\n        L.DomEvent.removeListener(this._canvas, 'touchmove', this._onTouchMove);\n    },\n    disableMapInteractions: function () {\n        var map = this._map;\n\n        this._interactionsStates = {\n            dragging: map.dragging.enabled(),\n            touchZoom: map.touchZoom.enabled(),\n            doubleClickZoom: map.doubleClickZoom.enabled(),\n            scrollWheelZoom: map.scrollWheelZoom.enabled(),\n            boxZoom: map.boxZoom.enabled(),\n            keyboard: map.keyboard.enabled(),\n            tap: map.tap && map.tap.enabled()\n        };\n\n        map.dragging.disable();\n        map.touchZoom.disable();\n        map.doubleClickZoom.disable();\n        map.scrollWheelZoom.disable();\n        map.boxZoom.disable();\n        map.keyboard.disable();\n        map.tap && map.tap.disable();\n    },\n    restoreMapInteractions: function () {\n        var map = this._map, interactions = this._interactionsStates;\n\n        if (interactions.dragging) {\n            map.dragging.enable();\n        }\n\n        if (interactions.touchZoom) {\n            map.touchZoom.enable();\n        }\n\n        if (interactions.doubleClickZoom) {\n            map.doubleClickZoom.enable();\n        }\n\n        if (interactions.scrollWheelZoom) {\n            map.scrollWheelZoom.enable();\n        }\n\n        if (interactions.boxZoom) {\n            map.boxZoom.enable();\n        }\n\n        if (interactions.keyboard) {\n            map.keyboard.enable();\n        }\n\n        if (interactions.tap) {\n            map.tap.enable();\n        }\n    },\n    _enhanceContext: function () {\n        var canvas = this._canvas;\n        var ratio = window.devicePixelRatio || 1, width = canvas.width, height = canvas.height;\n\n        if (ratio > 1) {\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = width + \"px\";\n            canvas.style.height = height + \"px\";\n            this._context.scale(ratio, ratio);\n            return ratio;\n        }\n        return 1.0;\n    },\n    _onResize: function (e) {\n        var canvas = this._canvas, ctx = this._context, imageData = ctx.getImageData(0, 0, canvas.width, canvas.height), container = this._map._container;\n\n        canvas.height = container.offsetHeight;\n        canvas.width = container.offsetWidth;\n\n        this._enhanceContext();\n        this.pencil.ClearDatagrid();\n\n        var center = e.newSize.subtract(e.oldSize).multiplyBy(0.5);\n\n        ctx.putImageData(imageData, center.x, center.y);\n    },\n    removeHooks: function () {\n        var _this = this;\n        this.pencil.SavePicture(this._map, function (image, bounds) {\n            if (window.confirm(\"Do you want to save your drawing?\")) {\n                _this.saveMethod(image, bounds);\n            }\n        });\n\n        this._map._container.removeChild(this._canvas);\n        this._map.removeControl(this.actionControl);\n        this._map.removeControl(this.colorControl);\n        this._map.off('resize', this._onResize, this);\n        this.restoreMapInteractions();\n        this.restoreMapInteractions();\n        this.restoreMapInteractions();\n    },\n    saveMethod: function (image, bounds) {\n        L.imageOverlay(image, bounds).addTo(this._map);\n    }\n});\n\nL.Map.addInitHook('addHandler', 'MapPaint', L.MapPaint);\nvar MapPaint;\n(function (MapPaint) {\n    var SimplePartitionGrid = (function () {\n        function SimplePartitionGrid(size, margin) {\n            this.size = size;\n            this.margin = margin;\n            this._grid = {};\n            this._modifiedAreas = {};\n        }\n        SimplePartitionGrid.prototype.Add = function (point) {\n            var posX = Math.floor(point.x / this.size), posY = Math.floor(point.y / this.size), key = posX + \"-\" + posY;\n\n            if (this._grid.hasOwnProperty(key)) {\n                this._grid[key].push(point);\n            } else {\n                this._grid[key] = [point];\n                this._modifiedAreas[key] = true;\n            }\n        };\n\n        SimplePartitionGrid.prototype.ApplyRemove = function () {\n            for (var key in this._grid) {\n                var cell = this._grid[key], newt = [], change = false;\n\n                for (var i = 0, l = cell.length; i < l; ++i) {\n                    if (!cell[i].remove) {\n                        newt.push(i);\n                    } else {\n                        change = true;\n                    }\n                }\n\n                if (change) {\n                    this._grid[key] = newt;\n                }\n            }\n        };\n\n        SimplePartitionGrid.prototype._ConcatWithKey = function (points, key) {\n            if (this._grid.hasOwnProperty(key)) {\n                return points.concat(this._grid[key]);\n            }\n            return points;\n        };\n\n        SimplePartitionGrid.prototype.FetchArround = function (point) {\n            var posX = Math.floor(point.x / this.size), posY = Math.floor(point.y / this.size), startX = posX * this.size, startY = posY * this.size, key = posX + \"-\" + posY, points = this._grid.hasOwnProperty(key) ? this._grid[key].slice() : [];\n\n            if (point.x - startX < this.margin) {\n                points = this._ConcatWithKey(points, (posX - 1) + \"-\" + posY);\n            }\n\n            if (point.y - startY < this.margin) {\n                points = this._ConcatWithKey(points, posX + \"-\" + (posY - 1));\n            }\n\n            var upperMargin = this.size - this.margin;\n            if (point.x - startX > upperMargin) {\n                points = this._ConcatWithKey(points, (posX + 1) + \"-\" + posY);\n            }\n\n            if (point.y - startY > upperMargin) {\n                points = this._ConcatWithKey(points, posX + \"-\" + (posY + 1));\n            }\n\n            return points;\n        };\n\n        SimplePartitionGrid.prototype.Clear = function () {\n            this._grid = {};\n        };\n\n        SimplePartitionGrid.prototype.ClearModifiedAreas = function () {\n            this._modifiedAreas = {};\n        };\n\n        SimplePartitionGrid.prototype.GetModifiedAreas = function () {\n            return this._modifiedAreas;\n        };\n\n        SimplePartitionGrid.prototype.GetGridSize = function () {\n            return this.size;\n        };\n        return SimplePartitionGrid;\n    })();\n    MapPaint.SimplePartitionGrid = SimplePartitionGrid;\n})(MapPaint || (MapPaint = {}));\nvar MapPaint;\n(function (MapPaint) {\n    var Sketchy = (function () {\n        function Sketchy(context) {\n            this.dataGrid = new MapPaint.SimplePartitionGrid(128, 80);\n            this.context = context;\n            this.previousPoints = {};\n            this.tapOrClick = {};\n            this.eraser = false;\n            this.retina = 1.0;\n\n            this.modeFiller = false;\n\n            this.SetColor(0, 0, 0);\n\n            this.pencil = MapPaint.CrayonPencil;\n        }\n        Sketchy.prototype.SetColor = function (r, g, b) {\n            var c = 'rgba(' + r + ',' + g + ',' + b;\n            this.color = c + ',0.45)';\n            this.colorFull = c + ',1.0)';\n            this.colorAlternative = c + ',0.16)';\n            this.colorDark = 'rgba(' + Math.round(Math.max(0, r * 0.65 - 10)) + ',' + Math.round(Math.max(0, g * 0.65 - 10)) + ',' + Math.round(Math.max(0, b * 0.65 - 10)) + ',0.07)';\n            this.dataGrid.Clear();\n        };\n\n        Sketchy.prototype.EnableFiller = function () {\n            this.modeFiller = true;\n            this.dataGrid.Clear();\n        };\n\n        Sketchy.prototype.DisableFiller = function () {\n            this.modeFiller = false;\n            this.dataGrid.Clear();\n        };\n\n        Sketchy.prototype.EnableEraser = function () {\n            this.eraser = true;\n            this.dataGrid.Clear();\n        };\n\n        Sketchy.prototype.DisableEraser = function () {\n            this.eraser = false;\n            this.dataGrid.Clear();\n        };\n\n        Sketchy.prototype.Start = function (input, point) {\n            this.previousPoints[input] = point;\n            this.tapOrClick[input] = true;\n\n            this.dataGrid.Add(point);\n        };\n\n        Sketchy.prototype.Stroke = function (input, point) {\n            this.tapOrClick[input] = false;\n\n            var ctx = this.context, previousPoint = this.previousPoints[input];\n\n            ctx.globalCompositeOperation = this.modeFiller ? 'destination-over' : 'source-over';\n\n            if (this.eraser) {\n                MapPaint.Rubber.draw(ctx, point, previousPoint, this);\n            } else {\n                this.pencil.draw(ctx, point, previousPoint, this);\n            }\n\n            this.previousPoints[input] = point;\n\n            this.dataGrid.Add(point);\n\n            if (this.retina > 1.0) {\n                var middlePoint = {\n                    x: (point.x + previousPoint.x) / 2,\n                    y: (point.y + previousPoint.y) / 2\n                };\n\n                this.dataGrid.Add(middlePoint);\n            }\n        };\n\n        Sketchy.prototype.Stop = function (input) {\n            if (this.tapOrClick[input]) {\n                var previousPoint = this.previousPoints[input], point = {\n                    x: previousPoint.x + 1,\n                    y: previousPoint.y + 1\n                };\n                this.Stroke(input, point);\n            }\n            delete this.previousPoints[input];\n            if (this.eraser) {\n                this.dataGrid.ApplyRemove();\n            }\n        };\n\n        Sketchy.prototype.Clear = function () {\n            this.context.canvas.width = this.context.canvas.width;\n            this.context.scale(this.retina, this.retina);\n            this.dataGrid.Clear();\n            this.dataGrid.ClearModifiedAreas();\n        };\n\n        Sketchy.prototype.ClearDatagrid = function () {\n            this.dataGrid.Clear();\n        };\n\n        Sketchy.prototype.FetchPointsArround = function (point) {\n            return this.dataGrid.FetchArround(point);\n        };\n\n        Sketchy.prototype.SavePicture = function (map, callback) {\n            var context = this.context;\n            var s = new MapPaint.Save(context, 128, this.retina);\n\n            var imageData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n            var croppedSize = s.CropImageData(imageData);\n\n            if (!croppedSize) {\n                return false;\n            }\n\n            var png = s.CreatePngs([croppedSize]);\n            if (png.length && png[0]) {\n                var leafletBounds = new L.LatLngBounds(map.containerPointToLatLng(new L.Point(croppedSize.xMin, croppedSize.yMin)), map.containerPointToLatLng(new L.Point(croppedSize.xMax, croppedSize.yMax)));\n\n                callback(png[0], leafletBounds);\n            }\n\n            this.Clear();\n\n            return true;\n        };\n        return Sketchy;\n    })();\n    MapPaint.Sketchy = Sketchy;\n})(MapPaint || (MapPaint = {}));\nvar MapPaint;\n(function (MapPaint) {\n    var circlesPencilPattern, circlesPencilColor, circlesPencilGetPattern = function (color) {\n        if (circlesPencilPattern && circlesPencilColor === color) {\n            return circlesPencilPattern;\n        }\n\n        circlesPencilColor = color;\n\n        var patternCanvas = document.createElement('canvas'), ctx = patternCanvas.getContext('2d'), doublePI = Math.PI * 2, radius = 4, size = 20;\n\n        patternCanvas.width = patternCanvas.height = size;\n        ctx.fillStyle = color;\n        ctx.beginPath();\n\n        ctx.beginPath();\n        ctx.arc(0, 0, radius, 0, doublePI);\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(0, size, radius, 0, doublePI);\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(size, size, radius, 0, doublePI);\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(size, 0, radius, 0, doublePI);\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(size / 2, size / 2, radius + 1, 0, doublePI);\n        ctx.fill();\n\n        return circlesPencilPattern = ctx.createPattern(patternCanvas, 'repeat');\n    };\n\n    MapPaint.CirclesPencil = {\n        draw: function (ctx, point, previousPoint, sketch) {\n            var pattern = circlesPencilGetPattern(sketch.colorFull);\n            MapPaint.drawPatternPencil(ctx, point, previousPoint, sketch, pattern);\n        }\n    };\n})(MapPaint || (MapPaint = {}));\nvar MapPaint;\n(function (MapPaint) {\n    var crayonPencilPattern, crayonPencilColor, crayonPencilPattern2, crayonPencilColor2, crayonPencilGetPattern = function (color, mode) {\n        if (mode === 1 && crayonPencilPattern && crayonPencilColor === color) {\n            return crayonPencilPattern;\n        }\n\n        if (mode === 2 && crayonPencilPattern2 && crayonPencilColor2 === color) {\n            return crayonPencilPattern2;\n        }\n\n        if (mode === 1) {\n            crayonPencilColor = color;\n        } else if (mode == 2) {\n            crayonPencilColor2 = color;\n        }\n\n        var patternCanvas = document.createElement('canvas'), ctx = patternCanvas.getContext('2d'), size = 40;\n\n        patternCanvas.width = patternCanvas.height = size;\n\n        ctx.fillStyle = color;\n        ctx.fillRect(0, 0, size, size);\n\n        var imageData = ctx.getImageData(0, 0, size, size), random = Math.random, pixels = imageData.data;\n\n        for (var i = 0, n = pixels.length; i < n; i += 4) {\n            pixels[i + 3] = (random() * 256) | 0;\n        }\n\n        ctx.putImageData(imageData, 0, 0);\n\n        var rogerCanvas = document.createElement('canvas'), rogerCtx = rogerCanvas.getContext('2d');\n\n        var biggerSize = size * 2;\n        rogerCanvas.width = rogerCanvas.height = biggerSize;\n\n        rogerCtx.drawImage(patternCanvas, 0, 0, size, size, 0, 0, biggerSize, biggerSize);\n\n        size = biggerSize;\n\n        imageData = rogerCtx.getImageData(0, 0, size, size);\n        pixels = imageData.data;\n\n        var max = mode === 1 ? 142 : 202;\n\n        var lockupCurveTable = new Array(256);\n\n        var iL = 0;\n        for (; iL < max - 25; ++iL) {\n            lockupCurveTable[iL] = 255;\n        }\n\n        for (var cptIL = 0; iL < max + 25; ++iL & ++cptIL) {\n            lockupCurveTable[iL] = 255 - cptIL * 5;\n        }\n\n        for (; iL < 256; ++iL) {\n            lockupCurveTable[iL] = 0;\n        }\n\n        for (var x = 0; x < size; ++x) {\n            for (var y = 0; y < size; ++y) {\n                var i = ((x * size + y) << 2) + 3;\n                pixels[i] = lockupCurveTable[pixels[i]];\n            }\n        }\n        rogerCtx.putImageData(imageData, 0, 0);\n\n        if (mode === 1) {\n            return crayonPencilPattern = ctx.createPattern(rogerCanvas, 'repeat');\n        } else {\n            return crayonPencilPattern2 = ctx.createPattern(rogerCanvas, 'repeat');\n        }\n    };\n\n    MapPaint.CrayonPencil = {\n        draw: function (ctx, point, previousPoint, sketch) {\n            var r = sketch.retina > 1.0 ? 0.66 : 1.0;\n            var pattern = crayonPencilGetPattern(sketch.colorFull, 1);\n            MapPaint.drawPatternPencil(ctx, point, previousPoint, sketch, pattern, 0.25 * r);\n\n            pattern = crayonPencilGetPattern(sketch.colorFull, 2);\n            MapPaint.drawPatternPencil(ctx, point, previousPoint, sketch, pattern, 0.15 * r);\n        }\n    };\n})(MapPaint || (MapPaint = {}));\nvar MapPaint;\n(function (MapPaint) {\n    MapPaint.ProceduralPencil = {\n        draw: function (ctx, point, previousPoint, sketch, maxAngle) {\n            var sdx = previousPoint.x - point.x, sdy = previousPoint.y - point.y, speed = sdx * sdx + sdy * sdy;\n\n            ctx.beginPath();\n            ctx.strokeStyle = sketch.color;\n            ctx.lineWidth = 1;\n            ctx.lineCap = 'butt';\n            ctx.lineJoin = 'miter';\n\n            ctx.moveTo(previousPoint.x, previousPoint.y);\n            ctx.lineTo(point.x, point.y);\n\n            ctx.stroke();\n\n            ctx.strokeStyle = sketch.colorAlternative;\n\n            if (maxAngle) {\n                var angleCst = Math.atan2(previousPoint.x - point.x, previousPoint.y - point.y);\n                var doublePI = Math.PI + Math.PI, limitAngleMax = doublePI - maxAngle, limitAngleMin = maxAngle;\n            }\n\n            if (speed < (sketch.retina > 1.0 ? 2200 : 800)) {\n                var points = sketch.FetchPointsArround(point);\n\n                var lines = [];\n                ctx.beginPath();\n                ctx.strokeStyle = sketch.modeFiller ? sketch.colorAlternative : sketch.colorDark;\n                ctx.lineWidth = 2;\n\n                for (var i = 0, l = points.length; i < l; ++i) {\n                    var px = points[i].x, py = points[i].y, dx = px - point.x, dy = py - point.y, d = dx * dx + dy * dy;\n\n                    if (d < 2684) {\n                        if (maxAngle) {\n                            var angle = Math.atan2(px - point.x, py - point.y) - angleCst;\n                            if (angle < 0) {\n                                angle += doublePI;\n                            } else if (angle > doublePI) {\n                                angle -= doublePI;\n                            }\n                        }\n                        if ((!maxAngle || (angle > limitAngleMax || angle < limitAngleMin)) && Math.random() > d / 1342) {\n                            lines.push(points[i]);\n\n                            if (sketch.modeFiller || Math.random() > 0.3) {\n                                var rl = 0.2 + Math.random() * 0.14, mx = dx * rl, my = dy * rl;\n                                ctx.moveTo(point.x + mx, point.y + my);\n                                ctx.lineTo(px - mx, py - my);\n                            }\n                        }\n                    }\n                }\n\n                ctx.stroke();\n\n                ctx.beginPath();\n                ctx.strokeStyle = sketch.modeFiller ? sketch.colorDark : sketch.colorAlternative;\n                ctx.lineWidth = 1;\n\n                for (i = 0, l = lines.length; i < l; ++i) {\n                    if (!sketch.modeFiller || Math.random() > 0.3) {\n                        px = lines[i].x;\n                        py = lines[i].y;\n                        dx = px - point.x;\n                        dy = py - point.y;\n                        rl = 0.2 + Math.random() * 0.14;\n                        mx = dx * rl;\n                        my = dy * rl;\n                        ctx.moveTo(point.x + mx, point.y + my);\n                        ctx.lineTo(px - mx, py - my);\n                    }\n                }\n\n                ctx.stroke();\n            }\n        }\n    };\n\n    MapPaint.RestrainedProceduralPencil = {\n        draw: function (ctx, point, previousPoint, sketch) {\n            MapPaint.ProceduralPencil.draw(ctx, point, previousPoint, sketch, 0.2);\n        }\n    };\n})(MapPaint || (MapPaint = {}));\nvar MapPaint;\n(function (MapPaint) {\n    MapPaint.UglyFeltPen = {\n        draw: function (ctx, point, previousPoint, sketch) {\n            ctx.beginPath();\n            ctx.moveTo(previousPoint.x, previousPoint.y);\n            ctx.quadraticCurveTo((previousPoint.x + point.x) * 0.5, (previousPoint.y + point.y) * 0.5, point.x, point.y);\n\n            ctx.strokeStyle = sketch.color;\n            ctx.lineWidth = 10;\n            ctx.lineCap = 'round';\n            ctx.lineJoin = 'round';\n\n            ctx.stroke();\n\n            ctx.lineWidth = 8;\n            ctx.strokeStyle = sketch.colorFull;\n\n            ctx.stroke();\n        }\n    };\n})(MapPaint || (MapPaint = {}));\nvar MapPaint;\n(function (MapPaint) {\n    MapPaint.Rubber = {\n        draw: function (ctx, point, previousPoint, sketch) {\n            var sdx = previousPoint.x - point.x, sdy = previousPoint.y - point.y, speed = Math.sqrt(sdx * sdx + sdy * sdy);\n\n            var xa = 0, ya = 26, xb = 80, yb = 120;\n\n            var w = Math.floor(ya + (Math.min(speed, xb) - xa) * ((yb - ya) / (xb - xa)));\n            ctx.globalCompositeOperation = 'destination-out';\n\n            ctx.beginPath();\n            ctx.strokeStyle = 'black';\n            ctx.lineWidth = w;\n            ctx.lineCap = 'round';\n            ctx.lineJoin = 'round';\n\n            ctx.moveTo(previousPoint.x, previousPoint.y);\n            ctx.quadraticCurveTo((previousPoint.x + point.x) * 0.5, (previousPoint.y + point.y) * 0.5, point.x, point.y);\n\n            ctx.stroke();\n        }\n    };\n})(MapPaint || (MapPaint = {}));\nvar MapPaint;\n(function (MapPaint) {\n    MapPaint.drawPatternPencil = function (ctx, point, previousPoint, sketch, pattern, widthRatio) {\n        if (typeof widthRatio === \"undefined\") { widthRatio = 1.0; }\n        var sdx = previousPoint.x - point.x, sdy = previousPoint.y - point.y, speed = Math.sqrt(sdx * sdx + sdy * sdy);\n\n        var xa = 0, ya = 26, xb = 80, yb = 60;\n\n        var w = widthRatio * Math.floor(ya + (Math.min(speed, xb) - xa) * ((yb - ya) / (xb - xa)));\n\n        ctx.beginPath();\n        ctx.moveTo(previousPoint.x, previousPoint.y);\n        ctx.quadraticCurveTo((previousPoint.x + point.x) * 0.5, (previousPoint.y + point.y) * 0.5, point.x, point.y);\n\n        ctx.lineCap = 'round';\n        ctx.lineJoin = 'round';\n\n        var tmpGlobalCompositeOperation = ctx.globalCompositeOperation;\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = w - 1;\n\n        ctx.stroke();\n\n        ctx.strokeStyle = pattern;\n        ctx.lineWidth = w;\n\n        ctx.globalCompositeOperation = tmpGlobalCompositeOperation;\n\n        ctx.stroke();\n    };\n\n    var stripesPencilPattern, stripesPencilColor, stripesPencilGetPattern = function (color) {\n        if (stripesPencilPattern && stripesPencilColor === color) {\n            return stripesPencilPattern;\n        }\n\n        stripesPencilColor = color;\n\n        var patternCanvas = document.createElement('canvas'), ctx = patternCanvas.getContext('2d');\n\n        patternCanvas.width = patternCanvas.height = 12;\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n\n        ctx.moveTo(-6, 6);\n        ctx.lineTo(6, -6);\n\n        ctx.moveTo(-6, 18);\n        ctx.lineTo(18, -6);\n\n        ctx.moveTo(6, 18);\n        ctx.lineTo(18, 6);\n\n        ctx.closePath();\n        ctx.stroke();\n        return stripesPencilPattern = ctx.createPattern(patternCanvas, 'repeat');\n    };\n\n    MapPaint.StripesPencil = {\n        draw: function (ctx, point, previousPoint, sketch) {\n            var pattern = stripesPencilGetPattern(sketch.colorFull);\n            MapPaint.drawPatternPencil(ctx, point, previousPoint, sketch, pattern);\n        }\n    };\n})(MapPaint || (MapPaint = {}));\nvar MapPaint;\n(function (MapPaint) {\n    var Save = (function () {\n        function Save(context, size, retina) {\n            this.context = context;\n            this.size = size;\n            this.retina = retina;\n        }\n        Save.prototype.MergeModifiedAreas = function (modifiedAreas) {\n            var areas = {};\n\n            var key;\n\n            for (key in modifiedAreas) {\n                areas[key] = null;\n            }\n\n            for (key in areas) {\n                if (areas[key] === null) {\n                    var p = key.split('-'), x = parseInt(p[0]), y = parseInt(p[1]);\n\n                    var bounds = {\n                        xMin: x,\n                        xMax: x + 1,\n                        yMin: y,\n                        yMax: y + 1\n                    };\n\n                    Save._RecursiveMadness(areas, x, y, bounds);\n                }\n            }\n\n            var newAreas = [];\n\n            for (key in areas) {\n                var area = areas[key];\n                if (!area._lapin) {\n                    newAreas.push(area);\n                    area._lapin = true;\n                    area.xMin *= this.size;\n                    area.xMax *= this.size;\n                    area.yMin *= this.size;\n                    area.yMax *= this.size;\n                }\n            }\n\n            return newAreas;\n        };\n\n        Save._RecursiveMadness = function (areas, x, y, bounds) {\n            var key = x + '-' + y;\n\n            if (areas.hasOwnProperty(key) && areas[key] === null) {\n                bounds.xMin = Math.min(x, bounds.xMin);\n                bounds.xMax = Math.max(x + 1, bounds.xMax);\n                bounds.yMin = Math.min(y, bounds.yMin);\n                bounds.yMax = Math.max(y + 1, bounds.yMax);\n\n                areas[key] = bounds;\n\n                this._RecursiveMadness(areas, x - 1, y, bounds);\n                this._RecursiveMadness(areas, x, y - 1, bounds);\n                this._RecursiveMadness(areas, x + 1, y, bounds);\n                this._RecursiveMadness(areas, x, y + 1, bounds);\n                this._RecursiveMadness(areas, x - 1, y - 1, bounds);\n                this._RecursiveMadness(areas, x + 1, y - 1, bounds);\n                this._RecursiveMadness(areas, x + 1, y + 1, bounds);\n                this._RecursiveMadness(areas, x - 1, y + 1, bounds);\n            }\n        };\n\n        Save.prototype.DrawAreas = function (areas) {\n            this.context.fillStyle = 'rgba(255,128,64,0.25)';\n\n            for (var key in areas) {\n                var bounds = areas[key];\n\n                this.context.fillRect(bounds.xMin, bounds.yMin, bounds.xMax - bounds.xMin, bounds.yMax - bounds.yMin);\n            }\n        };\n\n        Save.prototype.GetImageData = function (bounds) {\n            var r = this.retina;\n            return this.context.getImageData(bounds.xMin * r, bounds.yMin * r, (bounds.xMax - bounds.xMin) * r, (bounds.yMax - bounds.yMin) * r);\n        };\n\n        Save.prototype.CropImageData = function (image) {\n            var w = image.width, h = image.height, r = this.retina;\n\n            var xMin = Number.MAX_VALUE, xMax = -Number.MAX_VALUE, yMin = Number.MAX_VALUE, yMax = -Number.MAX_VALUE, found = false;\n\n            for (var y = 0; y < h; ++y) {\n                for (var x = 0; x < w; ++x) {\n                    var pixelPosition = (y * w + x) * 4 + 3, pixelAlpha = image.data[pixelPosition];\n\n                    if (pixelAlpha > 0) {\n                        found = true;\n                        if (y < yMin) {\n                            yMin = y;\n                        }\n                        if (y > yMax) {\n                            yMax = y;\n                        }\n                        if (x > xMax) {\n                            xMax = x;\n                        }\n                        if (x < xMin) {\n                            xMin = x;\n                        }\n                    }\n                }\n            }\n\n            if (found) {\n                return {\n                    xMin: xMin / r,\n                    xMax: xMax / r,\n                    yMin: yMin / r,\n                    yMax: yMax / r\n                };\n            } else {\n                return null;\n            }\n        };\n\n        Save.prototype.CroppedDrawAreas = function (areas) {\n            var _this = this;\n            var newAreas = [];\n\n            var margin = 8;\n\n            areas.forEach(function (area) {\n                if (!area)\n                    return;\n                console.log(area);\n                var imageData = _this.GetImageData(area);\n                console.log(imageData);\n\n                var croppedBounds = _this.CropImageData(imageData);\n                console.log(croppedBounds);\n                if (!croppedBounds)\n                    return;\n\n                var newBounds = {\n                    xMin: Math.max(0, area.xMin + croppedBounds.xMin - margin),\n                    xMax: area.xMin + croppedBounds.xMax + margin,\n                    yMin: Math.max(0, area.yMin + croppedBounds.yMin - margin),\n                    yMax: area.yMin + croppedBounds.yMax + margin\n                };\n\n                newAreas.push(newBounds);\n            });\n\n            return newAreas;\n        };\n\n        Save.prototype.CreatePngs = function (areas) {\n            var _this = this;\n            var images = [], r = this.retina;\n            areas.forEach(function (area) {\n                if (!area) {\n                    images.push(null);\n                    return;\n                }\n                ;\n\n                var imageData = _this.GetImageData(area);\n\n                var tmpCanvas = document.createElement('canvas');\n                tmpCanvas.width = (area.xMax - area.xMin) * r;\n                tmpCanvas.height = (area.yMax - area.yMin) * r;\n\n                tmpCanvas.getContext('2d').putImageData(imageData, 0, 0);\n\n                images.push(tmpCanvas.toDataURL('image/png'));\n            });\n\n            return images;\n        };\n        return Save;\n    })();\n    MapPaint.Save = Save;\n})(MapPaint || (MapPaint = {}));\n//# sourceMappingURL=MapPaint.js.map\n\n\nconst Map_paint = () => {\n\n\n    const ctx = useLeafletContext()\n\n\n\n\n    useEffect(() => {\n\n\n\n        const container = ctx.map\n        var bounds = [[54.559322, -5.767822], [56.1210604, -3.021240]];\n\n\n\n\n\n\n\n\n\n\n\n        container.addHandler(MapPaint)\n\n\n\n        return () => {\n            container.removeHandler(MapPaint)\n\n        }\n\n        })\n}\n\nexport default Map_paint"],"mappings":"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"},"metadata":{},"sourceType":"module"}