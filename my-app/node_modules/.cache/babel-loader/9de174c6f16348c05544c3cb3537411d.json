{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useLeafletContext } from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport { useState, useEffect } from \"react\";\nimport canvasLayer from \"leaflet-canvas-layer\";\nimport { useMap, useMapEvent, useMapEvents } from \"react-leaflet\";\nimport { Handler, latLng } from \"leaflet/dist/leaflet-src.esm\";\nimport Canvas from \"./Canvas\";\nimport { getPosition } from \"leaflet/src/dom/DomUtil\";\nL.CustomLayer = L.Layer.extend({\n  onAdd: _s(function (map) {\n    _s();\n\n    var pane = map.getPane(this.options.pane);\n    this._container = L.DomUtil.create(\"canvas\");\n    pane.appendChild(this._container); // Calculate initial position of container with `L.Map.latLngToLayerPoint()`, `getPixelOrigin()` and/or `getPixelBounds()`\n\n    L.DomUtil.setPosition(this._container, \"topleft\"); // Add and position children elements if needed\n\n    map.on('zoomend viewreset', this._update, this);\n    const [isDrawing, setIsDrawing] = useState(false);\n\n    var context = this._container.getContext(\"2d\");\n\n    context.lineCap = \"round\";\n    context.strokeStyle = \"black\";\n    context.lineWidth = 5;\n\n    const startDrawing = _ref => {\n      let {\n        nativeEvent\n      } = _ref;\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent;\n      context.current.beginPath();\n      context.current.moveTo(offsetX, offsetY);\n      context.current.lineTo(offsetX, offsetY);\n      context.current.stroke();\n      setIsDrawing(true);\n      nativeEvent.preventDefault();\n    };\n  }, \"7VFzt+QToKYudd8mNeK94Rq2uCk=\"),\n  onRemove: function (map) {\n    L.DomUtil.remove(this._container);\n    map.off('zoomend viewreset', this._update, this);\n  },\n  _update: function () {\n    // Recalculate position of container\n    L.DomUtil.setPosition(this._container, \"topleft\"); // Add/remove/reposition children elements if needed\n  }\n});\n\nconst Map_paint = () => {\n  _s2();\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const ctx = useLeafletContext();\n  useEffect(() => {\n    const canvas_container = ctx.overlayContainer || ctx.map;\n    const new_grid_layer = new L.CustomLayer();\n    canvas_container.addLayer(new_grid_layer);\n    return () => {\n      canvas_container.removeLayer(new_grid_layer);\n    };\n  });\n};\n\n_s2(Map_paint, \"DX7qMZmz1qqJ5KMtLnld7LKU3ms=\", false, function () {\n  return [useLeafletContext];\n});\n\n_c = Map_paint;\nexport default Map_paint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map_paint\");","map":{"version":3,"names":["useLeafletContext","L","useState","useEffect","canvasLayer","useMap","useMapEvent","useMapEvents","Handler","latLng","Canvas","getPosition","CustomLayer","Layer","extend","onAdd","map","pane","getPane","options","_container","DomUtil","create","appendChild","setPosition","on","_update","isDrawing","setIsDrawing","context","getContext","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","current","beginPath","moveTo","lineTo","stroke","preventDefault","onRemove","remove","off","Map_paint","ctx","canvas_container","overlayContainer","new_grid_layer","addLayer","removeLayer"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js"],"sourcesContent":["import {useLeafletContext} from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport {useState, useEffect} from \"react\";\nimport canvasLayer from \"leaflet-canvas-layer\"\nimport {useMap, useMapEvent, useMapEvents} from \"react-leaflet\";\nimport {Handler, latLng} from \"leaflet/dist/leaflet-src.esm\";\nimport Canvas from \"./Canvas\";\nimport {getPosition} from \"leaflet/src/dom/DomUtil\";\n\n\n\n\n\n\n\n\n\n\n\n\nL.CustomLayer = L.Layer.extend({\n    onAdd: function(map) {\n        var pane = map.getPane(this.options.pane);\n        this._container = L.DomUtil.create(\"canvas\");\n\n        pane.appendChild(this._container);\n\n        // Calculate initial position of container with `L.Map.latLngToLayerPoint()`, `getPixelOrigin()` and/or `getPixelBounds()`\n\n\n\n        L.DomUtil.setPosition(this._container, \"topleft\");\n\n        // Add and position children elements if needed\n\n        map.on('zoomend viewreset', this._update, this);\n\n        const [isDrawing, setIsDrawing] = useState(false) \n        var context = this._container.getContext(\"2d\")\n        context.lineCap = \"round\";\n        context.strokeStyle = \"black\";\n        context.lineWidth = 5;\n\n        const startDrawing = ({nativeEvent}) => {\n        const{offsetX, offsetY} = nativeEvent;\n        context.current.beginPath();\n        context.current.moveTo(offsetX, offsetY);\n        context.current.lineTo(offsetX, offsetY);\n        context.current.stroke();\n        setIsDrawing(true);\n        nativeEvent.preventDefault();\n    };\n\n\n\n    },\n\n    onRemove: function(map) {\n        L.DomUtil.remove(this._container);\n        map.off('zoomend viewreset', this._update, this);\n    },\n\n    _update: function() {\n        // Recalculate position of container\n\n\n        L.DomUtil.setPosition(this._container, \"topleft\");\n\n        // Add/remove/reposition children elements if needed\n    }\n});\n\n\n\n\n\n\n\nconst Map_paint = () => {\n    const [isDrawing, setIsDrawing] = useState(false)\n\n    const ctx = useLeafletContext()\n\n\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n\n\n\n\n\n\n\n\n    const canvas_container = ctx.overlayContainer || ctx.map\n    const new_grid_layer = new L.CustomLayer\n\n\n\n\n\n        canvas_container.addLayer(new_grid_layer)\n\n\n\n\n\n        return () => {\n            canvas_container.removeLayer(new_grid_layer)\n\n\n        }\n\n        })\n}\n\nexport default Map_paint"],"mappings":"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"},"metadata":{},"sourceType":"module"}