{"ast":null,"code":"var mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\nvar params = {\n  h: {\n    def: 100000,\n    num: true\n  },\n  // default is Karman line, no default in PROJ.7\n  azi: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is North\n  tilt: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is Nadir\n  long0: {\n    def: 0,\n    num: true\n  },\n  // default is Greenwich, conversion to rad is automatic\n  lat0: {\n    def: 0,\n    num: true\n  } // default is Equator, conversion to rad is automatic\n\n};\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  } // Tilt \n\n\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = {\n    x: p.x,\n    y: p.y\n  }; // Un-Tilt\n\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n  var rh = hypot(p.x, p.y);\n\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["mode","N_POLE","S_POLE","EQUIT","OBLIQ","D2R","HALF_PI","EPSLN","hypot","params","h","def","num","azi","degrees","tilt","long0","lat0","init","Object","keys","forEach","p","isNaN","Error","parseFloat","bind","Math","abs","sinph0","sin","cosph0","cos","pn1","a","rp","h1","pfact","es","omega","gamma","cg","sg","cw","sw","forward","x","sinphi","y","cosphi","coslam","yt","ba","inverse","r","bm","bq","rh","cosz","sinz","sqrt","asin","atan2","names"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/proj4/lib/projections/tpers.js"],"sourcesContent":["\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}