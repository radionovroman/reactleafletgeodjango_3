{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLeafletContext } from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport { useEffect } from \"react\";\nimport canvasLayer from \"leaflet-canvas-layer\";\nimport { useMap, useMapEvent, useMapEvents } from \"react-leaflet\";\nimport { Handler } from \"leaflet/dist/leaflet-src.esm\";\nimport Canvas from \"./Canvas\";\nimport { getPosition } from \"leaflet/src/dom/DomUtil\";\nimport customLayer from \"leaflet-customlayer\";\nL.GridLayer.Custom_Canvas = L.GridLayer.extend({\n  createTile: function (coords) {\n    var tile = document.createElement('canvas');\n    var tileSize = this.getTileSize();\n    tile.setAttribute('width', tileSize.x);\n    tile.setAttribute('height', tileSize.y);\n    var ctx = tile.getContext('2d'); // Draw whatever is needed in the canvas context\n    // For example, circles which get bigger as we zoom in\n\n    ctx.beginPath();\n    ctx.arc(tileSize.x / 2, tileSize.x / 2, 4 + coords.z * 4, 0, 2 * Math.PI, false);\n    ctx.fill();\n    return tile;\n  }\n});\n\nconst Map_paint = () => {\n  _s();\n\n  const ctx = useLeafletContext();\n  const cnvs_overlay = new customLayer({\n    container: document.createElement(\"canvas\"),\n    padding: 0.1\n  });\n  cnvs_overlay.on(\"layer-render\", function () {\n    var canvas = this.getContainer();\n    var dpr = L.Browser.retina ? 2 : 1;\n\n    var size = this._bounds.getSize();\n\n    var padding = this._padding; // set Size\n\n    canvas.width = dpr * size.x;\n    canvas.height = dpr * size.y;\n    canvas.style.width = size.x + \"px\";\n    canvas.style.height = size.y + \"px\";\n    var ctx = canvas.getContext(\"2d\"); // HD adaptation\n\n    if (L.Browser.retina) ctx.scale(dpr, dpr);\n    ctx.translate(padding.x, padding.y); // draw\n\n    var point = this._map.latLngToContainerPoint({\n      lat: 39.910088,\n      lng: 116.401601\n    });\n\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 5;\n  });\n  useEffect(() => {\n    const canvas_container = ctx.overlayContainer || ctx.map;\n    canvas_container.addLayer(cnvs_overlay);\n    return () => {\n      canvas_container.removeLayer(cnvs_overlay);\n    };\n  });\n};\n\n_s(Map_paint, \"XQIRDxwzUI/GRmQs0qSQEwlDYJc=\", false, function () {\n  return [useLeafletContext];\n});\n\n_c = Map_paint;\nexport default Map_paint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map_paint\");","map":{"version":3,"names":["useLeafletContext","L","useEffect","canvasLayer","useMap","useMapEvent","useMapEvents","Handler","Canvas","getPosition","customLayer","GridLayer","Custom_Canvas","extend","createTile","coords","tile","document","createElement","tileSize","getTileSize","setAttribute","x","y","ctx","getContext","beginPath","arc","z","Math","PI","fill","Map_paint","cnvs_overlay","container","padding","on","canvas","getContainer","dpr","Browser","retina","size","_bounds","getSize","_padding","width","height","style","scale","translate","point","_map","latLngToContainerPoint","lat","lng","lineCap","strokeStyle","lineWidth","canvas_container","overlayContainer","map","addLayer","removeLayer"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js"],"sourcesContent":["import {useLeafletContext} from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport {useEffect} from \"react\";\nimport canvasLayer from \"leaflet-canvas-layer\"\nimport {useMap, useMapEvent, useMapEvents} from \"react-leaflet\";\nimport {Handler} from \"leaflet/dist/leaflet-src.esm\";\nimport Canvas from \"./Canvas\";\nimport {getPosition} from \"leaflet/src/dom/DomUtil\";\nimport customLayer from \"leaflet-customlayer\";\n\n\nL.GridLayer.Custom_Canvas = L.GridLayer.extend({\n    createTile: function (coords){\n        var tile = document.createElement('canvas');\n\n        var tileSize = this.getTileSize();\n        tile.setAttribute('width', tileSize.x);\n        tile.setAttribute('height', tileSize.y);\n\n        var ctx = tile.getContext('2d');\n\n        // Draw whatever is needed in the canvas context\n        // For example, circles which get bigger as we zoom in\n        ctx.beginPath();\n        ctx.arc(tileSize.x/2, tileSize.x/2, 4 + coords.z*4, 0, 2*Math.PI, false);\n        ctx.fill();\n\n        return tile;\n    }\n})\n\n\n\n\n\n\nconst Map_paint = () => {\n\n\n    const ctx = useLeafletContext()\n\n\n\n    const cnvs_overlay = new customLayer({\n        container: document.createElement(\"canvas\"),\n        padding: 0.1\n    });\n\n    cnvs_overlay.on(\"layer-render\", function() {\n  var canvas = this.getContainer();\n  var dpr = L.Browser.retina ? 2 : 1;\n  var size = this._bounds.getSize();\n  var padding = this._padding;\n\n  // set Size\n  canvas.width = dpr * size.x;\n  canvas.height = dpr * size.y;\n  canvas.style.width = size.x + \"px\";\n  canvas.style.height = size.y + \"px\";\n\n  var ctx = canvas.getContext(\"2d\");\n\n  // HD adaptation\n  if (L.Browser.retina) ctx.scale(dpr, dpr);\n  ctx.translate(padding.x, padding.y);\n\n  // draw\n  var point = this._map.latLngToContainerPoint({\n    lat: 39.910088,\n    lng: 116.401601\n  });\n ctx.lineCap = \"round\";\n ctx.strokeStyle = \"black\";\n ctx.lineWidth = 5;\n\n\n\n\n});\n\n\n\n\n    useEffect(() => {\n\n\n\n\n\n\n\n\n    const canvas_container = ctx.overlayContainer || ctx.map\n\n\n\n\n\n\n\n        canvas_container.addLayer(cnvs_overlay)\n\n\n\n        return () => {\n            canvas_container.removeLayer(cnvs_overlay)\n\n\n        }\n\n        })\n}\n\nexport default Map_paint"],"mappings":"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"},"metadata":{},"sourceType":"module"}