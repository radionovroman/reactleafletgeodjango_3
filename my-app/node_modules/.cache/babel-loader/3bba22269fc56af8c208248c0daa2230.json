{"ast":null,"code":"var _jsxFileName = \"/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\nimport axios from \"axios\";\nimport { Alert, Spinner } from \"react-bootstrap\";\nimport useSWR from \"swr\";\nimport { circle, Icon, rectangle } from \"leaflet/dist/leaflet-src.esm\";\nimport { GeoJSON } from 'react-leaflet';\nimport { preventDefault } from \"leaflet/src/dom/DomEvent\";\nimport { clear } from \"@testing-library/user-event/dist/clear\";\nimport { cleanup } from \"@testing-library/react\";\nimport DrawingArea from './DrawingArea';\nimport Canvas from \"./Canvas\";\nimport CanvasLayer from \"react-leaflet-canvas-layer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyData = (props, event) => {\n  _s();\n\n  // create state variable to hold data when it is fetched\n  let [data, setData] = useState(); // useEffect to fetch data on mount\n\n  useEffect(() => {\n    // async function!\n    let getData = async () => {\n      // 'await' the data\n      let response = await axios.get(props.name); // save data to state\n\n      setData(response.data);\n    };\n\n    getData();\n  }, [props.name]); // render react-leaflet GeoJSON when the data is ready\n\n  if (data) {\n    //return <input type={\"text\"} value={name} onChange={updateName}/>;\n    return /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this);\n  } else {\n    //return <input type={\"text\"} value={name} onChange={updateName}/>;\n    return null;\n  }\n};\n\n_s(MyData, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = MyData;\n\nfunction App(event) {\n  _s2();\n\n  const drawingareaRef = useRef(null);\n  const ctx = useRef(null);\n  const mapcontainerRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (drawingareaRef.current) {\n      const context = drawingareaRef.current.getContext(\"2d\");\n      context.drawImage();\n    }\n  }, []);\n  let [name, setName] = useState(\"http://127.0.0.1:8000/api/world/\");\n\n  let updateName = event => {\n    if (event.key === 'Enter' && event.target.value.slice(-4) != \"1914\" && event.target.value != \"German Empire\") {\n      event.preventDefault();\n      setName(\"http://127.0.0.1:8000/api/world/\" + event.target.value);\n    }\n\n    ;\n\n    if (event.key === 'Enter' && event.target.value === \"German Empire\") {\n      event.preventDefault();\n      setName(\"http://127.0.0.1:8000/api/german_empire\");\n    }\n\n    ;\n\n    if (event.key === 'Enter' && event.target.value.slice(-4) === \"1914\") {\n      event.preventDefault();\n      setName(\"http://127.0.0.1:8000/api/world1914/\" + event.target.value.slice(0, -4));\n    } //else {setName(\"\")}\n    //return <MyData name={name + \"/\"}/>\n\n  };\n\n  useEffect(() => {\n    console.log(\"value of 'name' changed to\", name.slice(0, 42));\n  }, [name]);\n\n  let NewData = event => {\n    if (event.key === \"Enter\" && event.target.value.slice(-4) != \"1914\" && event.target.value != \"German Empire\") {}\n\n    return /*#__PURE__*/_jsxDEV(MyData, {\n      name: name + \"/\" + \"?format=json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }, this);\n  };\n\n  if (event.key === \"Enter\" && event.target.value === \"German Empire\") {\n    return /*#__PURE__*/_jsxDEV(MyData, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (event.key === \"Enter\" && event.target.value.slice(-4) === \"1914\") {\n    return /*#__PURE__*/_jsxDEV(MyData, {\n      name: name.slice(0, 42) + \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"display\": \"grid\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Activate Lasers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"style.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"country\",\n        type: \"text\",\n        placeholder: \"type a country here\",\n        onKeyDown: updateName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 2,\n      scrollWheelZoom: true,\n      onKeyDown: updateName,\n      style: {\n        \"border-style\": \"dotted\",\n        \"width\": \"300px\",\n        \"height\": \"300px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        ref: mapcontainerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(NewData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(App, \"E4LhqsYu+rwYR/wPCTT4pJe0q/k=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyData\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","logo","MapContainer","TileLayer","useMap","Marker","Popup","axios","Alert","Spinner","useSWR","circle","Icon","rectangle","GeoJSON","preventDefault","clear","cleanup","DrawingArea","Canvas","CanvasLayer","MyData","props","event","data","setData","getData","response","get","name","App","drawingareaRef","ctx","mapcontainerRef","canvasRef","current","context","getContext","drawImage","setName","updateName","key","target","value","slice","console","log","NewData"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/App.js"],"sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet' ;\nimport axios from \"axios\";\nimport {Alert, Spinner} from \"react-bootstrap\";\nimport useSWR from \"swr\";\nimport {circle, Icon, rectangle} from \"leaflet/dist/leaflet-src.esm\";\nimport { GeoJSON } from 'react-leaflet';\nimport {preventDefault} from \"leaflet/src/dom/DomEvent\";\nimport {clear} from \"@testing-library/user-event/dist/clear\";\nimport {cleanup} from \"@testing-library/react\";\nimport DrawingArea from './DrawingArea';\nimport Canvas from \"./Canvas\";\nimport CanvasLayer from \"react-leaflet-canvas-layer\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst MyData = (props, event) => {\n  // create state variable to hold data when it is fetched\n\n\n\n\n  let [data, setData] = useState();\n\n    // useEffect to fetch data on mount\n\n    useEffect(() => {\n      // async function!\n\n      let getData = async () => {\n        // 'await' the data\n        let response = await axios.get(props.name);\n        // save data to state\n        setData(response.data);\n      };\n\n      getData();\n\n\n    }, [props.name]);\n\n\n\n  // render react-leaflet GeoJSON when the data is ready\n  if (data) {\n    //return <input type={\"text\"} value={name} onChange={updateName}/>;\n\n   return <GeoJSON data={data} />\n\n\n  } else {\n    //return <input type={\"text\"} value={name} onChange={updateName}/>;\n    return null;\n\n\n  }\n\n};\n\n\nfunction App(event) {\n\n  const drawingareaRef = useRef(null);\n  const ctx = useRef(null);\n  const mapcontainerRef = useRef(null);\n  const canvasRef = useRef(null);\n\n   useEffect(() => {\n    if (drawingareaRef.current) {\n      const context = drawingareaRef.current.getContext(\"2d\")\n      context.drawImage()\n    }\n\n  }, [])\n\n\n  let [name, setName] = useState(\"http://127.0.0.1:8000/api/world/\");\n\n\n  let updateName = (event) => {\n\n    if (event.key === 'Enter' && event.target.value.slice(-4) != \"1914\" && event.target.value != \"German Empire\") {\n      event.preventDefault();\n      setName(\"http://127.0.0.1:8000/api/world/\" + event.target.value)\n    }\n    ;\n\n    if (event.key === 'Enter' && event.target.value === \"German Empire\") {\n      event.preventDefault();\n      setName(\"http://127.0.0.1:8000/api/german_empire\")\n    }\n    ;\n\n    if (event.key === 'Enter' && event.target.value.slice(-4) === \"1914\") {\n      event.preventDefault();\n      setName(\"http://127.0.0.1:8000/api/world1914/\" + event.target.value.slice(0, -4))\n    }\n\n    //else {setName(\"\")}\n    //return <MyData name={name + \"/\"}/>\n  };\n\n\n\n  useEffect(() => {\n    console.log(\"value of 'name' changed to\", name.slice(0, 42));\n\n  }, [name]);\n\n\n\n  let NewData = (event) => {\n\n    if (event.key === \"Enter\" && event.target.value.slice(-4) != \"1914\" && event.target.value != \"German Empire\") {\n\n    }\n\n    return <MyData name={name + \"/\" + \"?format=json\"}/>\n  }\n\n  if (event.key === \"Enter\" && event.target.value === \"German Empire\") {\n\n\n\n  return <MyData name={name}/>\n}\n\n  if (event.key === \"Enter\" && event.target.value.slice(-4) === \"1914\") {\n    return <MyData name={name.slice(0, 42) + \"/\"}/>\n  };\n\n\n\n\n\n  return (\n  <div style={{\"display\" : \"grid\"}}>\n    <Canvas>\n\n    </Canvas>\n  <button>\n  Activate Lasers\n  </button>\n\n  <form>\n  <link rel=\"stylesheet\" href=\"style.css\"/>\n    <label  htmlFor=\"country\">Country:</label>\n  <input  id=\"country\" type={\"text\"} placeholder={\"type a country here\"} onKeyDown={updateName}/>\n  </form>\n\n\n\n    <MapContainer center={[51.505, -0.09]} zoom={2} scrollWheelZoom={true} onKeyDown={updateName} style={{\"border-style\" : \"dotted\", \"width\" : \"300px\", \"height\" : \"300px\"}}>\n  <TileLayer\n    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    ref={mapcontainerRef}\n  />\n\n      <NewData/>\n\n  </MapContainer>\n\n\n</div>\n\n  );\n}\n\nexport default App;\n\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,MAA1C,EAAkDC,KAAlD,QAA+D,eAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,OAAf,QAA6B,iBAA7B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAsC,8BAAtC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AACA,SAAQC,KAAR,QAAoB,wCAApB;AACA,SAAQC,OAAR,QAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAiBA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;EAAA;;EAC/B;EAKA,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,EAA9B,CAN+B,CAQ7B;;EAEAE,SAAS,CAAC,MAAM;IACd;IAEA,IAAI0B,OAAO,GAAG,YAAY;MACxB;MACA,IAAIC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAUN,KAAK,CAACO,IAAhB,CAArB,CAFwB,CAGxB;;MACAJ,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;IACD,CALD;;IAOAE,OAAO;EAGR,CAbQ,EAaN,CAACJ,KAAK,CAACO,IAAP,CAbM,CAAT,CAV6B,CA2B/B;;EACA,IAAIL,IAAJ,EAAU;IACR;IAED,oBAAO,QAAC,OAAD;MAAS,IAAI,EAAEA;IAAf;MAAA;MAAA;MAAA;IAAA,QAAP;EAGA,CAND,MAMO;IACL;IACA,OAAO,IAAP;EAGD;AAEF,CAzCD;;GAAMH,M;;KAAAA,M;;AA4CN,SAASS,GAAT,CAAaP,KAAb,EAAoB;EAAA;;EAElB,MAAMQ,cAAc,GAAGhC,MAAM,CAAC,IAAD,CAA7B;EACA,MAAMiC,GAAG,GAAGjC,MAAM,CAAC,IAAD,CAAlB;EACA,MAAMkC,eAAe,GAAGlC,MAAM,CAAC,IAAD,CAA9B;EACA,MAAMmC,SAAS,GAAGnC,MAAM,CAAC,IAAD,CAAxB;EAECC,SAAS,CAAC,MAAM;IACf,IAAI+B,cAAc,CAACI,OAAnB,EAA4B;MAC1B,MAAMC,OAAO,GAAGL,cAAc,CAACI,OAAf,CAAuBE,UAAvB,CAAkC,IAAlC,CAAhB;MACAD,OAAO,CAACE,SAAR;IACD;EAEF,CANS,EAMP,EANO,CAAT;EASD,IAAI,CAACT,IAAD,EAAOU,OAAP,IAAkBzC,QAAQ,CAAC,kCAAD,CAA9B;;EAGA,IAAI0C,UAAU,GAAIjB,KAAD,IAAW;IAE1B,IAAIA,KAAK,CAACkB,GAAN,KAAc,OAAd,IAAyBlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,CAAC,CAA1B,KAAgC,MAAzD,IAAmErB,KAAK,CAACmB,MAAN,CAAaC,KAAb,IAAsB,eAA7F,EAA8G;MAC5GpB,KAAK,CAACR,cAAN;MACAwB,OAAO,CAAC,qCAAqChB,KAAK,CAACmB,MAAN,CAAaC,KAAnD,CAAP;IACD;;IACD;;IAEA,IAAIpB,KAAK,CAACkB,GAAN,KAAc,OAAd,IAAyBlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,KAAuB,eAApD,EAAqE;MACnEpB,KAAK,CAACR,cAAN;MACAwB,OAAO,CAAC,yCAAD,CAAP;IACD;;IACD;;IAEA,IAAIhB,KAAK,CAACkB,GAAN,KAAc,OAAd,IAAyBlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,CAAC,CAA1B,MAAiC,MAA9D,EAAsE;MACpErB,KAAK,CAACR,cAAN;MACAwB,OAAO,CAAC,yCAAyChB,KAAK,CAACmB,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAAC,CAA7B,CAA1C,CAAP;IACD,CAjByB,CAmB1B;IACA;;EACD,CArBD;;EAyBA5C,SAAS,CAAC,MAAM;IACd6C,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CjB,IAAI,CAACe,KAAL,CAAW,CAAX,EAAc,EAAd,CAA1C;EAED,CAHQ,EAGN,CAACf,IAAD,CAHM,CAAT;;EAOA,IAAIkB,OAAO,GAAIxB,KAAD,IAAW;IAEvB,IAAIA,KAAK,CAACkB,GAAN,KAAc,OAAd,IAAyBlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,CAAC,CAA1B,KAAgC,MAAzD,IAAmErB,KAAK,CAACmB,MAAN,CAAaC,KAAb,IAAsB,eAA7F,EAA8G,CAE7G;;IAED,oBAAO,QAAC,MAAD;MAAQ,IAAI,EAAEd,IAAI,GAAG,GAAP,GAAa;IAA3B;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAPD;;EASA,IAAIN,KAAK,CAACkB,GAAN,KAAc,OAAd,IAAyBlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,KAAuB,eAApD,EAAqE;IAIrE,oBAAO,QAAC,MAAD;MAAQ,IAAI,EAAEd;IAAd;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAEC,IAAIN,KAAK,CAACkB,GAAN,KAAc,OAAd,IAAyBlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,CAAC,CAA1B,MAAiC,MAA9D,EAAsE;IACpE,oBAAO,QAAC,MAAD;MAAQ,IAAI,EAAEf,IAAI,CAACe,KAAL,CAAW,CAAX,EAAc,EAAd,IAAoB;IAAlC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAAA;EAMD,oBACA;IAAK,KAAK,EAAE;MAAC,WAAY;IAAb,CAAZ;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAIA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJA,eAQA;MAAA,wBACA;QAAM,GAAG,EAAC,YAAV;QAAuB,IAAI,EAAC;MAA5B;QAAA;QAAA;QAAA;MAAA,QADA,eAEE;QAAQ,OAAO,EAAC,SAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGA;QAAQ,EAAE,EAAC,SAAX;QAAqB,IAAI,EAAE,MAA3B;QAAmC,WAAW,EAAE,qBAAhD;QAAuE,SAAS,EAAEJ;MAAlF;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA;MAAA;MAAA;MAAA;IAAA,QARA,eAgBE,QAAC,YAAD;MAAc,MAAM,EAAE,CAAC,MAAD,EAAS,CAAC,IAAV,CAAtB;MAAuC,IAAI,EAAE,CAA7C;MAAgD,eAAe,EAAE,IAAjE;MAAuE,SAAS,EAAEA,UAAlF;MAA8F,KAAK,EAAE;QAAC,gBAAiB,QAAlB;QAA4B,SAAU,OAAtC;QAA+C,UAAW;MAA1D,CAArG;MAAA,wBACF,QAAC,SAAD;QACE,WAAW,EAAC,yFADd;QAEE,GAAG,EAAC,oDAFN;QAGE,GAAG,EAAEP;MAHP;QAAA;QAAA;QAAA;MAAA,QADE,eAOE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAgCD;;IA3GQH,G;;MAAAA,G;AA6GT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}