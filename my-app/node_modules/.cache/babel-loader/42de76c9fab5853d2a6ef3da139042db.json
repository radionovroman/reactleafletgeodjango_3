{"ast":null,"code":"import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  } else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n  /* Forward equations\n      -----------------*/\n\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["e0fn","e1fn","e2fn","e3fn","msfnz","mlfn","adjust_lon","adjust_lat","imlfn","EPSLN","init","Math","abs","lat1","lat2","temp","b","a","es","pow","e","sqrt","e0","e1","e2","e3","sinphi","sin","cosphi","cos","ms1","ml1","ns","ms2","ml2","g","ml0","lat0","rh","forward","p","lon","x","lat","y","rh1","sphere","ml","theta","long0","x0","y0","inverse","con","atan2","names"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/proj4/lib/projections/eqdc.js"],"sourcesContent":["import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}