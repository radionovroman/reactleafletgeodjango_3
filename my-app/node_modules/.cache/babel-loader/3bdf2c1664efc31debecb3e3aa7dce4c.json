{"ast":null,"code":"var _jsxFileName = \"/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DrawingArea = _ref => {\n  _s();\n\n  let {\n    onClearLines,\n    clearLines\n  } = _ref;\n  const [lines, setLines] = useState([]);\n  const isDrawing = useRef(false);\n  useEffect(() => {//loadImage();\n  }, [clearLines]);\n\n  const handleMouseDown = e => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, {\n      points: [pos.x, pos.y]\n    }]);\n  };\n\n  const handleMouseMove = e => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition(); // To draw line\n\n    let lastLine = lines[lines.length - 1];\n\n    if (lastLine) {\n      // add point\n      lastLine.points = lastLine.points.concat([point.x, point.y]); // replace last\n\n      lines.splice(lines.length - 1, 1, lastLine);\n      setLines(lines.concat());\n    }\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" text-center text-dark\",\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      width: 600,\n      height: 600,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      className: \"canvas-stage\",\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: \"#df4b26\",\n          strokeWidth: 2,\n          tension: 0.5,\n          lineCap: \"round\",\n          globalCompositeOperation: line.tool === 'eraser' ? 'destination-out' : 'source-over'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DrawingArea, \"ouPDGWXJZwviWowsYCMOFLcirac=\");\n\n_c = DrawingArea;\nexport default DrawingArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawingArea\");","map":{"version":3,"names":["React","Stage","Layer","Line","useEffect","useState","useRef","DrawingArea","onClearLines","clearLines","lines","setLines","isDrawing","handleMouseDown","e","current","pos","target","getStage","getPointerPosition","points","x","y","handleMouseMove","stage","point","lastLine","length","concat","splice","handleMouseUp","map","line","i","tool"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js"],"sourcesContent":["import { React } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport { useEffect, useState, useRef } from 'react';\n\nconst DrawingArea = ({onClearLines, clearLines}) => {\n\n    const [lines, setLines] = useState([]);\n    const isDrawing = useRef(false);\n\n    useEffect(() => {\n        //loadImage();\n    }, [clearLines])\n\n    const handleMouseDown = (e) => {\n        isDrawing.current = true;\n        const pos = e.target.getStage().getPointerPosition();\n        setLines([...lines, { points: [pos.x, pos.y] }]);\n    };\n\n    const handleMouseMove = (e) => {\n        // no drawing - skipping\n        if (!isDrawing.current) {\n          return;\n        }\n        const stage = e.target.getStage();\n        const point = stage.getPointerPosition();\n\n        // To draw line\n        let lastLine = lines[lines.length - 1];\n\n        if(lastLine) {\n            // add point\n            lastLine.points = lastLine.points.concat([point.x, point.y]);\n\n            // replace last\n            lines.splice(lines.length - 1, 1, lastLine);\n            setLines(lines.concat());\n        }\n\n    };\n\n    const handleMouseUp = () => {\n        isDrawing.current = false;\n    };\n\n    return (\n        <div className=\" text-center text-dark\">\n            <Stage\n                width={600}\n                height={600}\n                onMouseDown={handleMouseDown}\n                onMousemove={handleMouseMove}\n                onMouseup={handleMouseUp}\n                className=\"canvas-stage\"\n            >\n                <Layer>\n                    {lines.map((line, i) => (\n                        <Line\n                        key={i}\n                        points={line.points}\n                        stroke=\"#df4b26\"\n                        strokeWidth={2}\n                        tension={0.5}\n                        lineCap=\"round\"\n                        globalCompositeOperation={\n                            line.tool === 'eraser' ? 'destination-out' : 'source-over'\n                        }\n                        />\n                    ))}\n                </Layer>\n            </Stage>\n        </div>\n    )\n}\n\nexport default DrawingArea"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAmC,aAAnC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAG,QAAgC;EAAA;;EAAA,IAA/B;IAACC,YAAD;IAAeC;EAAf,CAA+B;EAEhD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMO,SAAS,GAAGN,MAAM,CAAC,KAAD,CAAxB;EAEAF,SAAS,CAAC,MAAM,CACZ;EACH,CAFQ,EAEN,CAACK,UAAD,CAFM,CAAT;;EAIA,MAAMI,eAAe,GAAIC,CAAD,IAAO;IAC3BF,SAAS,CAACG,OAAV,GAAoB,IAApB;IACA,MAAMC,GAAG,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,GAAoBC,kBAApB,EAAZ;IACAR,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;MAAEU,MAAM,EAAE,CAACJ,GAAG,CAACK,CAAL,EAAQL,GAAG,CAACM,CAAZ;IAAV,CAAX,CAAD,CAAR;EACH,CAJD;;EAMA,MAAMC,eAAe,GAAIT,CAAD,IAAO;IAC3B;IACA,IAAI,CAACF,SAAS,CAACG,OAAf,EAAwB;MACtB;IACD;;IACD,MAAMS,KAAK,GAAGV,CAAC,CAACG,MAAF,CAASC,QAAT,EAAd;IACA,MAAMO,KAAK,GAAGD,KAAK,CAACL,kBAAN,EAAd,CAN2B,CAQ3B;;IACA,IAAIO,QAAQ,GAAGhB,KAAK,CAACA,KAAK,CAACiB,MAAN,GAAe,CAAhB,CAApB;;IAEA,IAAGD,QAAH,EAAa;MACT;MACAA,QAAQ,CAACN,MAAT,GAAkBM,QAAQ,CAACN,MAAT,CAAgBQ,MAAhB,CAAuB,CAACH,KAAK,CAACJ,CAAP,EAAUI,KAAK,CAACH,CAAhB,CAAvB,CAAlB,CAFS,CAIT;;MACAZ,KAAK,CAACmB,MAAN,CAAanB,KAAK,CAACiB,MAAN,GAAe,CAA5B,EAA+B,CAA/B,EAAkCD,QAAlC;MACAf,QAAQ,CAACD,KAAK,CAACkB,MAAN,EAAD,CAAR;IACH;EAEJ,CApBD;;EAsBA,MAAME,aAAa,GAAG,MAAM;IACxBlB,SAAS,CAACG,OAAV,GAAoB,KAApB;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,wBAAf;IAAA,uBACI,QAAC,KAAD;MACI,KAAK,EAAE,GADX;MAEI,MAAM,EAAE,GAFZ;MAGI,WAAW,EAAEF,eAHjB;MAII,WAAW,EAAEU,eAJjB;MAKI,SAAS,EAAEO,aALf;MAMI,SAAS,EAAC,cANd;MAAA,uBAQI,QAAC,KAAD;QAAA,UACKpB,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACP,QAAC,IAAD;UAEA,MAAM,EAAED,IAAI,CAACZ,MAFb;UAGA,MAAM,EAAC,SAHP;UAIA,WAAW,EAAE,CAJb;UAKA,OAAO,EAAE,GALT;UAMA,OAAO,EAAC,OANR;UAOA,wBAAwB,EACpBY,IAAI,CAACE,IAAL,KAAc,QAAd,GAAyB,iBAAzB,GAA6C;QARjD,GACKD,CADL;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA;IARJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA4BH,CArED;;GAAM1B,W;;KAAAA,W;AAuEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}