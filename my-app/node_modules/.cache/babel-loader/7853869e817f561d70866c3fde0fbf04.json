{"ast":null,"code":"if (typeof L !== 'undefined') {\n  L.FullCanvas = L.Class.extend({\n    options: this.options || {},\n    initialize: function () {\n      this._myCanvas = document.createElement('canvas');\n      this._myCanvas.style.position = 'absolute';\n      this._myCanvas.style.top = 0;\n      this._myCanvas.style.left = 0;\n      this._myContext = this._myCanvas.getContext('2d');\n      this.options.filterPointsInBounds = true; // filter points before drawing\n    },\n    setData: function (data) {\n      var me = this;\n      var bounds = new L.LatLngBounds([-90, -180], [90, 180]);\n      this._myQuad = new QuadTree(this.boundsToQuery(bounds), false, 10, 10);\n      data.forEach(function (d) {\n        me._myQuad.insert({\n          x: d.slat,\n          //lon\n          y: d.slon,\n          //lat\n          data: d\n        });\n\n        if (d.ty && d.tx) {\n          me._myQuad.insert({\n            x: d.tlat,\n            //lon\n            y: d.tlon,\n            //lat\n            data: d\n          });\n        }\n      });\n    },\n    onAdd: function (map) {\n      this._myMap = map;\n\n      if (!map._panes.staticPane) {\n        map._panes.staticPane = map._createPane('leaflet-tile-pane', map._container);\n      }\n\n      this._staticPane = map._panes.staticPane;\n\n      this._staticPane.appendChild(this._myCanvas);\n\n      map.on('viewreset', this.canvasReset, this);\n      map.on('move', this.canvasReset, this);\n      map.on('resize', this.canvasReset, this);\n      map.on('click', this.handleClick, this);\n      this.canvasReset();\n    },\n    handleClick: function (e) {\n      var j = e.containerPoint;\n      var bounds = L.latLngBounds(map.containerPointToLatLng(j.add(L.point(3, 3))), map.containerPointToLatLng(j.subtract(L.point(3, 3))));\n\n      var points = this._myQuad.retrieveInBounds(this.boundsToQuery(bounds));\n\n      if (points.length > 0) this.clickedPoints(points, e);\n    },\n    clickedPoints: function (points, e) {},\n    addLayerTo: function (map) {\n      map.addLayer(this);\n      return this;\n    },\n    addTo: function (map) {\n      this.addLayerTo(map);\n      return this;\n    },\n    getCanvas: function () {\n      return this._myCanvas;\n    },\n    getOptions: function () {\n      return this.options;\n    },\n    canvasReset: function () {\n      var size = this._myMap.getSize();\n\n      this._myCanvas.width = size.x;\n      this._myCanvas.height = size.y;\n      this.drawCanvas();\n    },\n    onRemove: function (map) {\n      map._container.removeChild(this._staticPane);\n\n      map.off('viewreset', this.canvasReset, this);\n      map.off('move', this.canvasReset, this);\n      map.off('resize', this.canvasReset, this);\n    },\n    addData: function (d) {\n      this._myQuad.insert({\n        x: d.slat,\n        //lon\n        y: d.slon,\n        //lat\n        data: d\n      });\n\n      if (d.ty && d.tx) {\n        this._myQuad.insert({\n          x: d.tlat,\n          //lon\n          y: d.tlon,\n          //lat\n          data: d\n        });\n      }\n\n      this.drawCanvas();\n    },\n    drawCanvas: function () {\n      var canvas = this.getCanvas();\n      var ctx = canvas.getContext('2d');\n      var me = this; // clear canvas\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      var b = this._myMap.getBounds();\n\n      if (!this.options.filterPointsInBounds) b = new L.LatLngBounds([-90, -180], [90, 180]);\n\n      var points = this._myQuad.retrieveInBounds(this.boundsToQuery(b));\n\n      points.forEach(function (point) {\n        var d = point.data;\n        if (d.draw && !d.draw(d)) return; // allows dynamic filtering of curves\n\n        var spoint = me._myMap.latLngToContainerPoint(new L.LatLng(d.slat, d.slon));\n\n        me.drawSource(spoint);\n\n        if (d.tlat && d.tlon) {\n          var tpoint = me._myMap.latLngToContainerPoint(new L.LatLng(d.tlat, d.tlon));\n\n          me.drawTarget(tpoint);\n          me.drawCurve(spoint, tpoint, d.style ? d.style(d) : null);\n        }\n      });\n    },\n    redraw: function () {\n      this.drawCanvas();\n    },\n    boundsToQuery: function (bounds) {\n      return {\n        x: bounds.getSouthWest().lat,\n        y: bounds.getSouthWest().lng,\n        width: bounds.getNorthEast().lat - bounds.getSouthWest().lat,\n        height: bounds.getNorthEast().lng - bounds.getSouthWest().lng\n      };\n    },\n    drawSource: function (point) {\n      var ctx = this.getCanvas().getContext(\"2d\");\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, 2, 0, 2 * Math.PI, true);\n      ctx.fillStyle = \"rgba(255,0,0, 0.5)\";\n      ctx.fill();\n    },\n    drawTarget: function (point) {\n      var ctx = this.getCanvas().getContext(\"2d\");\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, 2, 0, 2 * Math.PI, true);\n      ctx.fillStyle = \"rgba(0,255,0, 0.5)\";\n      ctx.fill();\n    },\n    drawCurve: function (startPoint, endPoint, style) {\n      var context = this.getCanvas().getContext(\"2d\");\n      context.strokeStyle = style && style.strokeStyle ? style.strokeStyle : \"rgba(0,0,255, 1)\";\n      context.lineWidth = style && style.lineWidth ? style.lineWidth : 1;\n      var x = (startPoint.x + endPoint.x) / 2;\n      var y = (startPoint.y + endPoint.y) / 2;\n      var le = (endPoint.y - endPoint.y) / (startPoint.x - endPoint.x);\n      var angle = Math.atan(le);\n      var sx = Math.pow(startPoint.x - endPoint.x, 2);\n      var sy = Math.pow(endPoint.y - endPoint.y, 2);\n      var d = Math.sqrt(sx + sy) / 2;\n      var px = x - d * Math.sin(angle);\n      var py = y + d * Math.cos(angle);\n      context.moveTo(startPoint.x, startPoint.y);\n      context.quadraticCurveTo(px, py, endPoint.x, endPoint.y);\n      context.stroke();\n    }\n  });\n}\n/*\n The MIT License\n\n Copyright (c) 2011 Mike Chambers\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n\n/*\n From https://github.com/jsmarkus/ExamplesByMesh/tree/master/JavaScript/QuadTree, slightly modified\n */\n\n/**\n * A QuadTree implementation in JavaScript, a 2d spatial subdivision algorithm.\n * @module QuadTree\n **/\n\n\n(function (window) {\n  /****************** QuadTree ****************/\n\n  /**\n   * QuadTree data structure.\n   * @class QuadTree\n   * @constructor\n   * @param {Object} An object representing the bounds of the top level of the QuadTree. The object\n   * should contain the following properties : x, y, width, height\n   * @param {Boolean} pointQuad Whether the QuadTree will contain points (true), or items with bounds\n   * (width / height)(false). Default value is false.\n   * @param {Number} maxDepth The maximum number of levels that the quadtree will create. Default is 4.\n   * @param {Number} maxChildren The maximum number of children that a node can contain before it is split into sub-nodes.\n   **/\n  function QuadTree(bounds, pointQuad, maxDepth, maxChildren) {\n    var node;\n\n    if (pointQuad) {\n      node = new Node(bounds, 0, maxDepth, maxChildren);\n    } else {\n      node = new BoundsNode(bounds, 0, maxDepth, maxChildren);\n    }\n\n    this.root = node;\n  }\n  /**\n   * The root node of the QuadTree which covers the entire area being segmented.\n   * @property root\n   * @type Node\n   **/\n\n\n  QuadTree.prototype.root = null;\n  /**\n   * Inserts an item into the QuadTree.\n   * @method insert\n   * @param {Object|Array} item The item or Array of items to be inserted into the QuadTree. The item should expose x, y\n   * properties that represents its position in 2D space.\n   **/\n\n  QuadTree.prototype.insert = function (item) {\n    if (item instanceof Array) {\n      var len = item.length;\n\n      for (var i = 0; i < len; i++) {\n        this.root.insert(item[i]);\n      }\n    } else {\n      this.root.insert(item);\n    }\n  };\n  /**\n   * Clears all nodes and children from the QuadTree\n   * @method clear\n   **/\n\n\n  QuadTree.prototype.clear = function () {\n    this.root.clear();\n  };\n  /**\n   * Retrieves all items / points in the same node as the specified item / point. If the specified item\n   * overlaps the bounds of a node, then all children in both nodes will be returned.\n   * @method retrieve\n   * @param {Object} item An object representing a 2D coordinate point (with x, y properties), or a shape\n   * with dimensions (x, y, width, height) properties.\n   **/\n\n\n  QuadTree.prototype.retrieve = function (item) {\n    //get a copy of the array of items\n    var out = this.root.retrieve(item).slice(0); //return QuadTree._filterResults(out, {x:item.x, y:item.y, width:0, height:0});\n\n    return out;\n  };\n\n  QuadTree.prototype.retrieveInBounds = function (bounds) {\n    var treeResult = this.root.retrieveInBounds(bounds);\n    return QuadTree._filterResults(treeResult, bounds);\n  };\n\n  QuadTree._filterResults = function (treeResult, bounds) {\n    var filteredResult = [];\n\n    if (this.root instanceof BoundsNode) {\n      for (var i = 0; i < treeResult.length; i++) {\n        var node = treeResult[i];\n\n        if (QuadTree._isBoundOverlappingBound(node, bounds)) {\n          filteredResult.push(node);\n        }\n      }\n    } else {\n      treeResult.forEach(function (node) {\n        if (QuadTree._isPointInsideBounds(node, bounds)) {\n          filteredResult.push(node);\n        }\n      });\n    }\n\n    return filteredResult;\n  };\n\n  QuadTree._isPointInsideBounds = function (point, bounds) {\n    return point.x >= bounds.x && point.x <= bounds.x + bounds.width && point.y >= bounds.y && point.y <= bounds.y + bounds.height;\n  };\n\n  QuadTree._isBoundOverlappingBound = function (b1, b2) {\n    return !(b1.x > b2.x + b2.width || b2.x > b1.x + b1.width || b1.y > b2.y + b2.height || b2.y > b1.y + b1.height);\n  };\n  /************** Node ********************/\n\n\n  function Node(bounds, depth, maxDepth, maxChildren) {\n    this._bounds = bounds;\n    this.children = [];\n    this.nodes = [];\n\n    if (maxChildren) {\n      this._maxChildren = maxChildren;\n    }\n\n    if (maxDepth) {\n      this._maxDepth = maxDepth;\n    }\n\n    if (depth) {\n      this._depth = depth;\n    }\n  }\n\n  ; //subnodes\n\n  Node.prototype.nodes = null;\n  Node.prototype._classConstructor = Node; //children contained directly in the node\n\n  Node.prototype.children = null;\n  Node.prototype._bounds = null; //read only\n\n  Node.prototype._depth = 0;\n  Node.prototype._maxChildren = 4;\n  Node.prototype._maxDepth = 4;\n  Node.TOP_LEFT = 0;\n  Node.TOP_RIGHT = 1;\n  Node.BOTTOM_LEFT = 2;\n  Node.BOTTOM_RIGHT = 3;\n\n  Node.prototype.insert = function (item) {\n    if (this.nodes.length) {\n      var index = this._findIndex(item);\n\n      this.nodes[index].insert(item);\n      return;\n    }\n\n    this.children.push(item);\n    var len = this.children.length;\n\n    if (!(this._depth >= this._maxDepth) && len > this._maxChildren) {\n      this.subdivide();\n\n      for (var i = 0; i < len; i++) {\n        this.insert(this.children[i]);\n      }\n\n      this.children.length = 0;\n    }\n  };\n\n  Node.prototype.retrieve = function (item) {\n    if (this.nodes.length) {\n      var index = this._findIndex(item);\n\n      return this.nodes[index].retrieve(item);\n    }\n\n    return this.children;\n  };\n\n  Node.prototype.retrieveInBounds = function (bounds) {\n    var result = [];\n\n    if (this.collidesWith(bounds)) {\n      result = result.concat(this._stuckChildren);\n\n      if (this.children.length) {\n        result = result.concat(this.children);\n      } else {\n        if (this.nodes.length) {\n          for (var i = 0; i < this.nodes.length; i++) {\n            result = result.concat(this.nodes[i].retrieveInBounds(bounds));\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  Node.prototype.collidesWith = function (bounds) {\n    var b1 = this._bounds;\n    var b2 = bounds;\n    return !(b1.x > b2.x + b2.width || b2.x > b1.x + b1.width || b1.y > b2.y + b2.height || b2.y > b1.y + b1.height);\n  };\n\n  Node.prototype._findIndex = function (item) {\n    var b = this._bounds;\n    var left = item.x > b.x + b.width / 2 ? false : true;\n    var top = item.y > b.y + b.height / 2 ? false : true; //top left\n\n    var index = Node.TOP_LEFT;\n\n    if (left) {\n      //left side\n      if (!top) {\n        //bottom left\n        index = Node.BOTTOM_LEFT;\n      }\n    } else {\n      //right side\n      if (top) {\n        //top right\n        index = Node.TOP_RIGHT;\n      } else {\n        //bottom right\n        index = Node.BOTTOM_RIGHT;\n      }\n    }\n\n    return index;\n  };\n\n  Node.prototype.subdivide = function () {\n    var depth = this._depth + 1;\n    var bx = this._bounds.x;\n    var by = this._bounds.y; //floor the values\n\n    var b_w_h = this._bounds.width / 2 | 0;\n    var b_h_h = this._bounds.height / 2 | 0;\n    var bx_b_w_h = bx + b_w_h;\n    var by_b_h_h = by + b_h_h; //top left\n\n    this.nodes[Node.TOP_LEFT] = new this._classConstructor({\n      x: bx,\n      y: by,\n      width: b_w_h,\n      height: b_h_h\n    }, depth, this._maxDepth, this._maxChildren); //top right\n\n    this.nodes[Node.TOP_RIGHT] = new this._classConstructor({\n      x: bx_b_w_h,\n      y: by,\n      width: b_w_h,\n      height: b_h_h\n    }, depth, this._maxDepth, this._maxChildren); //bottom left\n\n    this.nodes[Node.BOTTOM_LEFT] = new this._classConstructor({\n      x: bx,\n      y: by_b_h_h,\n      width: b_w_h,\n      height: b_h_h\n    }, depth, this._maxDepth, this._maxChildren); //bottom right\n\n    this.nodes[Node.BOTTOM_RIGHT] = new this._classConstructor({\n      x: bx_b_w_h,\n      y: by_b_h_h,\n      width: b_w_h,\n      height: b_h_h\n    }, depth, this._maxDepth, this._maxChildren);\n  };\n\n  Node.prototype.clear = function () {\n    this.children.length = 0;\n    var len = this.nodes.length;\n\n    for (var i = 0; i < len; i++) {\n      this.nodes[i].clear();\n    }\n\n    this.nodes.length = 0;\n  };\n  /******************** BoundsQuadTree ****************/\n\n\n  function BoundsNode(bounds, depth, maxChildren, maxDepth) {\n    Node.call(this, bounds, depth, maxChildren, maxDepth);\n    this._stuckChildren = [];\n  }\n\n  BoundsNode.prototype = new Node();\n  BoundsNode.prototype._classConstructor = BoundsNode;\n  BoundsNode.prototype._stuckChildren = null; //we use this to collect and conctenate items being retrieved. This way\n  //we dont have to continuously create new Array instances.\n  //Note, when returned from QuadTree.retrieve, we then copy the array\n\n  BoundsNode.prototype._out = [];\n\n  BoundsNode.prototype.insert = function (item) {\n    if (this.nodes.length) {\n      var index = this._findIndex(item);\n\n      var node = this.nodes[index]; //todo: make _bounds bounds\n\n      if (item.x >= node._bounds.x && item.x + item.width <= node._bounds.x + node._bounds.width && item.y >= node._bounds.y && item.y + item.height <= node._bounds.y + node._bounds.height) {\n        this.nodes[index].insert(item);\n      } else {\n        this._stuckChildren.push(item);\n      }\n\n      return;\n    }\n\n    this.children.push(item);\n    var len = this.children.length;\n\n    if (this._depth < this._maxDepth && len > this._maxChildren) {\n      this.subdivide();\n\n      for (var i = 0; i < len; i++) {\n        this.insert(this.children[i]);\n      }\n\n      this.children.length = 0;\n    }\n  };\n\n  BoundsNode.prototype.getChildren = function () {\n    return this.children.concat(this._stuckChildren);\n  };\n\n  BoundsNode.prototype.retrieve = function (item) {\n    var out = this._out;\n    out.length = 0;\n\n    if (this.nodes.length) {\n      var index = this._findIndex(item);\n\n      out.push.apply(out, this.nodes[index].retrieve(item));\n    }\n\n    out.push.apply(out, this._stuckChildren);\n    out.push.apply(out, this.children);\n    return out;\n  };\n\n  BoundsNode.prototype.clear = function () {\n    this._stuckChildren.length = 0; //array\n\n    this.children.length = 0;\n    var len = this.nodes.length;\n\n    if (!len) {\n      return;\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.nodes[i].clear();\n    } //array\n\n\n    this.nodes.length = 0; //we could call the super clear function but for now, im just going to inline it\n    //call the hidden super.clear, and make sure its called with this = this instance\n    //Object.getPrototypeOf(BoundsNode.prototype).clear.call(this);\n  }; //BoundsNode.prototype.getChildCount\n\n\n  window.QuadTree = QuadTree;\n  /*\n   //http://ejohn.org/blog/objectgetprototypeof/\n   if ( typeof Object.getPrototypeOf !== \"function\" ) {\n   if ( typeof \"test\".__proto__ === \"object\" ) {\n   Object.getPrototypeOf = function(object){\n   return object.__proto__;\n   };\n   } else {\n   Object.getPrototypeOf = function(object){\n   // May break if the constructor has been tampered with\n   return object.constructor.prototype;\n   };\n   }\n   }\n   */\n})(this);","map":{"version":3,"names":["L","FullCanvas","Class","extend","options","initialize","_myCanvas","document","createElement","style","position","top","left","_myContext","getContext","filterPointsInBounds","setData","data","me","bounds","LatLngBounds","_myQuad","QuadTree","boundsToQuery","forEach","d","insert","x","slat","y","slon","ty","tx","tlat","tlon","onAdd","map","_myMap","_panes","staticPane","_createPane","_container","_staticPane","appendChild","on","canvasReset","handleClick","e","j","containerPoint","latLngBounds","containerPointToLatLng","add","point","subtract","points","retrieveInBounds","length","clickedPoints","addLayerTo","addLayer","addTo","getCanvas","getOptions","size","getSize","width","height","drawCanvas","onRemove","removeChild","off","addData","canvas","ctx","clearRect","b","getBounds","draw","spoint","latLngToContainerPoint","LatLng","drawSource","tpoint","drawTarget","drawCurve","redraw","getSouthWest","lat","lng","getNorthEast","beginPath","arc","Math","PI","fillStyle","fill","startPoint","endPoint","context","strokeStyle","lineWidth","le","angle","atan","sx","pow","sy","sqrt","px","sin","py","cos","moveTo","quadraticCurveTo","stroke","window","pointQuad","maxDepth","maxChildren","node","Node","BoundsNode","root","prototype","item","Array","len","i","clear","retrieve","out","slice","treeResult","_filterResults","filteredResult","_isBoundOverlappingBound","push","_isPointInsideBounds","b1","b2","depth","_bounds","children","nodes","_maxChildren","_maxDepth","_depth","_classConstructor","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","index","_findIndex","subdivide","result","collidesWith","concat","_stuckChildren","bx","by","b_w_h","b_h_h","bx_b_w_h","by_b_h_h","call","_out","getChildren","apply"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/leaflet-fullcanvas/src/fullcanvas.js"],"sourcesContent":["if (typeof(L) !== 'undefined') {\n    L.FullCanvas = L.Class.extend({\n        options: this.options || {},\n        initialize: function () {\n            this._myCanvas = document.createElement('canvas');\n            this._myCanvas.style.position = 'absolute';\n            this._myCanvas.style.top = 0;\n            this._myCanvas.style.left = 0;\n            this._myContext = this._myCanvas.getContext('2d');\n            this.options.filterPointsInBounds = true;   // filter points before drawing\n        },\n        setData: function(data){\n            var me = this;\n            var bounds = new L.LatLngBounds([-90, -180], [90,180]);\n            this._myQuad = new QuadTree(this.boundsToQuery(bounds), false, 10, 10);\n            data.forEach(function(d){\n                me._myQuad.insert({\n                    x: d.slat, //lon\n                    y: d.slon,  //lat\n                    data: d\n                });\n                if (d.ty && d.tx){\n                    me._myQuad.insert({\n                        x: d.tlat, //lon\n                        y: d.tlon,  //lat\n                        data: d\n                    });\n                }\n            });\n        },\n        onAdd: function (map) {\n            this._myMap = map;\n            if (!map._panes.staticPane) {\n                map._panes.staticPane = map._createPane('leaflet-tile-pane', map._container);\n            }\n            this._staticPane = map._panes.staticPane\n            this._staticPane.appendChild(this._myCanvas);\n            map.on('viewreset', this.canvasReset, this);\n            map.on('move', this.canvasReset, this);\n            map.on('resize', this.canvasReset, this);\n            map.on('click', this.handleClick, this);\n            this.canvasReset();\n        },\n        handleClick: function(e) {\n            var j = e.containerPoint\n            var bounds = L.latLngBounds(map.containerPointToLatLng(j.add(L.point(3,3))), map.containerPointToLatLng(j.subtract(L.point(3,3))))\n            var points = this._myQuad.retrieveInBounds(this.boundsToQuery(bounds));\n            if(points.length > 0)\n                this.clickedPoints(points, e);\n        },\n        clickedPoints: function(points, e){\n        },\n        addLayerTo: function (map) {\n            map.addLayer(this);\n            return this;\n        },\n        addTo: function(map){\n            this.addLayerTo(map);\n            return this;\n        },\n        getCanvas: function () {\n            return this._myCanvas;\n        },\n\n        getOptions: function () {\n            return this.options;\n        },\n        canvasReset: function(){\n            var size = this._myMap.getSize();\n            this._myCanvas.width = size.x;\n            this._myCanvas.height = size.y;\n            this.drawCanvas();\n        },\n        onRemove: function (map) {\n            map._container.removeChild(this._staticPane);\n            map.off('viewreset', this.canvasReset, this);\n            map.off('move', this.canvasReset, this);\n            map.off('resize', this.canvasReset, this);\n        },\n        addData: function(d) {\n            this._myQuad.insert({\n                x: d.slat, //lon\n                y: d.slon,  //lat\n                data: d\n            });\n            if (d.ty && d.tx){\n                this._myQuad.insert({\n                    x: d.tlat, //lon\n                    y: d.tlon,  //lat\n                    data: d\n                });\n            }\n            this.drawCanvas();\n        },\n        drawCanvas: function() {\n            var canvas = this.getCanvas();\n            var ctx = canvas.getContext('2d');\n            var me = this;\n            // clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            var b = this._myMap.getBounds();\n            if (!this.options.filterPointsInBounds) b = new L.LatLngBounds([-90, -180], [90,180]);\n            var points = this._myQuad.retrieveInBounds(this.boundsToQuery(b));\n            points.forEach(function(point){\n                var d = point.data;\n                if (d.draw && !d.draw(d)) return;    // allows dynamic filtering of curves\n                var spoint = me._myMap.latLngToContainerPoint(new L.LatLng(d.slat, d.slon));\n                me.drawSource(spoint);\n                if (d.tlat && d.tlon){\n                    var tpoint = me._myMap.latLngToContainerPoint(new L.LatLng(d.tlat, d.tlon));\n                    me.drawTarget(tpoint);\n                    me.drawCurve(spoint, tpoint, d.style ? d.style(d) : null);\n                }\n            });\n        },\n        redraw: function(){\n            this.drawCanvas();\n        },\n        boundsToQuery: function(bounds) {\n            return {\n                x: bounds.getSouthWest().lat,\n                y: bounds.getSouthWest().lng,\n                width: bounds.getNorthEast().lat-bounds.getSouthWest().lat,\n                height: bounds.getNorthEast().lng-bounds.getSouthWest().lng\n            };\n        },\n        drawSource: function(point) {\n            var ctx = this.getCanvas().getContext(\"2d\");\n            ctx.beginPath();\n            ctx.arc(point.x, point.y , 2, 0, 2 * Math.PI, true);\n            ctx.fillStyle = \"rgba(255,0,0, 0.5)\";\n            ctx.fill();\n        },\n        drawTarget: function(point) {\n            var ctx = this.getCanvas().getContext(\"2d\");\n            ctx.beginPath();\n            ctx.arc(point.x, point.y , 2, 0, 2 * Math.PI, true);\n            ctx.fillStyle = \"rgba(0,255,0, 0.5)\";\n            ctx.fill();\n        },\n        drawCurve: function(startPoint,endPoint, style) {\n            var context = this.getCanvas().getContext(\"2d\");\n            context.strokeStyle = (style && style.strokeStyle) ? style.strokeStyle : \"rgba(0,0,255, 1)\";\n            context.lineWidth = (style && style.lineWidth) ? style.lineWidth : 1;\n            var x = (startPoint.x+endPoint.x)/2;\n            var y = (startPoint.y+endPoint.y)/2;\n            var le = (endPoint.y - endPoint.y)/(startPoint.x-endPoint.x);\n            var angle = Math.atan(le);\n            var sx = Math.pow((startPoint.x-endPoint.x),2);\n            var sy = Math.pow((endPoint.y - endPoint.y),2);\n            var d = Math.sqrt(sx+sy)/2;\n\n            var px = x- d*Math.sin(angle);\n            var py = y+d*Math.cos(angle);\n            context.moveTo(startPoint.x, startPoint.y);\n            context.quadraticCurveTo(px,py,endPoint.x,endPoint.y);\n            context.stroke();\n        }\n    });\n\n}\n/*\n The MIT License\n\n Copyright (c) 2011 Mike Chambers\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n\n/*\n From https://github.com/jsmarkus/ExamplesByMesh/tree/master/JavaScript/QuadTree, slightly modified\n */\n\n\n/**\n * A QuadTree implementation in JavaScript, a 2d spatial subdivision algorithm.\n * @module QuadTree\n **/\n\n(function(window) {\n\n    /****************** QuadTree ****************/\n\n    /**\n     * QuadTree data structure.\n     * @class QuadTree\n     * @constructor\n     * @param {Object} An object representing the bounds of the top level of the QuadTree. The object\n     * should contain the following properties : x, y, width, height\n     * @param {Boolean} pointQuad Whether the QuadTree will contain points (true), or items with bounds\n     * (width / height)(false). Default value is false.\n     * @param {Number} maxDepth The maximum number of levels that the quadtree will create. Default is 4.\n     * @param {Number} maxChildren The maximum number of children that a node can contain before it is split into sub-nodes.\n     **/\n    function QuadTree(bounds, pointQuad, maxDepth, maxChildren)\n    {\n        var node;\n        if(pointQuad)\n        {\n\n            node = new Node(bounds, 0, maxDepth, maxChildren);\n        }\n        else\n        {\n            node = new BoundsNode(bounds, 0, maxDepth, maxChildren);\n        }\n\n        this.root = node;\n    }\n\n    /**\n     * The root node of the QuadTree which covers the entire area being segmented.\n     * @property root\n     * @type Node\n     **/\n    QuadTree.prototype.root = null;\n\n\n    /**\n     * Inserts an item into the QuadTree.\n     * @method insert\n     * @param {Object|Array} item The item or Array of items to be inserted into the QuadTree. The item should expose x, y\n     * properties that represents its position in 2D space.\n     **/\n    QuadTree.prototype.insert = function(item)\n    {\n        if(item instanceof Array)\n        {\n            var len = item.length;\n\n            for(var i = 0; i < len; i++)\n            {\n                this.root.insert(item[i]);\n            }\n        }\n        else\n        {\n            this.root.insert(item);\n        }\n    };\n\n    /**\n     * Clears all nodes and children from the QuadTree\n     * @method clear\n     **/\n    QuadTree.prototype.clear = function()\n    {\n        this.root.clear();\n    };\n\n    /**\n     * Retrieves all items / points in the same node as the specified item / point. If the specified item\n     * overlaps the bounds of a node, then all children in both nodes will be returned.\n     * @method retrieve\n     * @param {Object} item An object representing a 2D coordinate point (with x, y properties), or a shape\n     * with dimensions (x, y, width, height) properties.\n     **/\n    QuadTree.prototype.retrieve = function(item)\n    {\n        //get a copy of the array of items\n        var out = this.root.retrieve(item).slice(0);\n        //return QuadTree._filterResults(out, {x:item.x, y:item.y, width:0, height:0});\n        return out;\n    };\n\n    QuadTree.prototype.retrieveInBounds = function (bounds)\n    {\n        var treeResult = this.root.retrieveInBounds(bounds);\n        return QuadTree._filterResults(treeResult, bounds);\n    };\n\n    QuadTree._filterResults = function(treeResult, bounds)\n    {\n        var filteredResult = [];\n\n        if(this.root instanceof BoundsNode)\n        {\n            for (var i=0; i < treeResult.length; i++)\n            {\n                var node = treeResult[i];\n                if (QuadTree._isBoundOverlappingBound(node, bounds))\n                {\n                    filteredResult.push(node);\n                }\n            }\n        }\n        else\n        {\n            treeResult.forEach(function(node){\n                if(QuadTree._isPointInsideBounds(node, bounds))\n                {\n                    filteredResult.push(node);\n                }\n            });\n        }\n\n        return filteredResult;\n    };\n\n    QuadTree._isPointInsideBounds = function (point, bounds)\n    {\n        return (\n            (point.x >= bounds.x) &&\n                (point.x <= bounds.x + bounds.width) &&\n                (point.y >= bounds.y) &&\n                (point.y <= bounds.y + bounds.height)\n            );\n    };\n\n\n    QuadTree._isBoundOverlappingBound = function (b1, b2)\n    {\n        return !(\n            b1.x > (b2.x + b2.width)  ||\n                b2.x > (b1.x + b1.width)  ||\n                b1.y > (b2.y + b2.height) ||\n                b2.y > (b1.y + b1.height)\n            );\n    };\n\n    /************** Node ********************/\n\n\n    function Node(bounds, depth, maxDepth, maxChildren)\n    {\n        this._bounds = bounds;\n        this.children = [];\n        this.nodes = [];\n\n        if(maxChildren)\n        {\n            this._maxChildren = maxChildren;\n\n        }\n\n        if(maxDepth)\n        {\n            this._maxDepth = maxDepth;\n        }\n\n        if(depth)\n        {\n            this._depth = depth;\n        }\n    };\n\n//subnodes\n    Node.prototype.nodes = null;\n    Node.prototype._classConstructor = Node;\n\n//children contained directly in the node\n    Node.prototype.children = null;\n    Node.prototype._bounds = null;\n\n//read only\n    Node.prototype._depth = 0;\n\n    Node.prototype._maxChildren = 4;\n    Node.prototype._maxDepth = 4;\n\n    Node.TOP_LEFT = 0;\n    Node.TOP_RIGHT = 1;\n    Node.BOTTOM_LEFT = 2;\n    Node.BOTTOM_RIGHT = 3;\n\n\n    Node.prototype.insert = function(item)\n    {\n        if(this.nodes.length)\n        {\n            var index = this._findIndex(item);\n\n            this.nodes[index].insert(item);\n\n            return;\n        }\n\n        this.children.push(item);\n\n        var len = this.children.length;\n        if(!(this._depth >= this._maxDepth) &&\n            len > this._maxChildren)\n        {\n            this.subdivide();\n\n            for(var i = 0; i < len; i++)\n            {\n                this.insert(this.children[i]);\n            }\n\n            this.children.length = 0;\n        }\n    };\n\n    Node.prototype.retrieve = function(item)\n    {\n        if(this.nodes.length)\n        {\n            var index = this._findIndex(item);\n\n            return this.nodes[index].retrieve(item);\n        }\n\n        return this.children;\n    };\n\n    Node.prototype.retrieveInBounds = function(bounds)\n    {\n        var result = [];\n\n        if(this.collidesWith(bounds))\n        {\n            result = result.concat(this._stuckChildren);\n\n            if(this.children.length)\n            {\n                result = result.concat(this.children);\n            }\n            else\n            {\n                if(this.nodes.length)\n                {\n                    for (var i = 0; i < this.nodes.length; i++)\n                    {\n                        result = result.concat(this.nodes[i].retrieveInBounds(bounds));\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n\n    Node.prototype.collidesWith = function (bounds)\n    {\n        var b1 = this._bounds;\n        var b2 = bounds;\n\n        return !(\n            b1.x > (b2.x + b2.width)  ||\n                b2.x > (b1.x + b1.width)  ||\n                b1.y > (b2.y + b2.height) ||\n                b2.y > (b1.y + b1.height)\n            );\n    };\n\n    Node.prototype._findIndex = function(item)\n    {\n        var b = this._bounds;\n        var left = (item.x > b.x + b.width / 2)? false : true;\n        var top = (item.y > b.y + b.height / 2)? false : true;\n\n        //top left\n        var index = Node.TOP_LEFT;\n        if(left)\n        {\n            //left side\n            if(!top)\n            {\n                //bottom left\n                index = Node.BOTTOM_LEFT;\n            }\n        }\n        else\n        {\n            //right side\n            if(top)\n            {\n                //top right\n                index = Node.TOP_RIGHT;\n            }\n            else\n            {\n                //bottom right\n                index = Node.BOTTOM_RIGHT;\n            }\n        }\n\n        return index;\n    };\n\n\n    Node.prototype.subdivide = function()\n    {\n        var depth = this._depth + 1;\n\n        var bx = this._bounds.x;\n        var by = this._bounds.y;\n\n        //floor the values\n        var b_w_h = (this._bounds.width / 2)|0;\n        var b_h_h = (this._bounds.height / 2)|0;\n        var bx_b_w_h = bx + b_w_h;\n        var by_b_h_h = by + b_h_h;\n\n        //top left\n        this.nodes[Node.TOP_LEFT] = new this._classConstructor({\n                x:bx,\n                y:by,\n                width:b_w_h,\n                height:b_h_h\n            },\n            depth, this._maxDepth, this._maxChildren);\n\n        //top right\n        this.nodes[Node.TOP_RIGHT] = new this._classConstructor({\n                x:bx_b_w_h,\n                y:by,\n                width:b_w_h,\n                height:b_h_h\n            },\n            depth, this._maxDepth, this._maxChildren);\n\n        //bottom left\n        this.nodes[Node.BOTTOM_LEFT] = new this._classConstructor({\n                x:bx,\n                y:by_b_h_h,\n                width:b_w_h,\n                height:b_h_h\n            },\n            depth, this._maxDepth, this._maxChildren);\n\n\n        //bottom right\n        this.nodes[Node.BOTTOM_RIGHT] = new this._classConstructor({\n                x:bx_b_w_h,\n                y:by_b_h_h,\n                width:b_w_h,\n                height:b_h_h\n            },\n            depth, this._maxDepth, this._maxChildren);\n    };\n\n    Node.prototype.clear = function()\n    {\n        this.children.length = 0;\n\n        var len = this.nodes.length;\n        for(var i = 0; i < len; i++)\n        {\n            this.nodes[i].clear();\n        }\n\n        this.nodes.length = 0;\n    };\n\n\n    /******************** BoundsQuadTree ****************/\n\n    function BoundsNode(bounds, depth, maxChildren, maxDepth)\n    {\n        Node.call(this, bounds, depth, maxChildren, maxDepth);\n        this._stuckChildren = [];\n    }\n\n    BoundsNode.prototype = new Node();\n    BoundsNode.prototype._classConstructor = BoundsNode;\n    BoundsNode.prototype._stuckChildren = null;\n\n//we use this to collect and conctenate items being retrieved. This way\n//we dont have to continuously create new Array instances.\n//Note, when returned from QuadTree.retrieve, we then copy the array\n    BoundsNode.prototype._out = [];\n\n    BoundsNode.prototype.insert = function(item)\n    {\n        if(this.nodes.length)\n        {\n            var index = this._findIndex(item);\n            var node = this.nodes[index];\n\n            //todo: make _bounds bounds\n            if(item.x >= node._bounds.x &&\n                item.x + item.width <= node._bounds.x + node._bounds.width &&\n                item.y >= node._bounds.y &&\n                item.y + item.height <= node._bounds.y + node._bounds.height)\n            {\n                this.nodes[index].insert(item);\n            }\n            else\n            {\n                this._stuckChildren.push(item);\n            }\n\n            return;\n        }\n\n        this.children.push(item);\n\n        var len = this.children.length;\n\n        if(this._depth < this._maxDepth &&\n            len > this._maxChildren)\n        {\n            this.subdivide();\n\n            for(var i = 0; i < len; i++)\n            {\n                this.insert(this.children[i]);\n            }\n\n            this.children.length = 0;\n        }\n    };\n\n    BoundsNode.prototype.getChildren = function()\n    {\n        return this.children.concat(this._stuckChildren);\n    };\n\n    BoundsNode.prototype.retrieve = function(item)\n    {\n        var out = this._out;\n        out.length = 0;\n        if(this.nodes.length)\n        {\n            var index = this._findIndex(item);\n\n            out.push.apply(out, this.nodes[index].retrieve(item));\n        }\n\n        out.push.apply(out, this._stuckChildren);\n        out.push.apply(out, this.children);\n\n        return out;\n    };\n\n    BoundsNode.prototype.clear = function()\n    {\n\n        this._stuckChildren.length = 0;\n\n        //array\n        this.children.length = 0;\n\n        var len = this.nodes.length;\n\n        if(!len)\n        {\n            return;\n        }\n\n        for(var i = 0; i < len; i++)\n        {\n            this.nodes[i].clear();\n        }\n\n        //array\n        this.nodes.length = 0;\n\n        //we could call the super clear function but for now, im just going to inline it\n        //call the hidden super.clear, and make sure its called with this = this instance\n        //Object.getPrototypeOf(BoundsNode.prototype).clear.call(this);\n    };\n\n//BoundsNode.prototype.getChildCount\n\n    window.QuadTree = QuadTree;\n\n    /*\n     //http://ejohn.org/blog/objectgetprototypeof/\n     if ( typeof Object.getPrototypeOf !== \"function\" ) {\n     if ( typeof \"test\".__proto__ === \"object\" ) {\n     Object.getPrototypeOf = function(object){\n     return object.__proto__;\n     };\n     } else {\n     Object.getPrototypeOf = function(object){\n     // May break if the constructor has been tampered with\n     return object.constructor.prototype;\n     };\n     }\n     }\n     */\n\n}(this));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}