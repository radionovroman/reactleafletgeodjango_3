{"ast":null,"code":"var _jsxFileName = \"/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/Canvas.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from 'react';\nimport { useLeafletContext } from '@react-leaflet/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Canvas = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 300;\n    canvas.height = 300;\n    const context = canvas.getContext(\"2d\");\n    context.lineCap = \"round\";\n    context.strokeStyle = \"black\";\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }, []);\n\n  const startDrawing = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    setIsDrawing(true);\n    nativeEvent.preventDefault();\n  };\n\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n\n    if (!isDrawing) {\n      return;\n    }\n\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    nativeEvent.preventDefault();\n  };\n\n  const stopDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    className: \"canvas\",\n    style: {\n      \"border-style\": \"dotted\",\n      \"width\": \"300px\",\n      \"height\": \"300px\"\n    },\n    ref: canvasRef,\n    onMouseDown: startDrawing,\n    onMouseMove: draw,\n    onMouseUp: stopDrawing,\n    onMouseLeave: stopDrawing\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Canvas, \"gX+PwV6uGFVV0Nk+m7BEZwABNTU=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useRef","useEffect","useState","useLeafletContext","Canvas","canvasRef","contextRef","isDrawing","setIsDrawing","canvas","current","width","height","context","getContext","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","lineTo","stroke","preventDefault","draw","stopDrawing","closePath"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/Canvas.js"],"sourcesContent":["import {useRef, useEffect, useState} from 'react'\nimport { useLeafletContext } from '@react-leaflet/core'\n\n\n\nconst Canvas = () => {\n    const canvasRef = useRef(null );\n    const contextRef = useRef(null);\n\n    const [isDrawing, setIsDrawing] = useState(false)\n\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = 300;\n        canvas.height = 300;\n\n        const context = canvas.getContext(\"2d\");\n        context.lineCap = \"round\";\n        context.strokeStyle = \"black\";\n        context.lineWidth = 5;\n        contextRef.current = context;\n    }, []);\n\n    const startDrawing = ({nativeEvent}) => {\n        const{offsetX, offsetY} = nativeEvent;\n        contextRef.current.beginPath();\n        contextRef.current.moveTo(offsetX, offsetY);\n        contextRef.current.lineTo(offsetX, offsetY);\n        contextRef.current.stroke();\n        setIsDrawing(true);\n        nativeEvent.preventDefault();\n    };\n\n    const draw = ({nativeEvent}) => {\n        if(!isDrawing){\n            return;\n        }\n        const{offsetX, offsetY} = nativeEvent;\n        contextRef.current.lineTo(offsetX, offsetY);\n        contextRef.current.stroke();\n        nativeEvent.preventDefault();\n    };\n\n    const stopDrawing = () => {\n        contextRef.current.closePath();\n        setIsDrawing(false);\n\n\n    };\n\n    return(\n\n        <canvas className=\"canvas\" style={{\"border-style\" : \"dotted\", \"width\" : \"300px\", \"height\" : \"300px\"}}\n                ref={canvasRef}\n                onMouseDown={startDrawing}\n                onMouseMove={draw}\n                onMouseUp={stopDrawing}\n                onMouseLeave={stopDrawing}\n\n\n        >\n\n\n        </canvas>\n    )\n}\n\nexport default Canvas;"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;AAIA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;EACA,MAAMM,UAAU,GAAGN,MAAM,CAAC,IAAD,CAAzB;EAEA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EAGAD,SAAS,CAAC,MAAM;IACZ,MAAMQ,MAAM,GAAGJ,SAAS,CAACK,OAAzB;IACAD,MAAM,CAACE,KAAP,GAAe,GAAf;IACAF,MAAM,CAACG,MAAP,GAAgB,GAAhB;IAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,UAAP,CAAkB,IAAlB,CAAhB;IACAD,OAAO,CAACE,OAAR,GAAkB,OAAlB;IACAF,OAAO,CAACG,WAAR,GAAsB,OAAtB;IACAH,OAAO,CAACI,SAAR,GAAoB,CAApB;IACAX,UAAU,CAACI,OAAX,GAAqBG,OAArB;EACH,CAVQ,EAUN,EAVM,CAAT;;EAYA,MAAMK,YAAY,GAAG,QAAmB;IAAA,IAAlB;MAACC;IAAD,CAAkB;IACpC,MAAK;MAACC,OAAD;MAAUC;IAAV,IAAqBF,WAA1B;IACAb,UAAU,CAACI,OAAX,CAAmBY,SAAnB;IACAhB,UAAU,CAACI,OAAX,CAAmBa,MAAnB,CAA0BH,OAA1B,EAAmCC,OAAnC;IACAf,UAAU,CAACI,OAAX,CAAmBc,MAAnB,CAA0BJ,OAA1B,EAAmCC,OAAnC;IACAf,UAAU,CAACI,OAAX,CAAmBe,MAAnB;IACAjB,YAAY,CAAC,IAAD,CAAZ;IACAW,WAAW,CAACO,cAAZ;EACH,CARD;;EAUA,MAAMC,IAAI,GAAG,SAAmB;IAAA,IAAlB;MAACR;IAAD,CAAkB;;IAC5B,IAAG,CAACZ,SAAJ,EAAc;MACV;IACH;;IACD,MAAK;MAACa,OAAD;MAAUC;IAAV,IAAqBF,WAA1B;IACAb,UAAU,CAACI,OAAX,CAAmBc,MAAnB,CAA0BJ,OAA1B,EAAmCC,OAAnC;IACAf,UAAU,CAACI,OAAX,CAAmBe,MAAnB;IACAN,WAAW,CAACO,cAAZ;EACH,CARD;;EAUA,MAAME,WAAW,GAAG,MAAM;IACtBtB,UAAU,CAACI,OAAX,CAAmBmB,SAAnB;IACArB,YAAY,CAAC,KAAD,CAAZ;EAGH,CALD;;EAOA,oBAEI;IAAQ,SAAS,EAAC,QAAlB;IAA2B,KAAK,EAAE;MAAC,gBAAiB,QAAlB;MAA4B,SAAU,OAAtC;MAA+C,UAAW;IAA1D,CAAlC;IACQ,GAAG,EAAEH,SADb;IAEQ,WAAW,EAAEa,YAFrB;IAGQ,WAAW,EAAES,IAHrB;IAIQ,SAAS,EAAEC,WAJnB;IAKQ,YAAY,EAAEA;EALtB;IAAA;IAAA;IAAA;EAAA,QAFJ;AAeH,CA7DD;;GAAMxB,M;;KAAAA,M;AA+DN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}