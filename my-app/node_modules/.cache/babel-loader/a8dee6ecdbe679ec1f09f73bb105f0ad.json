{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLeafletContext } from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport { useState, useEffect } from \"react\";\nvar points = []; // Convert pixel coordinates to latitudes and longitudes\n\nconst latlngs = [];\nL.CustomLayer = L.Layer.extend({\n  // -- initialized is called on prototype\n  initialize: function (options) {\n    this._map = null;\n    this._canvas = null;\n    this._frame = null;\n    this._delegate = null;\n    L.setOptions(this, options);\n  },\n  delegate: function (del) {\n    this._delegate = del;\n    return this;\n  },\n  needRedraw: function () {\n    if (!this._frame) {\n      this._frame = L.Util.requestAnimFrame(this.drawLayer, this);\n    }\n\n    return this;\n  },\n  //-------------------------------------------------------------\n  _onLayerDidResize: function (resizeEvent) {\n    this._canvas.width = resizeEvent.newSize.x;\n    this._canvas.height = resizeEvent.newSize.y;\n  },\n  //-------------------------------------------------------------\n  _onLayerDidMove: function () {\n    if (!this._canvasAdded) {\n      return;\n    }\n\n    var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n\n    L.DomUtil.setPosition(this._canvas, topLeft);\n    this.drawLayer();\n  },\n  //-------------------------------------------------------------\n  getEvents: function () {\n    var events = {\n      resize: this._onLayerDidResize,\n      moveend: this._onLayerDidMove,\n      move: this._onLayerDidMove\n    };\n\n    if (this._map.options.zoomAnimation && L.Browser.any3d) {\n      events.zoomanim = this._animateZoom;\n    }\n\n    return events;\n  },\n  //-------------------------------------------------------------\n  onAdd: function (map) {\n    this._map = map;\n    this._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\n    this.tiles = {};\n\n    var size = this._map.getSize();\n\n    this._canvas.width = size.x;\n    this._canvas.height = size.y;\n    var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n    L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n    let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n    pane.appendChild(this._canvas); // Store the current pixel coordinates of the canvas\n\n    let canvasPos = null;\n    map.on('moveend', () => {\n      if (canvasPos) {\n        // Get the new pixel coordinates of the canvas\n        const newCanvasPos = L.DomUtil.getPosition(this._canvas); // Calculate the difference between the old and new pixel coordinates\n\n        const diff = L.point(newCanvasPos).subtract(canvasPos); // Update the 'points' array with the difference\n\n        points = points.map(point => [point[0] - diff.x, point[1] - diff.y]); // Redraw the canvas\n\n        this.drawLayer();\n      } // Update the current pixel coordinates of the canvas\n\n\n      canvasPos = L.DomUtil.getPosition(this._canvas);\n    });\n    this._canvasAdded = true;\n    var del = this._delegate || this;\n    del.onLayerDidMount && del.onLayerDidMount(); // -- callback\n\n    const ctx = this._canvas.getContext(\"2d\");\n\n    const rect = this._canvas.getBoundingClientRect();\n\n    let painting = false;\n\n    function startPosition() {\n      painting = true;\n    }\n\n    ;\n\n    function finishedPosition() {\n      painting = false;\n      ctx.beginPath();\n    }\n\n    ;\n\n    function draw(e) {\n      if (!painting) return;\n      ctx.lineWidth = 1;\n      ctx.lineCap = \"round\";\n      const latlng = map.containerPointToLatLng([e.clientX - rect.left, e.clientY - rect.top]);\n      ctx.lineTo(e.clientX - rect.left, e.clientY - rect.top);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top);\n      map.scrollWheelZoom.disable();\n      map.dragging.disable();\n      map.touchZoom.disable();\n      map.doubleClickZoom.disable();\n      map.boxZoom.disable();\n      map.keyboard.disable();\n      points.push([latlng.lng, latlng.lat]);\n    }\n\n    ;\n\n    this._canvas.addEventListener('mousedown', startPosition);\n\n    this._canvas.addEventListener('mouseup', finishedPosition);\n\n    this._canvas.addEventListener('mousemove', draw);\n\n    this._canvas.style.position = \"absolute\";\n    this._canvas.style.cursor = \"crosshair\";\n\n    this._canvas.addEventListener('mouseup', function (e) {\n      latlngs = points.map(point => {\n        return map.containerPointToLatLng([point[0], point[1]]);\n      }); // Create a GeoJSON layer and add it to the map\n\n      const geojson = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [{\n          \"type\": \"Feature\",\n          \"geometry\": {\n            \"type\": \"LineString\",\n            \"coordinates\": points\n          }\n        }]\n      };\n      L.geoJSON(geojson).addTo(this._map); // Clear the points array\n\n      points = [];\n    });\n\n    this.needRedraw();\n  },\n  //-------------------------------------------------------------\n  onRemove: function (map) {\n    var del = this._delegate || this;\n    del.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\n\n    let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n    pane.removeChild(this._canvas);\n    map.off(this.getEvents(), this);\n    this._canvas = null; // Clear the points array\n\n    points = [];\n    map.scrollWheelZoom.enable();\n    map.dragging.enable();\n    map.touchZoom.enable();\n    map.doubleClickZoom.enable();\n    map.boxZoom.enable();\n    map.keyboard.enable();\n  },\n  //------------------------------------------------------------\n  addTo: function (map) {\n    map.addLayer(this);\n    return this;\n  },\n  // --------------------------------------------------------------------------------\n  LatLonToMercator: function (latlon) {\n    return {\n      x: latlon.lng * 6378137 * Math.PI / 180,\n      y: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\n    };\n  },\n  //------------------------------------------------------------------------------\n  drawLayer: function () {\n    // -- todo make the viewInfo properties  flat objects.\n    var size = this._map.getSize();\n\n    var bounds = this._map.getBounds();\n\n    var zoom = this._map.getZoom();\n\n    var center = this.LatLonToMercator(this._map.getCenter());\n    var corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\n    var del = this._delegate || this;\n    del.onDrawLayer && del.onDrawLayer({\n      layer: this,\n      canvas: this._canvas,\n      bounds: bounds,\n      size: size,\n      zoom: zoom,\n      center: center,\n      corner: corner\n    });\n    this._frame = null;\n  },\n  //x------------------------------------------------------------------------------\n  _animateZoom: function (e) {\n    var scale = this._map.getZoomScale(e.zoom);\n\n    var offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center);\n\n    L.DomUtil.setTransform(this._canvas, offset, scale);\n  }\n});\n\nconst Map_paint = () => {\n  _s();\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const ctx = useLeafletContext();\n  useEffect(() => {\n    const canvas_container = ctx.overlayContainer || ctx.map;\n    const new_grid_layer = new L.CustomLayer();\n    canvas_container.addLayer(new_grid_layer);\n    console.log(new_grid_layer._canvas.ctx);\n    console.log(\"points are:\", points);\n    return () => {\n      canvas_container.removeLayer(new_grid_layer);\n    };\n  });\n};\n\n_s(Map_paint, \"DX7qMZmz1qqJ5KMtLnld7LKU3ms=\", false, function () {\n  return [useLeafletContext];\n});\n\n_c = Map_paint;\nexport { points };\nexport default Map_paint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map_paint\");","map":{"version":3,"names":["useLeafletContext","L","useState","useEffect","points","latlngs","CustomLayer","Layer","extend","initialize","options","_map","_canvas","_frame","_delegate","setOptions","delegate","del","needRedraw","Util","requestAnimFrame","drawLayer","_onLayerDidResize","resizeEvent","width","newSize","x","height","y","_onLayerDidMove","_canvasAdded","topLeft","containerPointToLayerPoint","DomUtil","setPosition","getEvents","events","resize","moveend","move","zoomAnimation","Browser","any3d","zoomanim","_animateZoom","onAdd","map","create","tiles","size","getSize","animated","addClass","pane","getPanes","_panes","overlayPane","appendChild","canvasPos","on","newCanvasPos","getPosition","diff","point","subtract","onLayerDidMount","ctx","getContext","rect","getBoundingClientRect","painting","startPosition","finishedPosition","beginPath","draw","e","lineWidth","lineCap","latlng","containerPointToLatLng","clientX","left","clientY","top","lineTo","stroke","moveTo","scrollWheelZoom","disable","dragging","touchZoom","doubleClickZoom","boxZoom","keyboard","push","lng","lat","addEventListener","style","position","cursor","geojson","geoJSON","addTo","onRemove","onLayerWillUnmount","removeChild","off","enable","addLayer","LatLonToMercator","latlon","Math","PI","log","tan","bounds","getBounds","zoom","getZoom","center","getCenter","corner","onDrawLayer","layer","canvas","scale","getZoomScale","offset","_latLngToNewLayerPoint","getNorthWest","setTransform","Map_paint","isDrawing","setIsDrawing","canvas_container","overlayContainer","new_grid_layer","console","removeLayer"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js"],"sourcesContent":["import {useLeafletContext} from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport {useState, useEffect} from \"react\";\n\n\n\n\n\n\n\n\n\n\nvar points = [];\n // Convert pixel coordinates to latitudes and longitudes\nconst latlngs = []\n\n\nL.CustomLayer = L.Layer.extend({\n\n\n\n    // -- initialized is called on prototype\n    initialize: function (options) {\n        this._map = null;\n        this._canvas = null;\n        this._frame = null;\n        this._delegate = null;\n        L.setOptions(this, options);\n    },\n\n    delegate: function (del) {\n        this._delegate = del;\n        return this;\n    },\n\n    needRedraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this.drawLayer, this);\n        }\n        return this;\n    },\n\n    //-------------------------------------------------------------\n    _onLayerDidResize: function (resizeEvent) {\n        this._canvas.width = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n\n    //-------------------------------------------------------------\n    _onLayerDidMove: function () {\n    if (!this._canvasAdded) {\n        return;\n    }\n\n    var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n    L.DomUtil.setPosition(this._canvas, topLeft);\n    this.drawLayer();\n},\n\n    //-------------------------------------------------------------\n    getEvents: function () {\n        var events = {\n            resize: this._onLayerDidResize,\n            moveend: this._onLayerDidMove,\n            move: this._onLayerDidMove\n        };\n        if (this._map.options.zoomAnimation && L.Browser.any3d) {\n            events.zoomanim = this._animateZoom;\n        }\n\n        return events;\n    },\n    //-------------------------------------------------------------\n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\n        this.tiles = {};\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n        let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n        pane.appendChild(this._canvas);\n\n        // Store the current pixel coordinates of the canvas\n        let canvasPos = null;\n\n        map.on('moveend', () => {\n  if (canvasPos) {\n    // Get the new pixel coordinates of the canvas\n    const newCanvasPos = L.DomUtil.getPosition(this._canvas);\n\n    // Calculate the difference between the old and new pixel coordinates\n    const diff = L.point(newCanvasPos).subtract(canvasPos);\n\n    // Update the 'points' array with the difference\n    points = points.map(point => [point[0] - diff.x, point[1] - diff.y]);\n\n    // Redraw the canvas\n    this.drawLayer();\n  }\n\n  // Update the current pixel coordinates of the canvas\n  canvasPos = L.DomUtil.getPosition(this._canvas);\n});\n\n\n\n\n\n\n\n        this._canvasAdded = true;\n\n        var del = this._delegate || this;\n        del.onLayerDidMount && del.onLayerDidMount(); // -- callback\n\n\n\n        const ctx = this._canvas.getContext(\"2d\");\n        const rect = this._canvas.getBoundingClientRect()\n\n\n\n\n\n\n        let painting = false;\n\n        function startPosition() {\n            painting = true\n\n\n        };\n\n        function finishedPosition () {\n            painting = false;\n            ctx.beginPath();\n\n        };\n\n\n        function draw (e) {\n            if(!painting) return;\n            ctx.lineWidth = 1;\n            ctx.lineCap = \"round\";\n            const latlng = map.containerPointToLatLng([e.clientX - rect.left, e.clientY - rect.top]);\n            ctx.lineTo(e.clientX - rect.left, e.clientY - rect.top);\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top);\n            map.scrollWheelZoom.disable()\n            map.dragging.disable()\n            map.touchZoom.disable()\n            map.doubleClickZoom.disable()\n            map.boxZoom.disable()\n            map.keyboard.disable()\n            points.push([latlng.lng, latlng.lat]);\n\n        };\n\n        this._canvas.addEventListener('mousedown', startPosition);\n        this._canvas.addEventListener('mouseup', finishedPosition);\n        this._canvas.addEventListener('mousemove', draw);\n        this._canvas.style.position = \"absolute\";\n        this._canvas.style.cursor = \"crosshair\"\n        this._canvas.addEventListener('mouseup', function(e) {\n\n       latlngs = points.map(point => {\nreturn map.containerPointToLatLng([point[0], point[1]]);\n});\n\n\n\n            // Create a GeoJSON layer and add it to the map\n    const geojson = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [{\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"LineString\",\n                \"coordinates\": points\n\n            }\n        }]\n    };\n    L.geoJSON(geojson).addTo(this._map);\n\n    // Clear the points array\n    points = [];\n});\n\n\n\n\n\n\n\n\n\n\n        this.needRedraw();\n\n\n    },\n\n    //-------------------------------------------------------------\n    onRemove: function (map) {\n        var del = this._delegate || this;\n        del.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\n\n\n\n        let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n        pane.removeChild(this._canvas);\n\n        map.off(this.getEvents(), this);\n\n        this._canvas = null;\n\n\n        // Clear the points array\n        points = [];\n\n        map.scrollWheelZoom.enable();\n        map.dragging.enable();\n        map.touchZoom.enable();\n        map.doubleClickZoom.enable();\n        map.boxZoom.enable();\n        map.keyboard.enable();\n\n\n\n    },\n\n    //------------------------------------------------------------\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    // --------------------------------------------------------------------------------\n    LatLonToMercator: function (latlon) {\n        return {\n            x: latlon.lng * 6378137 * Math.PI / 180,\n            y: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\n        };\n    },\n\n    //------------------------------------------------------------------------------\n    drawLayer: function () {\n        // -- todo make the viewInfo properties  flat objects.\n        var size = this._map.getSize();\n        var bounds = this._map.getBounds();\n        var zoom = this._map.getZoom();\n\n        var center = this.LatLonToMercator(this._map.getCenter());\n        var corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\n\n        var del = this._delegate || this;\n        del.onDrawLayer && del.onDrawLayer({\n            layer: this,\n            canvas: this._canvas,\n            bounds: bounds,\n            size: size,\n            zoom: zoom,\n            center: center,\n            corner: corner\n        });\n        this._frame = null;\n    },\n\n\n\n    //x------------------------------------------------------------------------------\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom);\n        var offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center);\n\n        L.DomUtil.setTransform(this._canvas, offset, scale);\n    },\n\n\n\n\n\n});\n\n\n\n\n\n\n\n\nconst Map_paint = () => {\n    const [isDrawing, setIsDrawing] = useState(false)\n\n\n    const ctx = useLeafletContext()\n\n\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n\n    const canvas_container = ctx.overlayContainer || ctx.map\n    const new_grid_layer = new L.CustomLayer\n\n\n\n\n\n\n        canvas_container.addLayer(new_grid_layer)\n\n\n\n        console.log(new_grid_layer._canvas.ctx)\n        console.log(\"points are:\", points)\n\n\n        return () => {\n            canvas_container.removeLayer(new_grid_layer)\n\n\n\n        }\n\n\n        })\n\n\n\n\n\n\n}\n\nexport {points}\nexport default Map_paint"],"mappings":";;AAAA,SAAQA,iBAAR,QAAgC,qBAAhC;AACA,OAAO,KAAKC,CAAZ,MAAmB,SAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAWA,IAAIC,MAAM,GAAG,EAAb,C,CACC;;AACD,MAAMC,OAAO,GAAG,EAAhB;AAGAJ,CAAC,CAACK,WAAF,GAAgBL,CAAC,CAACM,KAAF,CAAQC,MAAR,CAAe;EAI3B;EACAC,UAAU,EAAE,UAAUC,OAAV,EAAmB;IAC3B,KAAKC,IAAL,GAAY,IAAZ;IACA,KAAKC,OAAL,GAAe,IAAf;IACA,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKC,SAAL,GAAiB,IAAjB;IACAb,CAAC,CAACc,UAAF,CAAa,IAAb,EAAmBL,OAAnB;EACH,CAX0B;EAa3BM,QAAQ,EAAE,UAAUC,GAAV,EAAe;IACrB,KAAKH,SAAL,GAAiBG,GAAjB;IACA,OAAO,IAAP;EACH,CAhB0B;EAkB3BC,UAAU,EAAE,YAAY;IACpB,IAAI,CAAC,KAAKL,MAAV,EAAkB;MACd,KAAKA,MAAL,GAAcZ,CAAC,CAACkB,IAAF,CAAOC,gBAAP,CAAwB,KAAKC,SAA7B,EAAwC,IAAxC,CAAd;IACH;;IACD,OAAO,IAAP;EACH,CAvB0B;EAyB3B;EACAC,iBAAiB,EAAE,UAAUC,WAAV,EAAuB;IACtC,KAAKX,OAAL,CAAaY,KAAb,GAAqBD,WAAW,CAACE,OAAZ,CAAoBC,CAAzC;IACA,KAAKd,OAAL,CAAae,MAAb,GAAsBJ,WAAW,CAACE,OAAZ,CAAoBG,CAA1C;EACH,CA7B0B;EA+B3B;EACAC,eAAe,EAAE,YAAY;IAC7B,IAAI,CAAC,KAAKC,YAAV,EAAwB;MACpB;IACH;;IAED,IAAIC,OAAO,GAAG,KAAKpB,IAAL,CAAUqB,0BAAV,CAAqC,CAAC,CAAD,EAAI,CAAJ,CAArC,CAAd;;IACA/B,CAAC,CAACgC,OAAF,CAAUC,WAAV,CAAsB,KAAKtB,OAA3B,EAAoCmB,OAApC;IACA,KAAKV,SAAL;EACH,CAxC8B;EA0C3B;EACAc,SAAS,EAAE,YAAY;IACnB,IAAIC,MAAM,GAAG;MACTC,MAAM,EAAE,KAAKf,iBADJ;MAETgB,OAAO,EAAE,KAAKT,eAFL;MAGTU,IAAI,EAAE,KAAKV;IAHF,CAAb;;IAKA,IAAI,KAAKlB,IAAL,CAAUD,OAAV,CAAkB8B,aAAlB,IAAmCvC,CAAC,CAACwC,OAAF,CAAUC,KAAjD,EAAwD;MACpDN,MAAM,CAACO,QAAP,GAAkB,KAAKC,YAAvB;IACH;;IAED,OAAOR,MAAP;EACH,CAtD0B;EAuD3B;EACAS,KAAK,EAAE,UAAUC,GAAV,EAAe;IAClB,KAAKnC,IAAL,GAAYmC,GAAZ;IACA,KAAKlC,OAAL,GAAeX,CAAC,CAACgC,OAAF,CAAUc,MAAV,CAAiB,QAAjB,EAA2B,eAA3B,CAAf;IACA,KAAKC,KAAL,GAAa,EAAb;;IAEA,IAAIC,IAAI,GAAG,KAAKtC,IAAL,CAAUuC,OAAV,EAAX;;IACA,KAAKtC,OAAL,CAAaY,KAAb,GAAqByB,IAAI,CAACvB,CAA1B;IACA,KAAKd,OAAL,CAAae,MAAb,GAAsBsB,IAAI,CAACrB,CAA3B;IAEA,IAAIuB,QAAQ,GAAG,KAAKxC,IAAL,CAAUD,OAAV,CAAkB8B,aAAlB,IAAmCvC,CAAC,CAACwC,OAAF,CAAUC,KAA5D;IACAzC,CAAC,CAACgC,OAAF,CAAUmB,QAAV,CAAmB,KAAKxC,OAAxB,EAAiC,mBAAmBuC,QAAQ,GAAG,UAAH,GAAgB,MAA3C,CAAjC;IAEA,IAAIE,IAAI,GAAG,KAAK3C,OAAL,CAAa2C,IAAb,GAAoBP,GAAG,CAACQ,QAAJ,GAAe,KAAK5C,OAAL,CAAa2C,IAA5B,CAApB,GAAwDP,GAAG,CAACS,MAAJ,CAAWC,WAA9E;IACAH,IAAI,CAACI,WAAL,CAAiB,KAAK7C,OAAtB,EAbkB,CAelB;;IACA,IAAI8C,SAAS,GAAG,IAAhB;IAEAZ,GAAG,CAACa,EAAJ,CAAO,SAAP,EAAkB,MAAM;MAC9B,IAAID,SAAJ,EAAe;QACb;QACA,MAAME,YAAY,GAAG3D,CAAC,CAACgC,OAAF,CAAU4B,WAAV,CAAsB,KAAKjD,OAA3B,CAArB,CAFa,CAIb;;QACA,MAAMkD,IAAI,GAAG7D,CAAC,CAAC8D,KAAF,CAAQH,YAAR,EAAsBI,QAAtB,CAA+BN,SAA/B,CAAb,CALa,CAOb;;QACAtD,MAAM,GAAGA,MAAM,CAAC0C,GAAP,CAAWiB,KAAK,IAAI,CAACA,KAAK,CAAC,CAAD,CAAL,GAAWD,IAAI,CAACpC,CAAjB,EAAoBqC,KAAK,CAAC,CAAD,CAAL,GAAWD,IAAI,CAAClC,CAApC,CAApB,CAAT,CARa,CAUb;;QACA,KAAKP,SAAL;MACD,CAb6B,CAe9B;;;MACAqC,SAAS,GAAGzD,CAAC,CAACgC,OAAF,CAAU4B,WAAV,CAAsB,KAAKjD,OAA3B,CAAZ;IACD,CAjBO;IAyBA,KAAKkB,YAAL,GAAoB,IAApB;IAEA,IAAIb,GAAG,GAAG,KAAKH,SAAL,IAAkB,IAA5B;IACAG,GAAG,CAACgD,eAAJ,IAAuBhD,GAAG,CAACgD,eAAJ,EAAvB,CA9CkB,CA8C4B;;IAI9C,MAAMC,GAAG,GAAG,KAAKtD,OAAL,CAAauD,UAAb,CAAwB,IAAxB,CAAZ;;IACA,MAAMC,IAAI,GAAG,KAAKxD,OAAL,CAAayD,qBAAb,EAAb;;IAOA,IAAIC,QAAQ,GAAG,KAAf;;IAEA,SAASC,aAAT,GAAyB;MACrBD,QAAQ,GAAG,IAAX;IAGH;;IAAA;;IAED,SAASE,gBAAT,GAA6B;MACzBF,QAAQ,GAAG,KAAX;MACAJ,GAAG,CAACO,SAAJ;IAEH;;IAAA;;IAGD,SAASC,IAAT,CAAeC,CAAf,EAAkB;MACd,IAAG,CAACL,QAAJ,EAAc;MACdJ,GAAG,CAACU,SAAJ,GAAgB,CAAhB;MACAV,GAAG,CAACW,OAAJ,GAAc,OAAd;MACA,MAAMC,MAAM,GAAGhC,GAAG,CAACiC,sBAAJ,CAA2B,CAACJ,CAAC,CAACK,OAAF,GAAYZ,IAAI,CAACa,IAAlB,EAAwBN,CAAC,CAACO,OAAF,GAAYd,IAAI,CAACe,GAAzC,CAA3B,CAAf;MACAjB,GAAG,CAACkB,MAAJ,CAAWT,CAAC,CAACK,OAAF,GAAYZ,IAAI,CAACa,IAA5B,EAAkCN,CAAC,CAACO,OAAF,GAAYd,IAAI,CAACe,GAAnD;MACAjB,GAAG,CAACmB,MAAJ;MACAnB,GAAG,CAACO,SAAJ;MACAP,GAAG,CAACoB,MAAJ,CAAWX,CAAC,CAACK,OAAF,GAAYZ,IAAI,CAACa,IAA5B,EAAkCN,CAAC,CAACO,OAAF,GAAYd,IAAI,CAACe,GAAnD;MACArC,GAAG,CAACyC,eAAJ,CAAoBC,OAApB;MACA1C,GAAG,CAAC2C,QAAJ,CAAaD,OAAb;MACA1C,GAAG,CAAC4C,SAAJ,CAAcF,OAAd;MACA1C,GAAG,CAAC6C,eAAJ,CAAoBH,OAApB;MACA1C,GAAG,CAAC8C,OAAJ,CAAYJ,OAAZ;MACA1C,GAAG,CAAC+C,QAAJ,CAAaL,OAAb;MACApF,MAAM,CAAC0F,IAAP,CAAY,CAAChB,MAAM,CAACiB,GAAR,EAAajB,MAAM,CAACkB,GAApB,CAAZ;IAEH;;IAAA;;IAED,KAAKpF,OAAL,CAAaqF,gBAAb,CAA8B,WAA9B,EAA2C1B,aAA3C;;IACA,KAAK3D,OAAL,CAAaqF,gBAAb,CAA8B,SAA9B,EAAyCzB,gBAAzC;;IACA,KAAK5D,OAAL,CAAaqF,gBAAb,CAA8B,WAA9B,EAA2CvB,IAA3C;;IACA,KAAK9D,OAAL,CAAasF,KAAb,CAAmBC,QAAnB,GAA8B,UAA9B;IACA,KAAKvF,OAAL,CAAasF,KAAb,CAAmBE,MAAnB,GAA4B,WAA5B;;IACA,KAAKxF,OAAL,CAAaqF,gBAAb,CAA8B,SAA9B,EAAyC,UAAStB,CAAT,EAAY;MAEtDtE,OAAO,GAAGD,MAAM,CAAC0C,GAAP,CAAWiB,KAAK,IAAI;QACrC,OAAOjB,GAAG,CAACiC,sBAAJ,CAA2B,CAAChB,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAA3B,CAAP;MACC,CAFgB,CAAV,CAFsD,CAQjD;;MACR,MAAMsC,OAAO,GAAG;QACZ,QAAQ,mBADI;QAEZ,YAAY,CAAC;UACT,QAAQ,SADC;UAET,YAAY;YACR,QAAQ,YADA;YAER,eAAejG;UAFP;QAFH,CAAD;MAFA,CAAhB;MAWAH,CAAC,CAACqG,OAAF,CAAUD,OAAV,EAAmBE,KAAnB,CAAyB,KAAK5F,IAA9B,EApByD,CAsBzD;;MACAP,MAAM,GAAG,EAAT;IACH,CAxBO;;IAmCA,KAAKc,UAAL;EAGH,CA/L0B;EAiM3B;EACAsF,QAAQ,EAAE,UAAU1D,GAAV,EAAe;IACrB,IAAI7B,GAAG,GAAG,KAAKH,SAAL,IAAkB,IAA5B;IACAG,GAAG,CAACwF,kBAAJ,IAA0BxF,GAAG,CAACwF,kBAAJ,EAA1B,CAFqB,CAE+B;;IAIpD,IAAIpD,IAAI,GAAG,KAAK3C,OAAL,CAAa2C,IAAb,GAAoBP,GAAG,CAACQ,QAAJ,GAAe,KAAK5C,OAAL,CAAa2C,IAA5B,CAApB,GAAwDP,GAAG,CAACS,MAAJ,CAAWC,WAA9E;IACAH,IAAI,CAACqD,WAAL,CAAiB,KAAK9F,OAAtB;IAEAkC,GAAG,CAAC6D,GAAJ,CAAQ,KAAKxE,SAAL,EAAR,EAA0B,IAA1B;IAEA,KAAKvB,OAAL,GAAe,IAAf,CAXqB,CAcrB;;IACAR,MAAM,GAAG,EAAT;IAEA0C,GAAG,CAACyC,eAAJ,CAAoBqB,MAApB;IACA9D,GAAG,CAAC2C,QAAJ,CAAamB,MAAb;IACA9D,GAAG,CAAC4C,SAAJ,CAAckB,MAAd;IACA9D,GAAG,CAAC6C,eAAJ,CAAoBiB,MAApB;IACA9D,GAAG,CAAC8C,OAAJ,CAAYgB,MAAZ;IACA9D,GAAG,CAAC+C,QAAJ,CAAae,MAAb;EAIH,CA5N0B;EA8N3B;EACAL,KAAK,EAAE,UAAUzD,GAAV,EAAe;IAClBA,GAAG,CAAC+D,QAAJ,CAAa,IAAb;IACA,OAAO,IAAP;EACH,CAlO0B;EAoO3B;EACAC,gBAAgB,EAAE,UAAUC,MAAV,EAAkB;IAChC,OAAO;MACHrF,CAAC,EAAEqF,MAAM,CAAChB,GAAP,GAAa,OAAb,GAAuBiB,IAAI,CAACC,EAA5B,GAAiC,GADjC;MAEHrF,CAAC,EAAEoF,IAAI,CAACE,GAAL,CAASF,IAAI,CAACG,GAAL,CAAS,CAAC,KAAKJ,MAAM,CAACf,GAAb,IAAoBgB,IAAI,CAACC,EAAzB,GAA8B,GAAvC,CAAT,IAAwD;IAFxD,CAAP;EAIH,CA1O0B;EA4O3B;EACA5F,SAAS,EAAE,YAAY;IACnB;IACA,IAAI4B,IAAI,GAAG,KAAKtC,IAAL,CAAUuC,OAAV,EAAX;;IACA,IAAIkE,MAAM,GAAG,KAAKzG,IAAL,CAAU0G,SAAV,EAAb;;IACA,IAAIC,IAAI,GAAG,KAAK3G,IAAL,CAAU4G,OAAV,EAAX;;IAEA,IAAIC,MAAM,GAAG,KAAKV,gBAAL,CAAsB,KAAKnG,IAAL,CAAU8G,SAAV,EAAtB,CAAb;IACA,IAAIC,MAAM,GAAG,KAAKZ,gBAAL,CAAsB,KAAKnG,IAAL,CAAUoE,sBAAV,CAAiC,KAAKpE,IAAL,CAAUuC,OAAV,EAAjC,CAAtB,CAAb;IAEA,IAAIjC,GAAG,GAAG,KAAKH,SAAL,IAAkB,IAA5B;IACAG,GAAG,CAAC0G,WAAJ,IAAmB1G,GAAG,CAAC0G,WAAJ,CAAgB;MAC/BC,KAAK,EAAE,IADwB;MAE/BC,MAAM,EAAE,KAAKjH,OAFkB;MAG/BwG,MAAM,EAAEA,MAHuB;MAI/BnE,IAAI,EAAEA,IAJyB;MAK/BqE,IAAI,EAAEA,IALyB;MAM/BE,MAAM,EAAEA,MANuB;MAO/BE,MAAM,EAAEA;IAPuB,CAAhB,CAAnB;IASA,KAAK7G,MAAL,GAAc,IAAd;EACH,CAjQ0B;EAqQ3B;EACA+B,YAAY,EAAE,UAAU+B,CAAV,EAAa;IACvB,IAAImD,KAAK,GAAG,KAAKnH,IAAL,CAAUoH,YAAV,CAAuBpD,CAAC,CAAC2C,IAAzB,CAAZ;;IACA,IAAIU,MAAM,GAAG,KAAKrH,IAAL,CAAUsH,sBAAV,CAAiC,KAAKtH,IAAL,CAAU0G,SAAV,GAAsBa,YAAtB,EAAjC,EAAuEvD,CAAC,CAAC2C,IAAzE,EAA+E3C,CAAC,CAAC6C,MAAjF,CAAb;;IAEAvH,CAAC,CAACgC,OAAF,CAAUkG,YAAV,CAAuB,KAAKvH,OAA5B,EAAqCoH,MAArC,EAA6CF,KAA7C;EACH;AA3Q0B,CAAf,CAAhB;;AA0RA,MAAMM,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpI,QAAQ,CAAC,KAAD,CAA1C;EAGA,MAAMgE,GAAG,GAAGlE,iBAAiB,EAA7B;EAcAG,SAAS,CAAC,MAAM;IAEhB,MAAMoI,gBAAgB,GAAGrE,GAAG,CAACsE,gBAAJ,IAAwBtE,GAAG,CAACpB,GAArD;IACA,MAAM2F,cAAc,GAAG,IAAIxI,CAAC,CAACK,WAAN,EAAvB;IAOIiI,gBAAgB,CAAC1B,QAAjB,CAA0B4B,cAA1B;IAIAC,OAAO,CAACxB,GAAR,CAAYuB,cAAc,CAAC7H,OAAf,CAAuBsD,GAAnC;IACAwE,OAAO,CAACxB,GAAR,CAAY,aAAZ,EAA2B9G,MAA3B;IAGA,OAAO,MAAM;MACTmI,gBAAgB,CAACI,WAAjB,CAA6BF,cAA7B;IAIH,CALD;EAQC,CA1BI,CAAT;AAiCH,CAnDD;;GAAML,S;UAIUpI,iB;;;KAJVoI,S;AAqDN,SAAQhI,MAAR;AACA,eAAegI,SAAf"},"metadata":{},"sourceType":"module"}