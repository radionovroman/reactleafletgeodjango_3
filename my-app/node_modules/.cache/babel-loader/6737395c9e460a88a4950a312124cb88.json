{"ast":null,"code":"var $ = require('../internals/export');\n\nvar global = require('../internals/global');\n\nvar anObject = require('../internals/an-object');\n\nvar numberIsFinite = require('../internals/number-is-finite');\n\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar SEEDED_RANDOM = 'Seeded Random';\nvar SEEDED_RANDOM_GENERATOR = SEEDED_RANDOM + ' Generator';\nvar SEED_TYPE_ERROR = 'Math.seededPRNG() argument should have a \"seed\" field with a finite value.';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SEEDED_RANDOM_GENERATOR);\nvar TypeError = global.TypeError;\nvar $SeededRandomGenerator = createIteratorConstructor(function SeededRandomGenerator(seed) {\n  setInternalState(this, {\n    type: SEEDED_RANDOM_GENERATOR,\n    seed: seed % 2147483647\n  });\n}, SEEDED_RANDOM, function next() {\n  var state = getInternalState(this);\n  var seed = state.seed = (state.seed * 1103515245 + 12345) % 2147483647;\n  return {\n    value: (seed & 1073741823) / 1073741823,\n    done: false\n  };\n}); // `Math.seededPRNG` method\n// https://github.com/tc39/proposal-seeded-random\n// based on https://github.com/tc39/proposal-seeded-random/blob/78b8258835b57fc2100d076151ab506bc3202ae6/demo.html\n\n$({\n  target: 'Math',\n  stat: true,\n  forced: true\n}, {\n  seededPRNG: function seededPRNG(it) {\n    var seed = anObject(it).seed;\n    if (!numberIsFinite(seed)) throw TypeError(SEED_TYPE_ERROR);\n    return new $SeededRandomGenerator(seed);\n  }\n});","map":{"version":3,"names":["$","require","global","anObject","numberIsFinite","createIteratorConstructor","InternalStateModule","SEEDED_RANDOM","SEEDED_RANDOM_GENERATOR","SEED_TYPE_ERROR","setInternalState","set","getInternalState","getterFor","TypeError","$SeededRandomGenerator","SeededRandomGenerator","seed","type","next","state","value","done","target","stat","forced","seededPRNG","it"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/core-js/modules/esnext.math.seeded-prng.js"],"sourcesContent":["var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar anObject = require('../internals/an-object');\nvar numberIsFinite = require('../internals/number-is-finite');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar SEEDED_RANDOM = 'Seeded Random';\nvar SEEDED_RANDOM_GENERATOR = SEEDED_RANDOM + ' Generator';\nvar SEED_TYPE_ERROR = 'Math.seededPRNG() argument should have a \"seed\" field with a finite value.';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SEEDED_RANDOM_GENERATOR);\nvar TypeError = global.TypeError;\n\nvar $SeededRandomGenerator = createIteratorConstructor(function SeededRandomGenerator(seed) {\n  setInternalState(this, {\n    type: SEEDED_RANDOM_GENERATOR,\n    seed: seed % 2147483647\n  });\n}, SEEDED_RANDOM, function next() {\n  var state = getInternalState(this);\n  var seed = state.seed = (state.seed * 1103515245 + 12345) % 2147483647;\n  return { value: (seed & 1073741823) / 1073741823, done: false };\n});\n\n// `Math.seededPRNG` method\n// https://github.com/tc39/proposal-seeded-random\n// based on https://github.com/tc39/proposal-seeded-random/blob/78b8258835b57fc2100d076151ab506bc3202ae6/demo.html\n$({ target: 'Math', stat: true, forced: true }, {\n  seededPRNG: function seededPRNG(it) {\n    var seed = anObject(it).seed;\n    if (!numberIsFinite(seed)) throw TypeError(SEED_TYPE_ERROR);\n    return new $SeededRandomGenerator(seed);\n  }\n});\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAII,yBAAyB,GAAGJ,OAAO,CAAC,0CAAD,CAAvC;;AACA,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,6BAAD,CAAjC;;AAEA,IAAIM,aAAa,GAAG,eAApB;AACA,IAAIC,uBAAuB,GAAGD,aAAa,GAAG,YAA9C;AACA,IAAIE,eAAe,GAAG,4EAAtB;AACA,IAAIC,gBAAgB,GAAGJ,mBAAmB,CAACK,GAA3C;AACA,IAAIC,gBAAgB,GAAGN,mBAAmB,CAACO,SAApB,CAA8BL,uBAA9B,CAAvB;AACA,IAAIM,SAAS,GAAGZ,MAAM,CAACY,SAAvB;AAEA,IAAIC,sBAAsB,GAAGV,yBAAyB,CAAC,SAASW,qBAAT,CAA+BC,IAA/B,EAAqC;EAC1FP,gBAAgB,CAAC,IAAD,EAAO;IACrBQ,IAAI,EAAEV,uBADe;IAErBS,IAAI,EAAEA,IAAI,GAAG;EAFQ,CAAP,CAAhB;AAID,CALqD,EAKnDV,aALmD,EAKpC,SAASY,IAAT,GAAgB;EAChC,IAAIC,KAAK,GAAGR,gBAAgB,CAAC,IAAD,CAA5B;EACA,IAAIK,IAAI,GAAGG,KAAK,CAACH,IAAN,GAAa,CAACG,KAAK,CAACH,IAAN,GAAa,UAAb,GAA0B,KAA3B,IAAoC,UAA5D;EACA,OAAO;IAAEI,KAAK,EAAE,CAACJ,IAAI,GAAG,UAAR,IAAsB,UAA/B;IAA2CK,IAAI,EAAE;EAAjD,CAAP;AACD,CATqD,CAAtD,C,CAWA;AACA;AACA;;AACAtB,CAAC,CAAC;EAAEuB,MAAM,EAAE,MAAV;EAAkBC,IAAI,EAAE,IAAxB;EAA8BC,MAAM,EAAE;AAAtC,CAAD,EAA+C;EAC9CC,UAAU,EAAE,SAASA,UAAT,CAAoBC,EAApB,EAAwB;IAClC,IAAIV,IAAI,GAAGd,QAAQ,CAACwB,EAAD,CAAR,CAAaV,IAAxB;IACA,IAAI,CAACb,cAAc,CAACa,IAAD,CAAnB,EAA2B,MAAMH,SAAS,CAACL,eAAD,CAAf;IAC3B,OAAO,IAAIM,sBAAJ,CAA2BE,IAA3B,CAAP;EACD;AAL6C,CAA/C,CAAD"},"metadata":{},"sourceType":"script"}