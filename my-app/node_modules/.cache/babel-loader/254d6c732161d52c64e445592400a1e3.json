{"ast":null,"code":"import * as DomEvent from './DomEvent';\nimport Browser from '../core/Browser';\n/*\n * Extends L.DomEvent to provide touch support for Internet Explorer and Windows-based devices.\n */\n\nvar POINTER_DOWN = Browser.msPointer ? 'MSPointerDown' : 'pointerdown';\nvar POINTER_MOVE = Browser.msPointer ? 'MSPointerMove' : 'pointermove';\nvar POINTER_UP = Browser.msPointer ? 'MSPointerUp' : 'pointerup';\nvar POINTER_CANCEL = Browser.msPointer ? 'MSPointerCancel' : 'pointercancel';\nvar pEvent = {\n  touchstart: POINTER_DOWN,\n  touchmove: POINTER_MOVE,\n  touchend: POINTER_UP,\n  touchcancel: POINTER_CANCEL\n};\nvar handle = {\n  touchstart: _onPointerStart,\n  touchmove: _handlePointer,\n  touchend: _handlePointer,\n  touchcancel: _handlePointer\n};\nvar _pointers = {};\nvar _pointerDocListener = false; // Provides a touch events wrapper for (ms)pointer events.\n// ref https://www.w3.org/TR/pointerevents/ https://www.w3.org/Bugs/Public/show_bug.cgi?id=22890\n\nexport function addPointerListener(obj, type, handler) {\n  if (type === 'touchstart') {\n    _addPointerDocListener();\n  }\n\n  if (!handle[type]) {\n    console.warn('wrong event specified:', type);\n    return L.Util.falseFn;\n  }\n\n  handler = handle[type].bind(this, handler);\n  obj.addEventListener(pEvent[type], handler, false);\n  return handler;\n}\nexport function removePointerListener(obj, type, handler) {\n  if (!pEvent[type]) {\n    console.warn('wrong event specified:', type);\n    return;\n  }\n\n  obj.removeEventListener(pEvent[type], handler, false);\n}\n\nfunction _globalPointerDown(e) {\n  _pointers[e.pointerId] = e;\n}\n\nfunction _globalPointerMove(e) {\n  if (_pointers[e.pointerId]) {\n    _pointers[e.pointerId] = e;\n  }\n}\n\nfunction _globalPointerUp(e) {\n  delete _pointers[e.pointerId];\n}\n\nfunction _addPointerDocListener() {\n  // need to keep track of what pointers and how many are active to provide e.touches emulation\n  if (!_pointerDocListener) {\n    // we listen document as any drags that end by moving the touch off the screen get fired there\n    document.addEventListener(POINTER_DOWN, _globalPointerDown, true);\n    document.addEventListener(POINTER_MOVE, _globalPointerMove, true);\n    document.addEventListener(POINTER_UP, _globalPointerUp, true);\n    document.addEventListener(POINTER_CANCEL, _globalPointerUp, true);\n    _pointerDocListener = true;\n  }\n}\n\nfunction _handlePointer(handler, e) {\n  if (e.pointerType === (e.MSPOINTER_TYPE_MOUSE || 'mouse')) {\n    return;\n  }\n\n  e.touches = [];\n\n  for (var i in _pointers) {\n    e.touches.push(_pointers[i]);\n  }\n\n  e.changedTouches = [e];\n  handler(e);\n}\n\nfunction _onPointerStart(handler, e) {\n  // IE10 specific: MsTouch needs preventDefault. See #2000\n  if (e.MSPOINTER_TYPE_TOUCH && e.pointerType === e.MSPOINTER_TYPE_TOUCH) {\n    DomEvent.preventDefault(e);\n  }\n\n  _handlePointer(handler, e);\n}","map":{"version":3,"names":["DomEvent","Browser","POINTER_DOWN","msPointer","POINTER_MOVE","POINTER_UP","POINTER_CANCEL","pEvent","touchstart","touchmove","touchend","touchcancel","handle","_onPointerStart","_handlePointer","_pointers","_pointerDocListener","addPointerListener","obj","type","handler","_addPointerDocListener","console","warn","L","Util","falseFn","bind","addEventListener","removePointerListener","removeEventListener","_globalPointerDown","e","pointerId","_globalPointerMove","_globalPointerUp","document","pointerType","MSPOINTER_TYPE_MOUSE","touches","i","push","changedTouches","MSPOINTER_TYPE_TOUCH","preventDefault"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/leaflet/src/dom/DomEvent.Pointer.js"],"sourcesContent":["import * as DomEvent from './DomEvent';\nimport Browser from '../core/Browser';\n\n/*\n * Extends L.DomEvent to provide touch support for Internet Explorer and Windows-based devices.\n */\n\nvar POINTER_DOWN =   Browser.msPointer ? 'MSPointerDown'   : 'pointerdown';\nvar POINTER_MOVE =   Browser.msPointer ? 'MSPointerMove'   : 'pointermove';\nvar POINTER_UP =     Browser.msPointer ? 'MSPointerUp'     : 'pointerup';\nvar POINTER_CANCEL = Browser.msPointer ? 'MSPointerCancel' : 'pointercancel';\nvar pEvent = {\n\ttouchstart  : POINTER_DOWN,\n\ttouchmove   : POINTER_MOVE,\n\ttouchend    : POINTER_UP,\n\ttouchcancel : POINTER_CANCEL\n};\nvar handle = {\n\ttouchstart  : _onPointerStart,\n\ttouchmove   : _handlePointer,\n\ttouchend    : _handlePointer,\n\ttouchcancel : _handlePointer\n};\nvar _pointers = {};\nvar _pointerDocListener = false;\n\n// Provides a touch events wrapper for (ms)pointer events.\n// ref https://www.w3.org/TR/pointerevents/ https://www.w3.org/Bugs/Public/show_bug.cgi?id=22890\n\nexport function addPointerListener(obj, type, handler) {\n\tif (type === 'touchstart') {\n\t\t_addPointerDocListener();\n\t}\n\tif (!handle[type]) {\n\t\tconsole.warn('wrong event specified:', type);\n\t\treturn L.Util.falseFn;\n\t}\n\thandler = handle[type].bind(this, handler);\n\tobj.addEventListener(pEvent[type], handler, false);\n\treturn handler;\n}\n\nexport function removePointerListener(obj, type, handler) {\n\tif (!pEvent[type]) {\n\t\tconsole.warn('wrong event specified:', type);\n\t\treturn;\n\t}\n\tobj.removeEventListener(pEvent[type], handler, false);\n}\n\nfunction _globalPointerDown(e) {\n\t_pointers[e.pointerId] = e;\n}\n\nfunction _globalPointerMove(e) {\n\tif (_pointers[e.pointerId]) {\n\t\t_pointers[e.pointerId] = e;\n\t}\n}\n\nfunction _globalPointerUp(e) {\n\tdelete _pointers[e.pointerId];\n}\n\nfunction _addPointerDocListener() {\n\t// need to keep track of what pointers and how many are active to provide e.touches emulation\n\tif (!_pointerDocListener) {\n\t\t// we listen document as any drags that end by moving the touch off the screen get fired there\n\t\tdocument.addEventListener(POINTER_DOWN, _globalPointerDown, true);\n\t\tdocument.addEventListener(POINTER_MOVE, _globalPointerMove, true);\n\t\tdocument.addEventListener(POINTER_UP, _globalPointerUp, true);\n\t\tdocument.addEventListener(POINTER_CANCEL, _globalPointerUp, true);\n\n\t\t_pointerDocListener = true;\n\t}\n}\n\nfunction _handlePointer(handler, e) {\n\tif (e.pointerType === (e.MSPOINTER_TYPE_MOUSE || 'mouse')) { return; }\n\n\te.touches = [];\n\tfor (var i in _pointers) {\n\t\te.touches.push(_pointers[i]);\n\t}\n\te.changedTouches = [e];\n\n\thandler(e);\n}\n\nfunction _onPointerStart(handler, e) {\n\t// IE10 specific: MsTouch needs preventDefault. See #2000\n\tif (e.MSPOINTER_TYPE_TOUCH && e.pointerType === e.MSPOINTER_TYPE_TOUCH) {\n\t\tDomEvent.preventDefault(e);\n\t}\n\t_handlePointer(handler, e);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}