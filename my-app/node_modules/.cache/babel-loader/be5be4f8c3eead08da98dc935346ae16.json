{"ast":null,"code":"var _jsxFileName = \"/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\nimport axios from \"axios\";\nimport { Alert, Spinner } from \"react-bootstrap\";\nimport useSWR from \"swr\";\nimport { Icon } from \"leaflet/dist/leaflet-src.esm\";\nimport { GeoJSON } from 'react-leaflet';\nimport { preventDefault } from \"leaflet/src/dom/DomEvent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar url = \"http://127.0.0.1:8000/api/world\";\n\nconst MyData_2 = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n\n  const updateName = event => {\n    //if (event.key === 'Enter'){\n    setName(event.target.value); //else {setName(\"\")};\n    //console.log(name)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    onChange: updateName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyData_2, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = MyData_2;\n\nconst MyData = (props, event) => {\n  _s2();\n\n  // create state variable to hold data when it is fetched\n  let url_1 = \"\"; //};\n  //if (MyData_2.name === \"\") {\n  //url_1 = url\n  //} else {\n  //url_1 = url.concat(MyData_2.name + \"/\")\n  //};\n\n  const [data, setData] = React.useState(); // useEffect to fetch data on mount\n\n  useEffect(() => {\n    // async function!\n    const getData = async () => {\n      // 'await' the data\n      const response = await axios.get(url + \"/\" + props.name); // save data to state\n\n      setData(response.data);\n    };\n\n    getData();\n  }, [props.name]); // render react-leaflet GeoJSON when the data is ready\n\n  if (data) {\n    //return <input type={\"text\"} value={name} onChange={updateName}/>;\n    return /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  } else {\n    //return <input type={\"text\"} value={name} onChange={updateName}/>;\n    return null;\n  }\n};\n\n_s2(MyData, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c2 = MyData;\n\nfunction App(event) {\n  _s3();\n\n  const [name, setName] = useState(\"\");\n\n  const updateName = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setName(event.target.value);\n      console.log(event.target.value);\n    } else {\n      setName(\"\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(MyData, {\n      name: name + \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 10\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 2,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(MyData, {\n        name: name + \"/\",\n        onKeyDown: updateName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(App, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyData_2\");\n$RefreshReg$(_c2, \"MyData\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","MapContainer","TileLayer","useMap","Marker","Popup","axios","Alert","Spinner","useSWR","Icon","GeoJSON","preventDefault","url","MyData_2","props","name","setName","updateName","event","target","value","MyData","url_1","data","setData","getData","response","get","App","key","console","log"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet' ;\nimport axios from \"axios\";\nimport {Alert, Spinner} from \"react-bootstrap\";\nimport useSWR from \"swr\";\nimport {Icon} from \"leaflet/dist/leaflet-src.esm\";\nimport { GeoJSON } from 'react-leaflet';\nimport {preventDefault} from \"leaflet/src/dom/DomEvent\";\n\n\n\n\nvar url = \"http://127.0.0.1:8000/api/world\"\n\n\n\n\n\nconst MyData_2 = (props) => {\n  const [name, setName] = useState(\"\");\n\n  const updateName = (event) => {\n\n    //if (event.key === 'Enter'){\n    setName(event.target.value);\n   //else {setName(\"\")};\n\n\n  //console.log(name)\n}\nreturn (\n\n\n    <input type={\"text\"}  onChange={updateName}/>)\n};\n\n\n\nconst MyData = (props, event) => {\n  // create state variable to hold data when it is fetched\n  let url_1 = \"\"\n\n\n\n\n\n\n\n\n  //};\n\n  //if (MyData_2.name === \"\") {\n    //url_1 = url\n  //} else {\n    //url_1 = url.concat(MyData_2.name + \"/\")\n  //};\n\n\n\n\n  const [data, setData] = React.useState();\n\n    // useEffect to fetch data on mount\n\n    useEffect(() => {\n      // async function!\n\n      const getData = async () => {\n        // 'await' the data\n        const response = await axios.get(url + \"/\" + props.name);\n        // save data to state\n        setData(response.data);\n      };\n      getData();\n    }, [props.name]);\n\n\n\n  // render react-leaflet GeoJSON when the data is ready\n  if (data) {\n    //return <input type={\"text\"} value={name} onChange={updateName}/>;\n\n    return <GeoJSON data={data} />;\n\n\n  } else {\n    //return <input type={\"text\"} value={name} onChange={updateName}/>;\n    return null;\n\n\n  }\n};\n\n\nfunction App(event) {\n\n\n\n  const [name, setName] = useState(\"\");\n\n\n\n  const updateName = (event) => {\n\n    if (event.key === 'Enter'){\n      event.preventDefault();\n    setName(event.target.value)\n\n    console.log(event.target.value)\n\n  }\n  else {setName(\"\")}\n  return <MyData name={name + \"/\"}/>\n};\n\n\n  return (\n  <div>\n  <input type={\"text\"}/>\n\n\n    <MapContainer center={[51.505, -0.09]} zoom={2} scrollWheelZoom={true}>\n  <TileLayer\n    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n\n      <MyData name={name + \"/\"} onKeyDown={updateName}  />\n\n  </MapContainer>\n\n\n</div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}