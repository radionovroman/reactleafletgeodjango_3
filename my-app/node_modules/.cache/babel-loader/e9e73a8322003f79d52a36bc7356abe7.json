{"ast":null,"code":"var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport { sExpr } from './process';\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n\n  if (!(outName in obj) && inName in obj) {\n    obj[outName] = obj[inName];\n\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n\n  if (wkt.AXIS) {\n    var axisOrder = '';\n\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n\n      if (axis[0].indexOf('north') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north') {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south') {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east') {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west') {\n        axisOrder += 'w';\n      }\n    }\n\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert * wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n\n  var geogcs = wkt.GEOGCS;\n\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n\n      wkt.datumCode = 'wgs84';\n    }\n\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, -6);\n    }\n\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, -8);\n    }\n\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n\n    if (~wkt.datumCode.indexOf('tm65') || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n\n  var renamer = function (a) {\n    return rename(wkt, a);\n  };\n\n  var list = [['standard_parallel_1', 'Standard_Parallel_1'], ['standard_parallel_1', 'Latitude of 1st standard parallel'], ['standard_parallel_2', 'Standard_Parallel_2'], ['standard_parallel_2', 'Latitude of 2nd standard parallel'], ['false_easting', 'False_Easting'], ['false_easting', 'False easting'], ['false-easting', 'Easting at false origin'], ['false_northing', 'False_Northing'], ['false_northing', 'False northing'], ['false_northing', 'Northing at false origin'], ['central_meridian', 'Central_Meridian'], ['central_meridian', 'Longitude of natural origin'], ['central_meridian', 'Longitude of false origin'], ['latitude_of_origin', 'Latitude_Of_Origin'], ['latitude_of_origin', 'Central_Parallel'], ['latitude_of_origin', 'Latitude of natural origin'], ['latitude_of_origin', 'Latitude of false origin'], ['scale_factor', 'Scale_Factor'], ['k0', 'scale_factor'], ['latitude_of_center', 'Latitude_Of_Center'], ['latitude_of_center', 'Latitude_of_center'], ['lat0', 'latitude_of_center', d2r], ['longitude_of_center', 'Longitude_Of_Center'], ['longitude_of_center', 'Longitude_of_center'], ['longc', 'longitude_of_center', d2r], ['x0', 'false_easting', toMeter], ['y0', 'false_northing', toMeter], ['long0', 'central_meridian', d2r], ['lat0', 'latitude_of_origin', d2r], ['lat0', 'standard_parallel_1', d2r], ['lat1', 'standard_parallel_1', d2r], ['lat2', 'standard_parallel_2', d2r], ['azimuth', 'Azimuth'], ['alpha', 'azimuth', d2r], ['srsCode', 'name']];\n  list.forEach(renamer);\n\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\n\nexport default function (wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}","map":{"version":3,"names":["D2R","parser","sExpr","rename","obj","params","outName","inName","length","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","Object","keys","AXIS","axisOrder","i","ii","axis","toLowerCase","indexOf","UNIT","units","name","convert","DATUM","SPHEROID","to_meter","a","geogcs","GEOGCS","datumCode","slice","sphere","ellps","replace","rf","parseFloat","TOWGS84","datum_params","b","isFinite","toMeter","ratio","renamer","list","forEach","long0","longc","lat_ts","lat1","lat0","lisp","shift","unshift"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/wkt-parser/index.js"],"sourcesContent":["var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}