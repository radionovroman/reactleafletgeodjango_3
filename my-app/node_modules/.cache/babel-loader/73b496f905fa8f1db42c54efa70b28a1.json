{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLeafletContext } from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport { useState, useEffect } from \"react\";\nvar points = [];\nL.CustomLayer = L.Layer.extend({\n  // -- initialized is called on prototype\n  initialize: function (options) {\n    this._map = null;\n    this._canvas = null;\n    this._frame = null;\n    this._delegate = null;\n    L.setOptions(this, options);\n  },\n  delegate: function (del) {\n    this._delegate = del;\n    return this;\n  },\n  needRedraw: function () {\n    if (!this._frame) {\n      this._frame = L.Util.requestAnimFrame(this.drawLayer, this);\n    }\n\n    return this;\n  },\n  //-------------------------------------------------------------\n  _onLayerDidResize: function (resizeEvent) {\n    this._canvas.width = resizeEvent.newSize.x;\n    this._canvas.height = resizeEvent.newSize.y;\n  },\n  //-------------------------------------------------------------\n  onLayerDidMove: function () {\n    if (!this._canvasAdded) {\n      return;\n    }\n\n    var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n\n    L.DomUtil.setPosition(this._canvas, topLeft); // Recalculate the coordinates of the points based on the new map position\n\n    points = points.map(function (point) {\n      return [this._map.containerPointToLatLng(L.point(point)).lng, this._map.containerPointToLatLng(L.point(point)).lat];\n    });\n  },\n  //-------------------------------------------------------------\n  getEvents: function () {\n    var events = {\n      resize: this._onLayerDidResize,\n      moveend: this._onLayerDidMove,\n      move: this._onLayerDidMove\n    };\n\n    if (this._map.options.zoomAnimation && L.Browser.any3d) {\n      events.zoomanim = this._animateZoom;\n    }\n\n    return events;\n  },\n  //-------------------------------------------------------------\n  onAdd: function (map) {\n    this._map = map;\n    this._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\n    this.tiles = {};\n\n    var size = this._map.getSize();\n\n    this._canvas.width = size.x;\n    this._canvas.height = size.y;\n    var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n    L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n    let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n    pane.appendChild(this._canvas);\n    map.on(\"move\", function () {\n      points = points.map(function (point) {\n        return [map.containerPointToLatLng(L.point(point)).lng, map.containerPointToLatLng(L.point(point)).lat];\n      });\n    });\n    this._canvasAdded = true;\n    var del = this._delegate || this;\n    del.onLayerDidMount && del.onLayerDidMount(); // -- callback\n\n    const ctx = this._canvas.getContext(\"2d\");\n\n    const rect = this._canvas.getBoundingClientRect();\n\n    let painting = false;\n\n    function startPosition() {\n      painting = true;\n    }\n\n    ;\n\n    function finishedPosition() {\n      painting = false;\n      ctx.beginPath();\n    }\n\n    ;\n\n    function draw(e) {\n      if (!painting) return;\n      ctx.lineWidth = 1;\n      ctx.lineCap = \"round\";\n      const latlng = map.containerPointToLatLng(e.containerPoint);\n      const canvasPoint = map.latLngToContainerPoint(latlng);\n      ctx.lineTo(e.clientX - rect.left, e.clientY - rect.top);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top);\n      map.scrollWheelZoom.disable();\n      map.dragging.disable();\n      map.touchZoom.disable();\n      map.doubleClickZoom.disable();\n      map.boxZoom.disable();\n      map.keyboard.disable();\n      points.push([latlng.lng, latlng.lat]);\n    }\n\n    ;\n\n    this._canvas.addEventListener('mousedown', startPosition);\n\n    this._canvas.addEventListener('mouseup', finishedPosition);\n\n    this._canvas.addEventListener('mousemove', draw);\n\n    this._canvas.style.position = \"absolute\";\n    this._canvas.style.cursor = \"crosshair\";\n\n    this._canvas.addEventListener('mouseup', function (e) {\n      // Create a GeoJSON layer and add it to the map\n      const geojson = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [{\n          \"type\": \"Feature\",\n          \"geometry\": {\n            \"type\": \"LineString\",\n            \"coordinates\": points\n          }\n        }]\n      };\n      L.geoJSON(geojson).addTo(map); // Clear the points array\n\n      points = [];\n    });\n\n    this.needRedraw();\n  },\n  //-------------------------------------------------------------\n  onRemove: function (map) {\n    var del = this._delegate || this;\n    del.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\n\n    let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n    pane.removeChild(this._canvas);\n    map.off(this.getEvents(), this);\n    this._canvas = null; // Clear the points array\n\n    points = [];\n    map.scrollWheelZoom.enable();\n    map.dragging.enable();\n    map.touchZoom.enable();\n    map.doubleClickZoom.enable();\n    map.boxZoom.enable();\n    map.keyboard.enable();\n  },\n  //------------------------------------------------------------\n  addTo: function (map) {\n    map.addLayer(this);\n    return this;\n  },\n  // --------------------------------------------------------------------------------\n  LatLonToMercator: function (latlon) {\n    return {\n      x: latlon.lng * 6378137 * Math.PI / 180,\n      y: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\n    };\n  },\n  //------------------------------------------------------------------------------\n  drawLayer: function () {\n    // -- todo make the viewInfo properties  flat objects.\n    var size = this._map.getSize();\n\n    var bounds = this._map.getBounds();\n\n    var zoom = this._map.getZoom();\n\n    var center = this.LatLonToMercator(this._map.getCenter());\n    var corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\n    var del = this._delegate || this;\n    del.onDrawLayer && del.onDrawLayer({\n      layer: this,\n      canvas: this._canvas,\n      bounds: bounds,\n      size: size,\n      zoom: zoom,\n      center: center,\n      corner: corner\n    });\n    this._frame = null;\n  },\n  //x------------------------------------------------------------------------------\n  _animateZoom: function (e) {\n    var scale = this._map.getZoomScale(e.zoom);\n\n    var offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center);\n\n    L.DomUtil.setTransform(this._canvas, offset, scale);\n  }\n});\n\nconst Map_paint = () => {\n  _s();\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const ctx = useLeafletContext();\n  useEffect(() => {\n    const canvas_container = ctx.overlayContainer || ctx.map;\n    const new_grid_layer = new L.CustomLayer();\n    canvas_container.addLayer(new_grid_layer);\n    console.log(new_grid_layer._canvas.ctx);\n    console.log(\"points are:\", points);\n    return () => {\n      canvas_container.removeLayer(new_grid_layer);\n    };\n  });\n};\n\n_s(Map_paint, \"DX7qMZmz1qqJ5KMtLnld7LKU3ms=\", false, function () {\n  return [useLeafletContext];\n});\n\n_c = Map_paint;\nexport { points };\nexport default Map_paint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map_paint\");","map":{"version":3,"names":["useLeafletContext","L","useState","useEffect","points","CustomLayer","Layer","extend","initialize","options","_map","_canvas","_frame","_delegate","setOptions","delegate","del","needRedraw","Util","requestAnimFrame","drawLayer","_onLayerDidResize","resizeEvent","width","newSize","x","height","y","onLayerDidMove","_canvasAdded","topLeft","containerPointToLayerPoint","DomUtil","setPosition","map","point","containerPointToLatLng","lng","lat","getEvents","events","resize","moveend","_onLayerDidMove","move","zoomAnimation","Browser","any3d","zoomanim","_animateZoom","onAdd","create","tiles","size","getSize","animated","addClass","pane","getPanes","_panes","overlayPane","appendChild","on","onLayerDidMount","ctx","getContext","rect","getBoundingClientRect","painting","startPosition","finishedPosition","beginPath","draw","e","lineWidth","lineCap","latlng","containerPoint","canvasPoint","latLngToContainerPoint","lineTo","clientX","left","clientY","top","stroke","moveTo","scrollWheelZoom","disable","dragging","touchZoom","doubleClickZoom","boxZoom","keyboard","push","addEventListener","style","position","cursor","geojson","geoJSON","addTo","onRemove","onLayerWillUnmount","removeChild","off","enable","addLayer","LatLonToMercator","latlon","Math","PI","log","tan","bounds","getBounds","zoom","getZoom","center","getCenter","corner","onDrawLayer","layer","canvas","scale","getZoomScale","offset","_latLngToNewLayerPoint","getNorthWest","setTransform","Map_paint","isDrawing","setIsDrawing","canvas_container","overlayContainer","new_grid_layer","console","removeLayer"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js"],"sourcesContent":["import {useLeafletContext} from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport {useState, useEffect} from \"react\";\n\n\n\n\n\n\n\n\n\n\nvar points = [];\n\n\nL.CustomLayer = L.Layer.extend({\n\n\n\n    // -- initialized is called on prototype\n    initialize: function (options) {\n        this._map = null;\n        this._canvas = null;\n        this._frame = null;\n        this._delegate = null;\n        L.setOptions(this, options);\n    },\n\n    delegate: function (del) {\n        this._delegate = del;\n        return this;\n    },\n\n    needRedraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this.drawLayer, this);\n        }\n        return this;\n    },\n\n    //-------------------------------------------------------------\n    _onLayerDidResize: function (resizeEvent) {\n        this._canvas.width = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n\n    //-------------------------------------------------------------\n    onLayerDidMove: function () {\n    if (!this._canvasAdded) {\n      return;\n    }\n\n    var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n    L.DomUtil.setPosition(this._canvas, topLeft);\n\n    // Recalculate the coordinates of the points based on the new map position\n    points = points.map(function (point) {\n      return [\n        this._map.containerPointToLatLng(L.point(point)).lng,\n        this._map.containerPointToLatLng(L.point(point)).lat,\n      ];\n    });\n  },\n\n    //-------------------------------------------------------------\n    getEvents: function () {\n        var events = {\n            resize: this._onLayerDidResize,\n            moveend: this._onLayerDidMove,\n            move: this._onLayerDidMove\n        };\n        if (this._map.options.zoomAnimation && L.Browser.any3d) {\n            events.zoomanim = this._animateZoom;\n        }\n\n        return events;\n    },\n    //-------------------------------------------------------------\n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\n        this.tiles = {};\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n        let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n        pane.appendChild(this._canvas);\n\n        map.on(\"move\", function() {\n  points = points.map(function(point) {\n    return [\n      map.containerPointToLatLng(L.point(point)).lng,\n      map.containerPointToLatLng(L.point(point)).lat,\n    ];\n  });\n});\n\n        this._canvasAdded = true;\n\n        var del = this._delegate || this;\n        del.onLayerDidMount && del.onLayerDidMount(); // -- callback\n\n\n\n        const ctx = this._canvas.getContext(\"2d\");\n        const rect = this._canvas.getBoundingClientRect()\n\n\n\n\n\n\n        let painting = false;\n\n        function startPosition() {\n            painting = true\n\n\n        };\n\n        function finishedPosition () {\n            painting = false;\n            ctx.beginPath();\n\n        };\n\n\n        function draw (e) {\n            if(!painting) return;\n            ctx.lineWidth = 1;\n            ctx.lineCap = \"round\";\n            const latlng = map.containerPointToLatLng(e.containerPoint);\n            const canvasPoint = map.latLngToContainerPoint(latlng);\n            ctx.lineTo(e.clientX - rect.left, e.clientY - rect.top);\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top);\n            map.scrollWheelZoom.disable()\n            map.dragging.disable()\n            map.touchZoom.disable()\n            map.doubleClickZoom.disable()\n            map.boxZoom.disable()\n            map.keyboard.disable()\n            points.push([latlng.lng, latlng.lat]);\n        };\n\n        this._canvas.addEventListener('mousedown', startPosition);\n        this._canvas.addEventListener('mouseup', finishedPosition);\n        this._canvas.addEventListener('mousemove', draw);\n        this._canvas.style.position = \"absolute\";\n        this._canvas.style.cursor = \"crosshair\"\n        this._canvas.addEventListener('mouseup', function(e) {\n\n\n\n\n\n            // Create a GeoJSON layer and add it to the map\n    const geojson = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [{\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"LineString\",\n                \"coordinates\": points\n\n            }\n        }]\n    };\n    L.geoJSON(geojson).addTo(map);\n\n    // Clear the points array\n    points = [];\n});\n\n\n\n\n\n\n\n\n\n\n        this.needRedraw();\n\n\n    },\n\n    //-------------------------------------------------------------\n    onRemove: function (map) {\n        var del = this._delegate || this;\n        del.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\n\n\n\n        let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n        pane.removeChild(this._canvas);\n\n        map.off(this.getEvents(), this);\n\n        this._canvas = null;\n\n\n        // Clear the points array\n        points = [];\n\n        map.scrollWheelZoom.enable();\n        map.dragging.enable();\n        map.touchZoom.enable();\n        map.doubleClickZoom.enable();\n        map.boxZoom.enable();\n        map.keyboard.enable();\n\n\n\n    },\n\n    //------------------------------------------------------------\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    // --------------------------------------------------------------------------------\n    LatLonToMercator: function (latlon) {\n        return {\n            x: latlon.lng * 6378137 * Math.PI / 180,\n            y: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\n        };\n    },\n\n    //------------------------------------------------------------------------------\n    drawLayer: function () {\n        // -- todo make the viewInfo properties  flat objects.\n        var size = this._map.getSize();\n        var bounds = this._map.getBounds();\n        var zoom = this._map.getZoom();\n\n        var center = this.LatLonToMercator(this._map.getCenter());\n        var corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\n\n        var del = this._delegate || this;\n        del.onDrawLayer && del.onDrawLayer({\n            layer: this,\n            canvas: this._canvas,\n            bounds: bounds,\n            size: size,\n            zoom: zoom,\n            center: center,\n            corner: corner\n        });\n        this._frame = null;\n    },\n\n\n\n    //x------------------------------------------------------------------------------\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom);\n        var offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center);\n\n        L.DomUtil.setTransform(this._canvas, offset, scale);\n    },\n\n\n\n\n\n});\n\n\n\n\n\n\n\n\nconst Map_paint = () => {\n    const [isDrawing, setIsDrawing] = useState(false)\n\n\n    const ctx = useLeafletContext()\n\n\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n\n    const canvas_container = ctx.overlayContainer || ctx.map\n    const new_grid_layer = new L.CustomLayer\n\n\n\n\n\n\n        canvas_container.addLayer(new_grid_layer)\n\n\n\n        console.log(new_grid_layer._canvas.ctx)\n        console.log(\"points are:\", points)\n\n\n        return () => {\n            canvas_container.removeLayer(new_grid_layer)\n\n\n\n        }\n\n\n        })\n\n\n\n\n\n\n}\n\nexport {points}\nexport default Map_paint"],"mappings":"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"},"metadata":{},"sourceType":"module"}