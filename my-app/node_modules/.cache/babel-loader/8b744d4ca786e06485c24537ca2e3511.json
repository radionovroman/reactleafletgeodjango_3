{"ast":null,"code":"import { toPoint, forward } from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\n\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\n\nexport default Point;","map":{"version":3,"names":["toPoint","forward","Point","x","y","z","Array","isArray","coords","split","parseFloat","console","warn","fromMGRS","mgrsStr","prototype","toMGRS","accuracy"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/proj4/lib/Point.js"],"sourcesContent":["import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,OAAjB,QAA+B,MAA/B;;AAEA,SAASC,KAAT,CAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;EACtB,IAAI,EAAE,gBAAgBH,KAAlB,CAAJ,EAA8B;IAC5B,OAAO,IAAIA,KAAJ,CAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,CAAP;EACD;;EACD,IAAIC,KAAK,CAACC,OAAN,CAAcJ,CAAd,CAAJ,EAAsB;IACpB,KAAKA,CAAL,GAASA,CAAC,CAAC,CAAD,CAAV;IACA,KAAKC,CAAL,GAASD,CAAC,CAAC,CAAD,CAAV;IACA,KAAKE,CAAL,GAASF,CAAC,CAAC,CAAD,CAAD,IAAQ,GAAjB;EACD,CAJD,MAIO,IAAG,OAAOA,CAAP,KAAa,QAAhB,EAA0B;IAC/B,KAAKA,CAAL,GAASA,CAAC,CAACA,CAAX;IACA,KAAKC,CAAL,GAASD,CAAC,CAACC,CAAX;IACA,KAAKC,CAAL,GAASF,CAAC,CAACE,CAAF,IAAO,GAAhB;EACD,CAJM,MAIA,IAAI,OAAOF,CAAP,KAAa,QAAb,IAAyB,OAAOC,CAAP,KAAa,WAA1C,EAAuD;IAC5D,IAAII,MAAM,GAAGL,CAAC,CAACM,KAAF,CAAQ,GAAR,CAAb;IACA,KAAKN,CAAL,GAASO,UAAU,CAACF,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAnB;IACA,KAAKJ,CAAL,GAASM,UAAU,CAACF,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAnB;IACA,KAAKH,CAAL,GAASK,UAAU,CAACF,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAV,IAA6B,GAAtC;EACD,CALM,MAKA;IACL,KAAKL,CAAL,GAASA,CAAT;IACA,KAAKC,CAAL,GAASA,CAAT;IACA,KAAKC,CAAL,GAASA,CAAC,IAAI,GAAd;EACD;;EACDM,OAAO,CAACC,IAAR,CAAa,6DAAb;AACD;;AAEDV,KAAK,CAACW,QAAN,GAAiB,UAASC,OAAT,EAAkB;EACjC,OAAO,IAAIZ,KAAJ,CAAUF,OAAO,CAACc,OAAD,CAAjB,CAAP;AACD,CAFD;;AAGAZ,KAAK,CAACa,SAAN,CAAgBC,MAAhB,GAAyB,UAASC,QAAT,EAAmB;EAC1C,OAAOhB,OAAO,CAAC,CAAC,KAAKE,CAAN,EAAS,KAAKC,CAAd,CAAD,EAAmBa,QAAnB,CAAd;AACD,CAFD;;AAGA,eAAef,KAAf"},"metadata":{},"sourceType":"module"}