{"ast":null,"code":"import adjust_lon from '../common/adjust_lon';\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n\n\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n\n  this.s45 = 0.785398163397448;\n  /* 45 */\n\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + this.e2 * Math.pow(Math.cos(this.fi0), 4) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n/* ellipsoid */\n\n/* calculate xy from lat/lon */\n\n/* Constants, identical to inverse transform function */\n\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n\n  gfi = Math.pow((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat)), this.alfa * this.e / 2);\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  return p;\n}\n/* calculate lat/lon from xy */\n\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n  /* Transformation */\n\n  /* revert y, x*/\n\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n\n  if (iter >= 15) {\n    return null;\n  }\n\n  return p;\n}\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["adjust_lon","init","a","es","e","Math","sqrt","lat0","long0","k0","s45","s90","fi0","e2","alfa","pow","cos","uq","u0","asin","sin","g","k","tan","k1","n0","s0","n","ro0","ad","forward","p","gfi","u","deltav","s","d","eps","ro","lon","x","lat","y","delta_lon","atan","czech","inverse","fi1","ok","tmp","atan2","iter","abs","names"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/proj4/lib/projections/krovak.js"],"sourcesContent":["import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}