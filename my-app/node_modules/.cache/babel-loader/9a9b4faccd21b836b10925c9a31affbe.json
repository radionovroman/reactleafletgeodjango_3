{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLeafletContext } from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport { useState, useEffect } from \"react\";\nvar points = [];\nlet geojsonLayer = L.geoJSON(initialData).addTo(map);\nL.CustomLayer = L.Layer.extend({\n  // -- initialized is called on prototype\n  initialize: function (options) {\n    this._map = null;\n    this._canvas = null;\n    this._frame = null;\n    this._delegate = null;\n    L.setOptions(this, options);\n  },\n  delegate: function (del) {\n    this._delegate = del;\n    return this;\n  },\n  needRedraw: function () {\n    if (!this._frame) {\n      this._frame = L.Util.requestAnimFrame(this.drawLayer, this);\n    }\n\n    return this;\n  },\n  //-------------------------------------------------------------\n  _onLayerDidResize: function (resizeEvent) {\n    this._canvas.width = resizeEvent.newSize.x;\n    this._canvas.height = resizeEvent.newSize.y;\n  },\n  //-------------------------------------------------------------\n  _onLayerDidMove: function () {\n    if (!this._canvasAdded) {\n      return;\n    }\n\n    var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n\n    L.DomUtil.setPosition(this._canvas, topLeft);\n    this.drawLayer();\n  },\n  //-------------------------------------------------------------\n  getEvents: function () {\n    var events = {\n      resize: this._onLayerDidResize,\n      moveend: this._onLayerDidMove,\n      move: this._onLayerDidMove\n    };\n\n    if (this._map.options.zoomAnimation && L.Browser.any3d) {\n      events.zoomanim = this._animateZoom;\n    }\n\n    return events;\n  },\n  //-------------------------------------------------------------\n  onAdd: function (map) {\n    this._map = map;\n    this._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\n    this.tiles = {};\n\n    var size = this._map.getSize();\n\n    this._canvas.width = size.x;\n    this._canvas.height = size.y;\n    var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n    L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n    let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n    pane.appendChild(this._canvas);\n    map.on(this.getEvents(), this);\n    this._canvasAdded = true;\n    var del = this._delegate || this;\n    del.onLayerDidMount && del.onLayerDidMount(); // -- callback\n\n    const ctx = this._canvas.getContext(\"2d\");\n\n    const rect = this._canvas.getBoundingClientRect();\n\n    let painting = false;\n\n    function startPosition() {\n      painting = true;\n    }\n\n    ;\n\n    function finishedPosition() {\n      painting = false;\n      ctx.beginPath();\n    }\n\n    ;\n\n    function draw(e) {\n      if (!painting) return;\n      ctx.lineWidth = 1;\n      ctx.lineCap = \"round\";\n      ctx.lineTo(e.clientX - rect.left, e.clientY - rect.top);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top);\n      map.scrollWheelZoom.disable();\n      map.dragging.disable();\n      map.touchZoom.disable();\n      map.doubleClickZoom.disable();\n      map.boxZoom.disable();\n      map.keyboard.disable();\n      points.push([e.clientX - rect.left, e.clientY - rect.top]); // Convert pixel coordinates to latitudes and longitudes\n\n      const latlngs = points.map(point => {\n        return map.containerPointToLatLng([point[0], point[1]]);\n      }); // Update the coordinates of the GeoJSON layer with the new latlngs\n\n      geojsonLayer.setLatLngs(latlngs);\n    }\n\n    ;\n\n    this._canvas.addEventListener('mousedown', startPosition);\n\n    this._canvas.addEventListener('mouseup', finishedPosition);\n\n    this._canvas.addEventListener('mousemove', draw);\n\n    this._canvas.style.position = \"absolute\";\n    this._canvas.style.cursor = \"crosshair\";\n\n    this._canvas.addEventListener('mouseup', function (e) {\n      // Convert pixel coordinates to latitudes and longitudes\n      const latlngs = points.map(point => {\n        return map.containerPointToLatLng([point[0], point[1]]);\n      }); // Create a GeoJSON layer and add it to the map\n\n      const geojson = {\n        type: 'FeatureCollection',\n        features: [{\n          type: 'Feature',\n          geometry: {\n            type: 'LineString',\n            coordinates: []\n          }\n        }]\n      };\n      geojsonLayer = L.geoJSON(geojson).addTo(map); // create and add the GeoJSON layer\n    }); // Create a GeoJSON layer with the initial data and add it to the map\n\n\n    const initialData = {\n      type: 'FeatureCollection',\n      features: [{\n        type: 'Feature',\n        geometry: {\n          type: 'LineString',\n          coordinates: []\n        }\n      }]\n    };\n    const geojsonLayer = L.geoJSON(initialData).addTo(map);\n    this.needRedraw();\n  },\n  //-------------------------------------------------------------\n  onRemove: function (map) {\n    var del = this._delegate || this;\n    del.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\n\n    let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n    pane.removeChild(this._canvas);\n    map.off(this.getEvents(), this);\n    this._canvas = null; // Clear the points array\n\n    points = [];\n    map.scrollWheelZoom.enable();\n    map.dragging.enable();\n    map.touchZoom.enable();\n    map.doubleClickZoom.enable();\n    map.boxZoom.enable();\n    map.keyboard.enable();\n  },\n  //------------------------------------------------------------\n  addTo: function (map) {\n    map.addLayer(this);\n    return this;\n  },\n  // --------------------------------------------------------------------------------\n  LatLonToMercator: function (latlon) {\n    return {\n      x: latlon.lng * 6378137 * Math.PI / 180,\n      y: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\n    };\n  },\n  //------------------------------------------------------------------------------\n  drawLayer: function () {\n    // -- todo make the viewInfo properties  flat objects.\n    var size = this._map.getSize();\n\n    var bounds = this._map.getBounds();\n\n    var zoom = this._map.getZoom();\n\n    var center = this.LatLonToMercator(this._map.getCenter());\n    var corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\n    var del = this._delegate || this;\n    del.onDrawLayer && del.onDrawLayer({\n      layer: this,\n      canvas: this._canvas,\n      bounds: bounds,\n      size: size,\n      zoom: zoom,\n      center: center,\n      corner: corner\n    });\n    this._frame = null;\n  },\n  //x------------------------------------------------------------------------------\n  _animateZoom: function (e) {\n    var scale = this._map.getZoomScale(e.zoom);\n\n    var offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center);\n\n    L.DomUtil.setTransform(this._canvas, offset, scale);\n  }\n});\n\nconst Map_paint = () => {\n  _s();\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const ctx = useLeafletContext();\n  useEffect(() => {\n    const canvas_container = ctx.overlayContainer || ctx.map;\n    const new_grid_layer = new L.CustomLayer();\n    canvas_container.addLayer(new_grid_layer);\n    console.log(new_grid_layer._canvas.ctx);\n    console.log(\"points are:\", points);\n    return () => {\n      canvas_container.removeLayer(new_grid_layer);\n    };\n  });\n};\n\n_s(Map_paint, \"DX7qMZmz1qqJ5KMtLnld7LKU3ms=\", false, function () {\n  return [useLeafletContext];\n});\n\n_c = Map_paint;\nexport { points };\nexport default Map_paint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map_paint\");","map":{"version":3,"names":["useLeafletContext","L","useState","useEffect","points","geojsonLayer","geoJSON","initialData","addTo","map","CustomLayer","Layer","extend","initialize","options","_map","_canvas","_frame","_delegate","setOptions","delegate","del","needRedraw","Util","requestAnimFrame","drawLayer","_onLayerDidResize","resizeEvent","width","newSize","x","height","y","_onLayerDidMove","_canvasAdded","topLeft","containerPointToLayerPoint","DomUtil","setPosition","getEvents","events","resize","moveend","move","zoomAnimation","Browser","any3d","zoomanim","_animateZoom","onAdd","create","tiles","size","getSize","animated","addClass","pane","getPanes","_panes","overlayPane","appendChild","on","onLayerDidMount","ctx","getContext","rect","getBoundingClientRect","painting","startPosition","finishedPosition","beginPath","draw","e","lineWidth","lineCap","lineTo","clientX","left","clientY","top","stroke","moveTo","scrollWheelZoom","disable","dragging","touchZoom","doubleClickZoom","boxZoom","keyboard","push","latlngs","point","containerPointToLatLng","setLatLngs","addEventListener","style","position","cursor","geojson","type","features","geometry","coordinates","onRemove","onLayerWillUnmount","removeChild","off","enable","addLayer","LatLonToMercator","latlon","lng","Math","PI","log","tan","lat","bounds","getBounds","zoom","getZoom","center","getCenter","corner","onDrawLayer","layer","canvas","scale","getZoomScale","offset","_latLngToNewLayerPoint","getNorthWest","setTransform","Map_paint","isDrawing","setIsDrawing","canvas_container","overlayContainer","new_grid_layer","console","removeLayer"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/src/DrawingArea.js"],"sourcesContent":["import {useLeafletContext} from \"@react-leaflet/core\";\nimport * as L from \"leaflet\";\nimport {useState, useEffect} from \"react\";\n\n\n\n\n\n\n\n\n\n\nvar points = [];\nlet geojsonLayer = L.geoJSON(initialData).addTo(map);\n\n\n\nL.CustomLayer = L.Layer.extend({\n\n\n\n    // -- initialized is called on prototype\n    initialize: function (options) {\n        this._map = null;\n        this._canvas = null;\n        this._frame = null;\n        this._delegate = null;\n        L.setOptions(this, options);\n    },\n\n    delegate: function (del) {\n        this._delegate = del;\n        return this;\n    },\n\n    needRedraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this.drawLayer, this);\n        }\n        return this;\n    },\n\n    //-------------------------------------------------------------\n    _onLayerDidResize: function (resizeEvent) {\n        this._canvas.width = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n\n    //-------------------------------------------------------------\n    _onLayerDidMove: function () {\n    if (!this._canvasAdded) {\n        return;\n    }\n\n    var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n    L.DomUtil.setPosition(this._canvas, topLeft);\n    this.drawLayer();\n},\n\n\n    //-------------------------------------------------------------\n    getEvents: function () {\n        var events = {\n            resize: this._onLayerDidResize,\n            moveend: this._onLayerDidMove,\n            move: this._onLayerDidMove\n        };\n        if (this._map.options.zoomAnimation && L.Browser.any3d) {\n            events.zoomanim = this._animateZoom;\n        }\n\n        return events;\n    },\n    //-------------------------------------------------------------\n    onAdd: function (map) {\n    this._map = map;\n    this._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\n    this.tiles = {};\n\n    var size = this._map.getSize();\n    this._canvas.width = size.x;\n    this._canvas.height = size.y;\n\n    var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n    L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n    let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n    pane.appendChild(this._canvas);\n\n    map.on(this.getEvents(), this);\n\n    this._canvasAdded = true;\n\n    var del = this._delegate || this;\n    del.onLayerDidMount && del.onLayerDidMount(); // -- callback\n\n    const ctx = this._canvas.getContext(\"2d\");\n    const rect = this._canvas.getBoundingClientRect()\n\n    let painting = false;\n\n    function startPosition() {\n        painting = true\n    };\n\n    function finishedPosition () {\n        painting = false;\n        ctx.beginPath();\n    };\n\n    function draw (e) {\n        if(!painting) return;\n        ctx.lineWidth = 1;\n        ctx.lineCap = \"round\";\n        ctx.lineTo(e.clientX - rect.left, e.clientY - rect.top);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top);\n        map.scrollWheelZoom.disable()\n        map.dragging.disable()\n        map.touchZoom.disable()\n        map.doubleClickZoom.disable()\n        map.boxZoom.disable()\n        map.keyboard.disable()\n        points.push([e.clientX - rect.left, e.clientY - rect.top]);\n\n        // Convert pixel coordinates to latitudes and longitudes\n        const latlngs = points.map(point => {\n          return map.containerPointToLatLng([point[0], point[1]]);\n        });\n\n        // Update the coordinates of the GeoJSON layer with the new latlngs\n        geojsonLayer.setLatLngs(latlngs);\n    };\n\n    this._canvas.addEventListener('mousedown', startPosition);\n    this._canvas.addEventListener('mouseup', finishedPosition);\n    this._canvas.addEventListener('mousemove', draw);\n    this._canvas.style.position = \"absolute\";\n    this._canvas.style.cursor = \"crosshair\"\n\n    this._canvas.addEventListener('mouseup', function(e) {\n        // Convert pixel coordinates to latitudes and longitudes\n        const latlngs = points.map(point => {\n            return map.containerPointToLatLng([point[0], point[1]]);\n        });\n\n        // Create a GeoJSON layer and add it to the map\n        const geojson = {\n            type: 'FeatureCollection',\n            features: [\n              {\n                type: 'Feature',\n                geometry: {\n                  type: 'LineString',\n                  coordinates: []\n                }\n              }\n            ]\n        };\n\n        geojsonLayer = L.geoJSON(geojson).addTo(map); // create and add the GeoJSON layer\n    });\n\n    // Create a GeoJSON layer with the initial data and add it to the map\n    const initialData = {\n        type: 'FeatureCollection',\n        features: [\n          {\n            type: 'Feature',\n            geometry: {\n              type: 'LineString',\n              coordinates: []\n            }\n          }\n        ]\n    };\n\n    const geojsonLayer = L.geoJSON(initialData).addTo(map);\n    this.needRedraw();\n},\n\n\n    //-------------------------------------------------------------\n    onRemove: function (map) {\n        var del = this._delegate || this;\n        del.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\n\n\n\n        let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n        pane.removeChild(this._canvas);\n\n        map.off(this.getEvents(), this);\n\n        this._canvas = null;\n\n\n        // Clear the points array\n        points = [];\n\n        map.scrollWheelZoom.enable();\n        map.dragging.enable();\n        map.touchZoom.enable();\n        map.doubleClickZoom.enable();\n        map.boxZoom.enable();\n        map.keyboard.enable();\n\n\n\n    },\n\n    //------------------------------------------------------------\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    // --------------------------------------------------------------------------------\n    LatLonToMercator: function (latlon) {\n        return {\n            x: latlon.lng * 6378137 * Math.PI / 180,\n            y: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\n        };\n    },\n\n    //------------------------------------------------------------------------------\n    drawLayer: function () {\n        // -- todo make the viewInfo properties  flat objects.\n        var size = this._map.getSize();\n        var bounds = this._map.getBounds();\n        var zoom = this._map.getZoom();\n\n        var center = this.LatLonToMercator(this._map.getCenter());\n        var corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\n\n        var del = this._delegate || this;\n        del.onDrawLayer && del.onDrawLayer({\n            layer: this,\n            canvas: this._canvas,\n            bounds: bounds,\n            size: size,\n            zoom: zoom,\n            center: center,\n            corner: corner\n        });\n        this._frame = null;\n    },\n\n\n\n    //x------------------------------------------------------------------------------\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom);\n        var offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center);\n\n        L.DomUtil.setTransform(this._canvas, offset, scale);\n    },\n\n\n\n\n\n});\n\n\n\n\n\n\n\n\nconst Map_paint = () => {\n    const [isDrawing, setIsDrawing] = useState(false)\n\n\n    const ctx = useLeafletContext()\n\n\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n\n    const canvas_container = ctx.overlayContainer || ctx.map\n    const new_grid_layer = new L.CustomLayer\n\n\n\n\n\n\n        canvas_container.addLayer(new_grid_layer)\n\n\n\n        console.log(new_grid_layer._canvas.ctx)\n        console.log(\"points are:\", points)\n\n\n        return () => {\n            canvas_container.removeLayer(new_grid_layer)\n\n\n\n        }\n\n\n        })\n\n\n\n\n\n\n}\n\nexport {points}\nexport default Map_paint"],"mappings":"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"},"metadata":{},"sourceType":"module"}