{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canvasOverlay = exports.CanvasOverlay = void 0;\n\nconst leaflet_1 = require(\"leaflet\");\n/*\n * @class CanvasOverlay\n * @aka L.CanvasOverlay\n * @inherits ImageOverlay\n *\n * Used to load and display a HTML canvas over specific bounds of the map. Extends `ImageOverlay`.\n *\n * A canvas overlay uses the [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API)\n * HTML5 element.\n *\n * @example\n *\n * ```js\n * const canvasEl = document.createElement('canvas'),\n * \tcanvasBounds = [[ 32, -130], [ 13, -100]];\n * L.videoOverlay(canvasEl, canvasBounds ).addTo(map);\n * ```\n */\n\n\nexports.CanvasOverlay = leaflet_1.ImageOverlay.extend({\n  // @section\n  // @aka CanvasOverlay options\n  options: {// No options yet\n  },\n  _initImage: function () {\n    const wasElementSupplied = this._url.tagName === 'CANVAS';\n    const canvas = this._image = wasElementSupplied ? this._url : leaflet_1.DomUtil.create('canvas');\n    console.log({\n      wasElementSupplied,\n      image: this._image,\n      a: this.getElement()\n    });\n    leaflet_1.DomUtil.addClass(canvas, 'leaflet-image-layer');\n\n    if (this._zoomAnimated) {\n      leaflet_1.DomUtil.addClass(canvas, 'leaflet-zoom-animated');\n    }\n\n    if (this.options.className) {\n      leaflet_1.DomUtil.addClass(canvas, this.options.className);\n    }\n\n    canvas.onselectstart = leaflet_1.Util.falseFn;\n    canvas.onmousemove = leaflet_1.Util.falseFn;\n  } // @method getElement(): HTMLCanvasElement\n  // Returns the instance of [`HTMLCanvasElement`](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement)\n  // used by this overlay.\n\n}); // @factory L.canvasOverlay(canvas: HTMLCanvasElement, bounds: LatLngBoundsExpression, options?: CanvasOverlay options)\n// Instantiates an image overlay object given a canvas element and the geographical bounds it is tied to.\n\nfunction canvasOverlay(canvas, bounds, options) {\n  // TODO: type this as extended ImageOverlay\n  return new exports.CanvasOverlay(canvas, bounds, options);\n}\n\nexports.canvasOverlay = canvasOverlay;","map":{"version":3,"names":["Object","defineProperty","exports","value","canvasOverlay","CanvasOverlay","leaflet_1","require","ImageOverlay","extend","options","_initImage","wasElementSupplied","_url","tagName","canvas","_image","DomUtil","create","console","log","image","a","getElement","addClass","_zoomAnimated","className","onselectstart","Util","falseFn","onmousemove","bounds"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/react-leaflet-canvas-overlay/dist/CanvasOverlay.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.canvasOverlay = exports.CanvasOverlay = void 0;\nconst leaflet_1 = require(\"leaflet\");\n/*\n * @class CanvasOverlay\n * @aka L.CanvasOverlay\n * @inherits ImageOverlay\n *\n * Used to load and display a HTML canvas over specific bounds of the map. Extends `ImageOverlay`.\n *\n * A canvas overlay uses the [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API)\n * HTML5 element.\n *\n * @example\n *\n * ```js\n * const canvasEl = document.createElement('canvas'),\n * \tcanvasBounds = [[ 32, -130], [ 13, -100]];\n * L.videoOverlay(canvasEl, canvasBounds ).addTo(map);\n * ```\n */\nexports.CanvasOverlay = leaflet_1.ImageOverlay.extend({\n    // @section\n    // @aka CanvasOverlay options\n    options: {\n    // No options yet\n    },\n    _initImage: function () {\n        const wasElementSupplied = this._url.tagName === 'CANVAS';\n        const canvas = this._image = wasElementSupplied ? this._url : leaflet_1.DomUtil.create('canvas');\n        console.log({ wasElementSupplied, image: this._image, a: this.getElement() });\n        leaflet_1.DomUtil.addClass(canvas, 'leaflet-image-layer');\n        if (this._zoomAnimated) {\n            leaflet_1.DomUtil.addClass(canvas, 'leaflet-zoom-animated');\n        }\n        if (this.options.className) {\n            leaflet_1.DomUtil.addClass(canvas, this.options.className);\n        }\n        canvas.onselectstart = leaflet_1.Util.falseFn;\n        canvas.onmousemove = leaflet_1.Util.falseFn;\n    }\n    // @method getElement(): HTMLCanvasElement\n    // Returns the instance of [`HTMLCanvasElement`](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement)\n    // used by this overlay.\n});\n// @factory L.canvasOverlay(canvas: HTMLCanvasElement, bounds: LatLngBoundsExpression, options?: CanvasOverlay options)\n// Instantiates an image overlay object given a canvas element and the geographical bounds it is tied to.\nfunction canvasOverlay(canvas, bounds, options) {\n    // TODO: type this as extended ImageOverlay\n    return new exports.CanvasOverlay(canvas, bounds, options);\n}\nexports.canvasOverlay = canvasOverlay;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,aAAR,GAAwB,KAAK,CAArD;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,OAAO,CAACG,aAAR,GAAwBC,SAAS,CAACE,YAAV,CAAuBC,MAAvB,CAA8B;EAClD;EACA;EACAC,OAAO,EAAE,CACT;EADS,CAHyC;EAMlDC,UAAU,EAAE,YAAY;IACpB,MAAMC,kBAAkB,GAAG,KAAKC,IAAL,CAAUC,OAAV,KAAsB,QAAjD;IACA,MAAMC,MAAM,GAAG,KAAKC,MAAL,GAAcJ,kBAAkB,GAAG,KAAKC,IAAR,GAAeP,SAAS,CAACW,OAAV,CAAkBC,MAAlB,CAAyB,QAAzB,CAA9D;IACAC,OAAO,CAACC,GAAR,CAAY;MAAER,kBAAF;MAAsBS,KAAK,EAAE,KAAKL,MAAlC;MAA0CM,CAAC,EAAE,KAAKC,UAAL;IAA7C,CAAZ;IACAjB,SAAS,CAACW,OAAV,CAAkBO,QAAlB,CAA2BT,MAA3B,EAAmC,qBAAnC;;IACA,IAAI,KAAKU,aAAT,EAAwB;MACpBnB,SAAS,CAACW,OAAV,CAAkBO,QAAlB,CAA2BT,MAA3B,EAAmC,uBAAnC;IACH;;IACD,IAAI,KAAKL,OAAL,CAAagB,SAAjB,EAA4B;MACxBpB,SAAS,CAACW,OAAV,CAAkBO,QAAlB,CAA2BT,MAA3B,EAAmC,KAAKL,OAAL,CAAagB,SAAhD;IACH;;IACDX,MAAM,CAACY,aAAP,GAAuBrB,SAAS,CAACsB,IAAV,CAAeC,OAAtC;IACAd,MAAM,CAACe,WAAP,GAAqBxB,SAAS,CAACsB,IAAV,CAAeC,OAApC;EACH,CAnBiD,CAoBlD;EACA;EACA;;AAtBkD,CAA9B,CAAxB,C,CAwBA;AACA;;AACA,SAASzB,aAAT,CAAuBW,MAAvB,EAA+BgB,MAA/B,EAAuCrB,OAAvC,EAAgD;EAC5C;EACA,OAAO,IAAIR,OAAO,CAACG,aAAZ,CAA0BU,MAA1B,EAAkCgB,MAAlC,EAA0CrB,OAA1C,CAAP;AACH;;AACDR,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}