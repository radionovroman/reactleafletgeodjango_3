{"ast":null,"code":"import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\n\n\nexport function init() {\n  var con,\n      com,\n      cosph0,\n      D,\n      F,\n      H,\n      L,\n      sinph0,\n      p,\n      J,\n      gamma = 0,\n      gamma0,\n      lamc = 0,\n      lam1 = 0,\n      lam2 = 0,\n      phi1 = 0,\n      phi2 = 0,\n      alpha_c = 0,\n      AB; // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  var alp = false;\n\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle * D2R;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.pi) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\n\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2(S * this.cosgam + V * this.singam, temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = this.a * coords.x + this.x0;\n  coords.y = this.a * coords.y + this.y0;\n  return coords;\n}\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2(Sp * this.cosgam - Vp * this.singam, Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n  return coords;\n}\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["tsfnz","adjust_lon","phi2z","D2R","EPSLN","HALF_PI","TWO_PI","FORTPI","TOL","isTypeA","P","typeAProjections","projectionName","PROJECTION","Object","keys","indexOf","init","con","com","cosph0","D","F","H","L","sinph0","p","J","gamma","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","AB","no_off","no_rot","alp","gam","alpha","rectified_grid_angle","longc","long1","lat1","long2","lat2","Math","abs","lat0","Error","one_es","es","sqrt","sin","cos","B","A","k0","E","pow","e","asin","lam0","tan","pi","atan","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","log","v_pole_s","forward","coords","S","T","U","V","W","temp","u","v","x","y","atan2","a","x0","y0","inverse","Qp","Sp","Tp","Vp","Up","exp","Infinity","names"],"sources":["/Users/romanradionov/PycharmProjects/reactleafletgeodjango/my-app/node_modules/proj4/lib/projections/omerc.js"],"sourcesContent":["import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}