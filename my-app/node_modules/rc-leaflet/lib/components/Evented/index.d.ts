import { PureComponent } from 'react';
import PropTypes from 'prop-types';
import L from 'leaflet';
import { LeafletMouseEventHandlerFn } from '../../util/Types';
interface MouseEvents {
    onClick: LeafletMouseEventHandlerFn;
    onMouseOver: LeafletMouseEventHandlerFn;
    onMouseOut: LeafletMouseEventHandlerFn;
}
export declare type Props = Readonly<Partial<MouseEvents>>;
export default abstract class Evented<T extends L.Evented, P, S> extends PureComponent<Props & P, S> {
    static propTypes: {
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        onMouseOver: PropTypes.Requireable<(...args: any[]) => any>;
        onMouseOut: PropTypes.Requireable<(...args: any[]) => any>;
    };
    protected instance: T;
    private getEventHandler;
    protected bindEvents(): void;
}
export {};
