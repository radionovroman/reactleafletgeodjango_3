"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var prop_types_1 = __importDefault(require("prop-types"));
var leaflet_1 = __importDefault(require("leaflet"));
var creator_1 = require("../DivIcon/creator");
var Path_1 = __importDefault(require("../Path"));
var FeatureGroup_1 = __importDefault(require("../FeatureGroup"));
var PropTypes_1 = require("./PropTypes");
var GeoJSON = /** @class */ (function (_super) {
    __extends(GeoJSON, _super);
    function GeoJSON(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.instance.setZIndex(props.zIndex).setStyle(_this.style);
        return _this;
    }
    GeoJSON.prototype.componentDidUpdate = function (prevProps) {
        var prevData = prevProps.data, prevZIndex = prevProps.zIndex;
        var _a = this.props, data = _a.data, zIndex = _a.zIndex;
        if (data !== prevData) {
            this.instance.clearLayers();
            this.instance.addData(data);
        }
        if (zIndex !== prevZIndex) {
            this.instance.setZIndex(zIndex);
        }
        this.instance.setStyle(this.style);
        _super.prototype.componentDidUpdate.call(this, prevProps);
    };
    Object.defineProperty(GeoJSON.prototype, "style", {
        get: function () {
            var style = this.props.style;
            if (style) {
                if (typeof style === 'object') {
                    return __assign({}, this.theme, style);
                }
                return __assign({}, this.theme, style());
            }
            return this.theme;
        },
        enumerable: true,
        configurable: true
    });
    GeoJSON.prototype.createInstance = function (props) {
        var data = props.data, style = props.style, options = __rest(props, ["data", "style"]);
        return leaflet_1.default.geoJSON(data, options);
    };
    GeoJSON.propTypes = __assign({}, FeatureGroup_1.default.propTypes, { data: prop_types_1.default.oneOfType([
            PropTypes_1.GeometryType,
            PropTypes_1.GeometryCollectionType,
            prop_types_1.default.arrayOf(prop_types_1.default.oneOfType([PropTypes_1.GeometryType, PropTypes_1.GeometryCollectionType])),
            PropTypes_1.FeatureType,
            prop_types_1.default.arrayOf(PropTypes_1.FeatureType),
            PropTypes_1.FeatureCollectionType
        ]), pointToLayer: prop_types_1.default.func, style: prop_types_1.default.oneOfType([prop_types_1.default.shape(Path_1.default.propTypes), prop_types_1.default.func]), onEachFeature: prop_types_1.default.func, filter: prop_types_1.default.func, coordsToLatLng: prop_types_1.default.func });
    GeoJSON.defaultProps = {
        pointToLayer: function (feature, position) {
            return leaflet_1.default.marker(position, { icon: creator_1.defaultIcon });
        }
    };
    return GeoJSON;
}(FeatureGroup_1.default));
exports.default = GeoJSON;
