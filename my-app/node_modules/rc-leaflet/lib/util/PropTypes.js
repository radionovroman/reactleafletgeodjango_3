"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var prop_types_1 = __importDefault(require("prop-types"));
var leaflet_1 = __importDefault(require("leaflet"));
var ClassValueTypes = [prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.bool, prop_types_1.default.object, prop_types_1.default.oneOf([null]), prop_types_1.default.oneOf([undefined])];
var ClassValue = prop_types_1.default.oneOfType(__spread(ClassValueTypes, [prop_types_1.default.arrayOf(prop_types_1.default.oneOfType(ClassValueTypes))]));
exports.ClassValue = ClassValue;
var Zoom = prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.oneOf(['center'])]);
exports.Zoom = Zoom;
var PointObject = prop_types_1.default.shape({ lat: prop_types_1.default.number.isRequired, lng: prop_types_1.default.number.isRequired });
var PointTuple = prop_types_1.default.arrayOf(prop_types_1.default.number.isRequired);
var PixelTuple = PointTuple;
var CRS = prop_types_1.default.shape({
    latLngToPoint: prop_types_1.default.func.isRequired,
    pointToLatLng: prop_types_1.default.func.isRequired,
    project: prop_types_1.default.func.isRequired,
    unproject: prop_types_1.default.func.isRequired,
    scale: prop_types_1.default.func.isRequired,
    zoom: prop_types_1.default.func.isRequired,
    getProjectedBounds: prop_types_1.default.func.isRequired,
    distance: prop_types_1.default.func.isRequired,
    wrapLatLng: prop_types_1.default.func.isRequired,
    code: prop_types_1.default.string,
    wrapLng: PointTuple,
    wrapLat: PointTuple,
    infinite: prop_types_1.default.bool.isRequired
});
exports.CRS = CRS;
var Point = prop_types_1.default.oneOfType([
    PointTuple,
    PointObject,
    prop_types_1.default.instanceOf(leaflet_1.default.LatLng)
]);
exports.Point = Point;
var PointBounds = prop_types_1.default.oneOfType([
    prop_types_1.default.arrayOf(PointTuple),
    prop_types_1.default.instanceOf(leaflet_1.default.LatLngBounds)
]);
exports.PointBounds = PointBounds;
var Pixel = prop_types_1.default.oneOfType([
    PixelTuple,
    prop_types_1.default.instanceOf(leaflet_1.default.Point)
]);
exports.Pixel = Pixel;
var Icon = prop_types_1.default.oneOfType([prop_types_1.default.instanceOf(leaflet_1.default.Icon), prop_types_1.default.instanceOf(leaflet_1.default.DivIcon)]);
exports.Icon = Icon;
var Bounds = prop_types_1.default.oneOfType([
    prop_types_1.default.arrayOf(PointTuple),
    prop_types_1.default.instanceOf(leaflet_1.default.LatLngBounds)
]);
exports.Bounds = Bounds;
var ZoomOptionsShape = {
    animate: prop_types_1.default.bool
};
var PanOptionsShape = {
    animate: prop_types_1.default.bool,
    duration: prop_types_1.default.number,
    easeLinearity: prop_types_1.default.number,
    noMoveStart: prop_types_1.default.bool
};
var BoundsOptionsShape = __assign({ paddingTopLeft: Pixel, paddingBottomRight: Pixel, padding: Pixel, maxZoom: prop_types_1.default.number }, ZoomOptionsShape, PanOptionsShape);
var BoundsOptions = prop_types_1.default.shape(BoundsOptionsShape);
exports.BoundsOptions = BoundsOptions;
var GridLayerOptionsShape = {
    tileSize: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.instanceOf(leaflet_1.default.Point)]),
    opacity: prop_types_1.default.number,
    updateWhenIdle: prop_types_1.default.bool,
    updateWhenZooming: prop_types_1.default.bool,
    updateInterval: prop_types_1.default.number,
    attribution: prop_types_1.default.string,
    zIndex: prop_types_1.default.number,
    bounds: Bounds,
    minZoom: prop_types_1.default.number,
    maxZoom: prop_types_1.default.number,
    noWrap: prop_types_1.default.bool,
    pane: prop_types_1.default.string,
    className: prop_types_1.default.string,
    keepBuffer: prop_types_1.default.number
};
var TileLayerOptionsShape = __assign({ minZoom: prop_types_1.default.number, maxZoom: prop_types_1.default.number, maxNativeZoom: prop_types_1.default.number, minNativeZoom: prop_types_1.default.number, subdomains: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.arrayOf(prop_types_1.default.string)]), errorTileUrl: prop_types_1.default.string, zoomOffset: prop_types_1.default.number, tms: prop_types_1.default.bool, zoomReverse: prop_types_1.default.bool, detectRetina: prop_types_1.default.bool, crossOrigin: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.string]) }, GridLayerOptionsShape);
exports.TileLayerOptionsShape = TileLayerOptionsShape;
