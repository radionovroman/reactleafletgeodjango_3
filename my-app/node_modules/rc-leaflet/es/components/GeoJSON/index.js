var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import PropTypes from 'prop-types';
import L from 'leaflet';
import { defaultIcon } from '../DivIcon/creator';
import Path from '../Path';
import FeatureGroup from '../FeatureGroup';
import { GeometryType, GeometryCollectionType, FeatureType, FeatureCollectionType } from './PropTypes';
var GeoJSON = /** @class */ (function (_super) {
    __extends(GeoJSON, _super);
    function GeoJSON(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.instance.setZIndex(props.zIndex).setStyle(_this.style);
        return _this;
    }
    GeoJSON.prototype.componentDidUpdate = function (prevProps) {
        var prevData = prevProps.data, prevZIndex = prevProps.zIndex;
        var _a = this.props, data = _a.data, zIndex = _a.zIndex;
        if (data !== prevData) {
            this.instance.clearLayers();
            this.instance.addData(data);
        }
        if (zIndex !== prevZIndex) {
            this.instance.setZIndex(zIndex);
        }
        this.instance.setStyle(this.style);
        _super.prototype.componentDidUpdate.call(this, prevProps);
    };
    Object.defineProperty(GeoJSON.prototype, "style", {
        get: function () {
            var style = this.props.style;
            if (style) {
                if (typeof style === 'object') {
                    return __assign({}, this.theme, style);
                }
                return __assign({}, this.theme, style());
            }
            return this.theme;
        },
        enumerable: true,
        configurable: true
    });
    GeoJSON.prototype.createInstance = function (props) {
        var data = props.data, style = props.style, options = __rest(props, ["data", "style"]);
        return L.geoJSON(data, options);
    };
    GeoJSON.propTypes = __assign({}, FeatureGroup.propTypes, { data: PropTypes.oneOfType([
            GeometryType,
            GeometryCollectionType,
            PropTypes.arrayOf(PropTypes.oneOfType([GeometryType, GeometryCollectionType])),
            FeatureType,
            PropTypes.arrayOf(FeatureType),
            FeatureCollectionType
        ]), pointToLayer: PropTypes.func, style: PropTypes.oneOfType([PropTypes.shape(Path.propTypes), PropTypes.func]), onEachFeature: PropTypes.func, filter: PropTypes.func, coordsToLatLng: PropTypes.func });
    GeoJSON.defaultProps = {
        pointToLayer: function (feature, position) {
            return L.marker(position, { icon: defaultIcon });
        }
    };
    return GeoJSON;
}(FeatureGroup));
export default GeoJSON;
