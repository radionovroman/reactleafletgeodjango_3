import PropTypes from 'prop-types';
declare const GeometryType: PropTypes.Requireable<PropTypes.InferProps<{
    type: PropTypes.Validator<string>;
    coordinates: PropTypes.Validator<number[]>;
}> | PropTypes.InferProps<{
    type: PropTypes.Validator<string>;
    coordinates: PropTypes.Validator<number[][]>;
}> | PropTypes.InferProps<{
    type: PropTypes.Validator<string>;
    coordinates: PropTypes.Validator<number[][][]>;
}> | PropTypes.InferProps<{
    type: PropTypes.Validator<string>;
    coordinates: PropTypes.Validator<number[][][][]>;
}>>;
declare const GeometryCollectionType: PropTypes.Requireable<PropTypes.InferProps<{
    type: PropTypes.Validator<string>;
    coordinates: PropTypes.Validator<(PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<number[]>;
    }> | PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<number[][]>;
    }> | PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<number[][][]>;
    }> | PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<number[][][][]>;
    }>)[]>;
}>>;
declare const FeatureType: PropTypes.Requireable<PropTypes.InferProps<{
    id: PropTypes.Requireable<string | number>;
    type: PropTypes.Validator<string>;
    geometry: PropTypes.Validator<PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<number[]>;
    }> | PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<number[][]>;
    }> | PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<number[][][]>;
    }> | PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<number[][][][]>;
    }> | PropTypes.InferProps<{
        type: PropTypes.Validator<string>;
        coordinates: PropTypes.Validator<(PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<number[]>;
        }> | PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<number[][]>;
        }> | PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<number[][][]>;
        }> | PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<number[][][][]>;
        }>)[]>;
    }>>;
    properties: PropTypes.Requireable<object>;
}>>;
declare const FeatureCollectionType: PropTypes.Requireable<PropTypes.InferProps<{
    type: PropTypes.Validator<string>;
    features: PropTypes.Validator<PropTypes.InferProps<{
        id: PropTypes.Requireable<string | number>;
        type: PropTypes.Validator<string>;
        geometry: PropTypes.Validator<PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<number[]>;
        }> | PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<number[][]>;
        }> | PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<number[][][]>;
        }> | PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<number[][][][]>;
        }> | PropTypes.InferProps<{
            type: PropTypes.Validator<string>;
            coordinates: PropTypes.Validator<(PropTypes.InferProps<{
                type: PropTypes.Validator<string>;
                coordinates: PropTypes.Validator<number[]>;
            }> | PropTypes.InferProps<{
                type: PropTypes.Validator<string>;
                coordinates: PropTypes.Validator<number[][]>;
            }> | PropTypes.InferProps<{
                type: PropTypes.Validator<string>;
                coordinates: PropTypes.Validator<number[][][]>;
            }> | PropTypes.InferProps<{
                type: PropTypes.Validator<string>;
                coordinates: PropTypes.Validator<number[][][][]>;
            }>)[]>;
        }>>;
        properties: PropTypes.Requireable<object>;
    }>[]>;
}>>;
export { GeometryType, GeometryCollectionType, FeatureType, FeatureCollectionType };
