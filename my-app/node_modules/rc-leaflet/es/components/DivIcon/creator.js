var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import './default.css';
import L from 'leaflet';
import baseOptions from '../BaseIcon/options';
var defaultOptions = __assign({ className: 'rc-leaflet-icon-default' }, baseOptions);
var creator = function (options) {
    if (!options.className || options.className === defaultOptions.className) {
        return L.divIcon(__assign({}, defaultOptions, options));
    }
    return L.divIcon(options);
};
var defaultIcon = creator(defaultOptions);
export default creator;
export { defaultOptions, defaultIcon };
